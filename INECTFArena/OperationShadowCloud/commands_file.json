{
    "AWSMigrationHub": {
        "AssociateCreatedArtifact": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "CreatedArtifact"
        ],
        "AssociateDiscoveredResource": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "DiscoveredResource"
        ],
        "CreateProgressUpdateStream": [
            "ProgressUpdateStreamName"
        ],
        "DeleteProgressUpdateStream": [
            "ProgressUpdateStreamName"
        ],
        "DescribeApplicationState": [
            "ApplicationId"
        ],
        "DescribeMigrationTask": [
            "ProgressUpdateStream",
            "MigrationTaskName"
        ],
        "DisassociateCreatedArtifact": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "CreatedArtifactName"
        ],
        "DisassociateDiscoveredResource": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "ConfigurationId"
        ],
        "ImportMigrationTask": [
            "ProgressUpdateStream",
            "MigrationTaskName"
        ],
        "ListApplicationStates": "",
        "ListCreatedArtifacts": [
            "ProgressUpdateStream",
            "MigrationTaskName"
        ],
        "ListDiscoveredResources": [
            "ProgressUpdateStream",
            "MigrationTaskName"
        ],
        "ListMigrationTasks": "",
        "ListProgressUpdateStreams": "",
        "NotifyApplicationState": [
            "ApplicationId",
            "Status"
        ],
        "NotifyMigrationTaskState": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "Task",
            "UpdateDateTime",
            "NextUpdateSeconds"
        ],
        "PutResourceAttributes": [
            "ProgressUpdateStream",
            "MigrationTaskName",
            "ResourceAttributeList"
        ]
    },
    "accessanalyzer": {
        "ApplyArchiveRule": [
            "analyzerArn",
            "ruleName"
        ],
        "CancelPolicyGeneration": [
            "jobId"
        ],
        "CheckAccessNotGranted": [
            "policyDocument",
            "access",
            "policyType"
        ],
        "CheckNoNewAccess": [
            "newPolicyDocument",
            "existingPolicyDocument",
            "policyType"
        ],
        "CreateAccessPreview": [
            "analyzerArn",
            "configurations"
        ],
        "CreateAnalyzer": [
            "analyzerName",
            "type"
        ],
        "CreateArchiveRule": [
            "analyzerName",
            "ruleName",
            "filter"
        ],
        "DeleteAnalyzer": [
            "analyzerName"
        ],
        "DeleteArchiveRule": [
            "analyzerName",
            "ruleName"
        ],
        "GetAccessPreview": [
            "accessPreviewId",
            "analyzerArn"
        ],
        "GetAnalyzedResource": [
            "analyzerArn",
            "resourceArn"
        ],
        "GetAnalyzer": [
            "analyzerName"
        ],
        "GetArchiveRule": [
            "analyzerName",
            "ruleName"
        ],
        "GetFinding": [
            "analyzerArn",
            "id"
        ],
        "GetFindingV2": [
            "analyzerArn",
            "id"
        ],
        "GetGeneratedPolicy": [
            "jobId"
        ],
        "ListAccessPreviewFindings": [
            "accessPreviewId",
            "analyzerArn"
        ],
        "ListAccessPreviews": [
            "analyzerArn"
        ],
        "ListAnalyzedResources": [
            "analyzerArn"
        ],
        "ListAnalyzers": "",
        "ListArchiveRules": [
            "analyzerName"
        ],
        "ListFindings": [
            "analyzerArn"
        ],
        "ListFindingsV2": [
            "analyzerArn"
        ],
        "ListPolicyGenerations": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartPolicyGeneration": [
            "policyGenerationDetails"
        ],
        "StartResourceScan": [
            "analyzerArn",
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateArchiveRule": [
            "analyzerName",
            "ruleName",
            "filter"
        ],
        "UpdateFindings": [
            "analyzerArn",
            "status"
        ],
        "ValidatePolicy": [
            "policyDocument",
            "policyType"
        ]
    },
    "account": {
        "DeleteAlternateContact": [
            "AlternateContactType"
        ],
        "DisableRegion": [
            "RegionName"
        ],
        "EnableRegion": [
            "RegionName"
        ],
        "GetAlternateContact": [
            "AlternateContactType"
        ],
        "GetContactInformation": "",
        "GetRegionOptStatus": [
            "RegionName"
        ],
        "ListRegions": "",
        "PutAlternateContact": [
            "AlternateContactType",
            "EmailAddress",
            "Name",
            "PhoneNumber",
            "Title"
        ],
        "PutContactInformation": [
            "ContactInformation"
        ]
    },
    "acm": {
        "AddTagsToCertificate": [
            "CertificateArn",
            "Tags"
        ],
        "DeleteCertificate": [
            "CertificateArn"
        ],
        "DescribeCertificate": [
            "CertificateArn"
        ],
        "ExportCertificate": [
            "CertificateArn",
            "Passphrase"
        ],
        "GetAccountConfiguration": "",
        "GetCertificate": [
            "CertificateArn"
        ],
        "ImportCertificate": [
            "Certificate",
            "PrivateKey"
        ],
        "ListCertificates": "",
        "ListTagsForCertificate": [
            "CertificateArn"
        ],
        "PutAccountConfiguration": [
            "IdempotencyToken"
        ],
        "RemoveTagsFromCertificate": [
            "CertificateArn",
            "Tags"
        ],
        "RenewCertificate": [
            "CertificateArn"
        ],
        "RequestCertificate": [
            "DomainName"
        ],
        "ResendValidationEmail": [
            "CertificateArn",
            "Domain",
            "ValidationDomain"
        ],
        "UpdateCertificateOptions": [
            "CertificateArn",
            "Options"
        ]
    },
    "acm-pca": {
        "CreateCertificateAuthority": [
            "CertificateAuthorityConfiguration",
            "CertificateAuthorityType"
        ],
        "CreateCertificateAuthorityAuditReport": [
            "CertificateAuthorityArn",
            "S3BucketName",
            "AuditReportResponseFormat"
        ],
        "CreatePermission": [
            "CertificateAuthorityArn",
            "Principal",
            "Actions"
        ],
        "DeleteCertificateAuthority": [
            "CertificateAuthorityArn"
        ],
        "DeletePermission": [
            "CertificateAuthorityArn",
            "Principal"
        ],
        "DeletePolicy": [
            "ResourceArn"
        ],
        "DescribeCertificateAuthority": [
            "CertificateAuthorityArn"
        ],
        "DescribeCertificateAuthorityAuditReport": [
            "CertificateAuthorityArn",
            "AuditReportId"
        ],
        "GetCertificate": [
            "CertificateAuthorityArn",
            "CertificateArn"
        ],
        "GetCertificateAuthorityCertificate": [
            "CertificateAuthorityArn"
        ],
        "GetCertificateAuthorityCsr": [
            "CertificateAuthorityArn"
        ],
        "GetPolicy": [
            "ResourceArn"
        ],
        "ImportCertificateAuthorityCertificate": [
            "CertificateAuthorityArn",
            "Certificate"
        ],
        "IssueCertificate": [
            "CertificateAuthorityArn",
            "Csr",
            "SigningAlgorithm",
            "Validity"
        ],
        "ListCertificateAuthorities": "",
        "ListPermissions": [
            "CertificateAuthorityArn"
        ],
        "ListTags": [
            "CertificateAuthorityArn"
        ],
        "PutPolicy": [
            "ResourceArn",
            "Policy"
        ],
        "RestoreCertificateAuthority": [
            "CertificateAuthorityArn"
        ],
        "RevokeCertificate": [
            "CertificateAuthorityArn",
            "CertificateSerial",
            "RevocationReason"
        ],
        "TagCertificateAuthority": [
            "CertificateAuthorityArn",
            "Tags"
        ],
        "UntagCertificateAuthority": [
            "CertificateAuthorityArn",
            "Tags"
        ],
        "UpdateCertificateAuthority": [
            "CertificateAuthorityArn"
        ]
    },
    "alexaforbusiness": {
        "ApproveSkill": [
            "SkillId"
        ],
        "AssociateContactWithAddressBook": [
            "ContactArn",
            "AddressBookArn"
        ],
        "AssociateDeviceWithNetworkProfile": [
            "DeviceArn",
            "NetworkProfileArn"
        ],
        "AssociateDeviceWithRoom": "",
        "AssociateSkillGroupWithRoom": "",
        "AssociateSkillWithSkillGroup": [
            "SkillId"
        ],
        "AssociateSkillWithUsers": [
            "SkillId"
        ],
        "CreateAddressBook": [
            "Name"
        ],
        "CreateBusinessReportSchedule": [
            "Format",
            "ContentRange"
        ],
        "CreateConferenceProvider": [
            "ConferenceProviderName",
            "ConferenceProviderType",
            "MeetingSetting"
        ],
        "CreateContact": [
            "FirstName"
        ],
        "CreateGatewayGroup": [
            "Name",
            "ClientRequestToken"
        ],
        "CreateNetworkProfile": [
            "NetworkProfileName",
            "Ssid",
            "SecurityType",
            "ClientRequestToken"
        ],
        "CreateProfile": [
            "ProfileName",
            "Timezone",
            "Address",
            "DistanceUnit",
            "TemperatureUnit",
            "WakeWord"
        ],
        "CreateRoom": [
            "RoomName"
        ],
        "CreateSkillGroup": [
            "SkillGroupName"
        ],
        "CreateUser": [
            "UserId"
        ],
        "DeleteAddressBook": [
            "AddressBookArn"
        ],
        "DeleteBusinessReportSchedule": [
            "ScheduleArn"
        ],
        "DeleteConferenceProvider": [
            "ConferenceProviderArn"
        ],
        "DeleteContact": [
            "ContactArn"
        ],
        "DeleteDevice": [
            "DeviceArn"
        ],
        "DeleteDeviceUsageData": [
            "DeviceArn",
            "DeviceUsageType"
        ],
        "DeleteGatewayGroup": [
            "GatewayGroupArn"
        ],
        "DeleteNetworkProfile": [
            "NetworkProfileArn"
        ],
        "DeleteProfile": "",
        "DeleteRoom": "",
        "DeleteRoomSkillParameter": [
            "SkillId",
            "ParameterKey"
        ],
        "DeleteSkillAuthorization": [
            "SkillId"
        ],
        "DeleteSkillGroup": "",
        "DeleteUser": [
            "EnrollmentId"
        ],
        "DisassociateContactFromAddressBook": [
            "ContactArn",
            "AddressBookArn"
        ],
        "DisassociateDeviceFromRoom": "",
        "DisassociateSkillFromSkillGroup": [
            "SkillId"
        ],
        "DisassociateSkillFromUsers": [
            "SkillId"
        ],
        "DisassociateSkillGroupFromRoom": "",
        "ForgetSmartHomeAppliances": [
            "RoomArn"
        ],
        "GetAddressBook": [
            "AddressBookArn"
        ],
        "GetConferencePreference": "",
        "GetConferenceProvider": [
            "ConferenceProviderArn"
        ],
        "GetContact": [
            "ContactArn"
        ],
        "GetDevice": "",
        "GetGateway": [
            "GatewayArn"
        ],
        "GetGatewayGroup": [
            "GatewayGroupArn"
        ],
        "GetInvitationConfiguration": "",
        "GetNetworkProfile": [
            "NetworkProfileArn"
        ],
        "GetProfile": "",
        "GetRoom": "",
        "GetRoomSkillParameter": [
            "SkillId",
            "ParameterKey"
        ],
        "GetSkillGroup": "",
        "ListBusinessReportSchedules": "",
        "ListConferenceProviders": "",
        "ListDeviceEvents": [
            "DeviceArn"
        ],
        "ListGatewayGroups": "",
        "ListGateways": "",
        "ListSkills": "",
        "ListSkillsStoreCategories": "",
        "ListSkillsStoreSkillsByCategory": [
            "CategoryId"
        ],
        "ListSmartHomeAppliances": [
            "RoomArn"
        ],
        "ListTags": [
            "Arn"
        ],
        "PutConferencePreference": [
            "ConferencePreference"
        ],
        "PutInvitationConfiguration": [
            "OrganizationName"
        ],
        "PutRoomSkillParameter": [
            "SkillId",
            "RoomSkillParameter"
        ],
        "PutSkillAuthorization": [
            "AuthorizationResult",
            "SkillId"
        ],
        "RegisterAVSDevice": [
            "ClientId",
            "UserCode",
            "ProductId",
            "AmazonId"
        ],
        "RejectSkill": [
            "SkillId"
        ],
        "ResolveRoom": [
            "UserId",
            "SkillId"
        ],
        "RevokeInvitation": "",
        "SearchAddressBooks": "",
        "SearchContacts": "",
        "SearchDevices": "",
        "SearchNetworkProfiles": "",
        "SearchProfiles": "",
        "SearchRooms": "",
        "SearchSkillGroups": "",
        "SearchUsers": "",
        "SendAnnouncement": [
            "RoomFilters",
            "Content",
            "ClientRequestToken"
        ],
        "SendInvitation": "",
        "StartDeviceSync": [
            "Features"
        ],
        "StartSmartHomeApplianceDiscovery": [
            "RoomArn"
        ],
        "TagResource": [
            "Arn",
            "Tags"
        ],
        "UntagResource": [
            "Arn",
            "TagKeys"
        ],
        "UpdateAddressBook": [
            "AddressBookArn"
        ],
        "UpdateBusinessReportSchedule": [
            "ScheduleArn"
        ],
        "UpdateConferenceProvider": [
            "ConferenceProviderArn",
            "ConferenceProviderType",
            "MeetingSetting"
        ],
        "UpdateContact": [
            "ContactArn"
        ],
        "UpdateDevice": "",
        "UpdateGateway": [
            "GatewayArn"
        ],
        "UpdateGatewayGroup": [
            "GatewayGroupArn"
        ],
        "UpdateNetworkProfile": [
            "NetworkProfileArn"
        ],
        "UpdateProfile": "",
        "UpdateRoom": "",
        "UpdateSkillGroup": ""
    },
    "amp": {
        "CreateAlertManagerDefinition": [
            "data",
            "workspaceId"
        ],
        "CreateLoggingConfiguration": [
            "logGroupArn",
            "workspaceId"
        ],
        "CreateRuleGroupsNamespace": [
            "data",
            "name",
            "workspaceId"
        ],
        "CreateScraper": [
            "destination",
            "scrapeConfiguration",
            "source"
        ],
        "CreateWorkspace": "",
        "DeleteAlertManagerDefinition": [
            "workspaceId"
        ],
        "DeleteLoggingConfiguration": [
            "workspaceId"
        ],
        "DeleteRuleGroupsNamespace": [
            "name",
            "workspaceId"
        ],
        "DeleteScraper": [
            "scraperId"
        ],
        "DeleteWorkspace": [
            "workspaceId"
        ],
        "DescribeAlertManagerDefinition": [
            "workspaceId"
        ],
        "DescribeLoggingConfiguration": [
            "workspaceId"
        ],
        "DescribeRuleGroupsNamespace": [
            "name",
            "workspaceId"
        ],
        "DescribeScraper": [
            "scraperId"
        ],
        "DescribeWorkspace": [
            "workspaceId"
        ],
        "GetDefaultScraperConfiguration": "",
        "ListRuleGroupsNamespaces": [
            "workspaceId"
        ],
        "ListScrapers": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWorkspaces": "",
        "PutAlertManagerDefinition": [
            "data",
            "workspaceId"
        ],
        "PutRuleGroupsNamespace": [
            "data",
            "name",
            "workspaceId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateLoggingConfiguration": [
            "logGroupArn",
            "workspaceId"
        ],
        "UpdateWorkspaceAlias": [
            "workspaceId"
        ]
    },
    "amplify": {
        "CreateApp": [
            "name"
        ],
        "CreateBackendEnvironment": [
            "appId",
            "environmentName"
        ],
        "CreateBranch": [
            "appId",
            "branchName"
        ],
        "CreateDeployment": [
            "appId",
            "branchName"
        ],
        "CreateDomainAssociation": [
            "appId",
            "domainName",
            "subDomainSettings"
        ],
        "CreateWebhook": [
            "appId",
            "branchName"
        ],
        "DeleteApp": [
            "appId"
        ],
        "DeleteBackendEnvironment": [
            "appId",
            "environmentName"
        ],
        "DeleteBranch": [
            "appId",
            "branchName"
        ],
        "DeleteDomainAssociation": [
            "appId",
            "domainName"
        ],
        "DeleteJob": [
            "appId",
            "branchName",
            "jobId"
        ],
        "DeleteWebhook": [
            "webhookId"
        ],
        "GenerateAccessLogs": [
            "domainName",
            "appId"
        ],
        "GetApp": [
            "appId"
        ],
        "GetArtifactUrl": [
            "artifactId"
        ],
        "GetBackendEnvironment": [
            "appId",
            "environmentName"
        ],
        "GetBranch": [
            "appId",
            "branchName"
        ],
        "GetDomainAssociation": [
            "appId",
            "domainName"
        ],
        "GetJob": [
            "appId",
            "branchName",
            "jobId"
        ],
        "GetWebhook": [
            "webhookId"
        ],
        "ListApps": "",
        "ListArtifacts": [
            "appId",
            "branchName",
            "jobId"
        ],
        "ListBackendEnvironments": [
            "appId"
        ],
        "ListBranches": [
            "appId"
        ],
        "ListDomainAssociations": [
            "appId"
        ],
        "ListJobs": [
            "appId",
            "branchName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWebhooks": [
            "appId"
        ],
        "StartDeployment": [
            "appId",
            "branchName"
        ],
        "StartJob": [
            "appId",
            "branchName",
            "jobType"
        ],
        "StopJob": [
            "appId",
            "branchName",
            "jobId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApp": [
            "appId"
        ],
        "UpdateBranch": [
            "appId",
            "branchName"
        ],
        "UpdateDomainAssociation": [
            "appId",
            "domainName"
        ],
        "UpdateWebhook": [
            "webhookId"
        ]
    },
    "amplifybackend": {
        "CloneBackend": [
            "AppId",
            "BackendEnvironmentName",
            "TargetEnvironmentName"
        ],
        "CreateBackend": [
            "AppId",
            "BackendEnvironmentName",
            "AppName"
        ],
        "CreateBackendAPI": [
            "AppId",
            "ResourceName",
            "BackendEnvironmentName",
            "ResourceConfig"
        ],
        "CreateBackendAuth": [
            "AppId",
            "ResourceName",
            "BackendEnvironmentName",
            "ResourceConfig"
        ],
        "CreateBackendConfig": [
            "AppId"
        ],
        "CreateBackendStorage": [
            "AppId",
            "ResourceName",
            "BackendEnvironmentName",
            "ResourceConfig"
        ],
        "CreateToken": [
            "AppId"
        ],
        "DeleteBackend": [
            "AppId",
            "BackendEnvironmentName"
        ],
        "DeleteBackendAPI": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "DeleteBackendAuth": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "DeleteBackendStorage": [
            "AppId",
            "BackendEnvironmentName",
            "ServiceName",
            "ResourceName"
        ],
        "DeleteToken": [
            "SessionId",
            "AppId"
        ],
        "GenerateBackendAPIModels": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "GetBackend": [
            "AppId"
        ],
        "GetBackendAPI": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "GetBackendAPIModels": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "GetBackendAuth": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "GetBackendJob": [
            "AppId",
            "BackendEnvironmentName",
            "JobId"
        ],
        "GetBackendStorage": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "GetToken": [
            "SessionId",
            "AppId"
        ],
        "ImportBackendAuth": [
            "AppId",
            "BackendEnvironmentName",
            "UserPoolId",
            "NativeClientId",
            "WebClientId"
        ],
        "ImportBackendStorage": [
            "AppId",
            "BackendEnvironmentName",
            "ServiceName"
        ],
        "ListBackendJobs": [
            "AppId",
            "BackendEnvironmentName"
        ],
        "ListS3Buckets": "",
        "RemoveAllBackends": [
            "AppId"
        ],
        "RemoveBackendConfig": [
            "AppId"
        ],
        "UpdateBackendAPI": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName"
        ],
        "UpdateBackendAuth": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName",
            "ResourceConfig"
        ],
        "UpdateBackendConfig": [
            "AppId"
        ],
        "UpdateBackendJob": [
            "AppId",
            "BackendEnvironmentName",
            "JobId"
        ],
        "UpdateBackendStorage": [
            "AppId",
            "BackendEnvironmentName",
            "ResourceName",
            "ResourceConfig"
        ]
    },
    "amplifyuibuilder": {
        "CreateComponent": [
            "appId",
            "environmentName",
            "componentToCreate"
        ],
        "CreateForm": [
            "appId",
            "environmentName",
            "formToCreate"
        ],
        "CreateTheme": [
            "appId",
            "environmentName",
            "themeToCreate"
        ],
        "DeleteComponent": [
            "appId",
            "environmentName",
            "id"
        ],
        "DeleteForm": [
            "appId",
            "environmentName",
            "id"
        ],
        "DeleteTheme": [
            "appId",
            "environmentName",
            "id"
        ],
        "ExchangeCodeForToken": [
            "provider",
            "request"
        ],
        "ExportComponents": [
            "appId",
            "environmentName"
        ],
        "ExportForms": [
            "appId",
            "environmentName"
        ],
        "ExportThemes": [
            "appId",
            "environmentName"
        ],
        "GetCodegenJob": [
            "appId",
            "environmentName",
            "id"
        ],
        "GetComponent": [
            "appId",
            "environmentName",
            "id"
        ],
        "GetForm": [
            "appId",
            "environmentName",
            "id"
        ],
        "GetMetadata": [
            "appId",
            "environmentName"
        ],
        "GetTheme": [
            "appId",
            "environmentName",
            "id"
        ],
        "ListCodegenJobs": [
            "appId",
            "environmentName"
        ],
        "ListComponents": [
            "appId",
            "environmentName"
        ],
        "ListForms": [
            "appId",
            "environmentName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListThemes": [
            "appId",
            "environmentName"
        ],
        "PutMetadataFlag": [
            "appId",
            "environmentName",
            "featureName",
            "body"
        ],
        "RefreshToken": [
            "provider",
            "refreshTokenBody"
        ],
        "StartCodegenJob": [
            "appId",
            "environmentName",
            "codegenJobToCreate"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateComponent": [
            "appId",
            "environmentName",
            "id",
            "updatedComponent"
        ],
        "UpdateForm": [
            "appId",
            "environmentName",
            "id",
            "updatedForm"
        ],
        "UpdateTheme": [
            "appId",
            "environmentName",
            "id",
            "updatedTheme"
        ]
    },
    "apigateway": {
        "CreateApiKey": "",
        "CreateAuthorizer": [
            "restApiId",
            "name",
            "type"
        ],
        "CreateBasePathMapping": [
            "domainName",
            "restApiId"
        ],
        "CreateDeployment": [
            "restApiId"
        ],
        "CreateDocumentationPart": [
            "restApiId",
            "location",
            "properties"
        ],
        "CreateDocumentationVersion": [
            "restApiId",
            "documentationVersion"
        ],
        "CreateDomainName": [
            "domainName"
        ],
        "CreateModel": [
            "restApiId",
            "name",
            "contentType"
        ],
        "CreateRequestValidator": [
            "restApiId"
        ],
        "CreateResource": [
            "restApiId",
            "parentId",
            "pathPart"
        ],
        "CreateRestApi": [
            "name"
        ],
        "CreateStage": [
            "restApiId",
            "stageName",
            "deploymentId"
        ],
        "CreateUsagePlan": [
            "name"
        ],
        "CreateUsagePlanKey": [
            "usagePlanId",
            "keyId",
            "keyType"
        ],
        "CreateVpcLink": [
            "name",
            "targetArns"
        ],
        "DeleteApiKey": [
            "apiKey"
        ],
        "DeleteAuthorizer": [
            "restApiId",
            "authorizerId"
        ],
        "DeleteBasePathMapping": [
            "domainName",
            "basePath"
        ],
        "DeleteClientCertificate": [
            "clientCertificateId"
        ],
        "DeleteDeployment": [
            "restApiId",
            "deploymentId"
        ],
        "DeleteDocumentationPart": [
            "restApiId",
            "documentationPartId"
        ],
        "DeleteDocumentationVersion": [
            "restApiId",
            "documentationVersion"
        ],
        "DeleteDomainName": [
            "domainName"
        ],
        "DeleteGatewayResponse": [
            "restApiId",
            "responseType"
        ],
        "DeleteIntegration": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "DeleteIntegrationResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "DeleteMethod": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "DeleteMethodResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "DeleteModel": [
            "restApiId",
            "modelName"
        ],
        "DeleteRequestValidator": [
            "restApiId",
            "requestValidatorId"
        ],
        "DeleteResource": [
            "restApiId",
            "resourceId"
        ],
        "DeleteRestApi": [
            "restApiId"
        ],
        "DeleteStage": [
            "restApiId",
            "stageName"
        ],
        "DeleteUsagePlan": [
            "usagePlanId"
        ],
        "DeleteUsagePlanKey": [
            "usagePlanId",
            "keyId"
        ],
        "DeleteVpcLink": [
            "vpcLinkId"
        ],
        "FlushStageAuthorizersCache": [
            "restApiId",
            "stageName"
        ],
        "FlushStageCache": [
            "restApiId",
            "stageName"
        ],
        "GenerateClientCertificate": "",
        "GetAccount": "",
        "GetApiKey": [
            "apiKey"
        ],
        "GetApiKeys": "",
        "GetAuthorizer": [
            "restApiId",
            "authorizerId"
        ],
        "GetAuthorizers": [
            "restApiId"
        ],
        "GetBasePathMapping": [
            "domainName",
            "basePath"
        ],
        "GetBasePathMappings": [
            "domainName"
        ],
        "GetClientCertificate": [
            "clientCertificateId"
        ],
        "GetClientCertificates": "",
        "GetDeployment": [
            "restApiId",
            "deploymentId"
        ],
        "GetDeployments": [
            "restApiId"
        ],
        "GetDocumentationPart": [
            "restApiId",
            "documentationPartId"
        ],
        "GetDocumentationParts": [
            "restApiId"
        ],
        "GetDocumentationVersion": [
            "restApiId",
            "documentationVersion"
        ],
        "GetDocumentationVersions": [
            "restApiId"
        ],
        "GetDomainName": [
            "domainName"
        ],
        "GetDomainNames": "",
        "GetExport": [
            "restApiId",
            "stageName",
            "exportType"
        ],
        "GetGatewayResponse": [
            "restApiId",
            "responseType"
        ],
        "GetGatewayResponses": [
            "restApiId"
        ],
        "GetIntegration": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "GetIntegrationResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "GetMethod": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "GetMethodResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "GetModel": [
            "restApiId",
            "modelName"
        ],
        "GetModelTemplate": [
            "restApiId",
            "modelName"
        ],
        "GetModels": [
            "restApiId"
        ],
        "GetRequestValidator": [
            "restApiId",
            "requestValidatorId"
        ],
        "GetRequestValidators": [
            "restApiId"
        ],
        "GetResource": [
            "restApiId",
            "resourceId"
        ],
        "GetResources": [
            "restApiId"
        ],
        "GetRestApi": [
            "restApiId"
        ],
        "GetRestApis": "",
        "GetSdk": [
            "restApiId",
            "stageName",
            "sdkType"
        ],
        "GetSdkType": [
            "id"
        ],
        "GetSdkTypes": "",
        "GetStage": [
            "restApiId",
            "stageName"
        ],
        "GetStages": [
            "restApiId"
        ],
        "GetTags": [
            "resourceArn"
        ],
        "GetUsage": [
            "usagePlanId",
            "startDate",
            "endDate"
        ],
        "GetUsagePlan": [
            "usagePlanId"
        ],
        "GetUsagePlanKey": [
            "usagePlanId",
            "keyId"
        ],
        "GetUsagePlanKeys": [
            "usagePlanId"
        ],
        "GetUsagePlans": "",
        "GetVpcLink": [
            "vpcLinkId"
        ],
        "GetVpcLinks": "",
        "ImportApiKeys": [
            "body",
            "format"
        ],
        "ImportDocumentationParts": [
            "restApiId",
            "body"
        ],
        "ImportRestApi": [
            "body"
        ],
        "PutGatewayResponse": [
            "restApiId",
            "responseType"
        ],
        "PutIntegration": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "type"
        ],
        "PutIntegrationResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "PutMethod": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "authorizationType"
        ],
        "PutMethodResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "PutRestApi": [
            "restApiId",
            "body"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestInvokeAuthorizer": [
            "restApiId",
            "authorizerId"
        ],
        "TestInvokeMethod": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccount": "",
        "UpdateApiKey": [
            "apiKey"
        ],
        "UpdateAuthorizer": [
            "restApiId",
            "authorizerId"
        ],
        "UpdateBasePathMapping": [
            "domainName",
            "basePath"
        ],
        "UpdateClientCertificate": [
            "clientCertificateId"
        ],
        "UpdateDeployment": [
            "restApiId",
            "deploymentId"
        ],
        "UpdateDocumentationPart": [
            "restApiId",
            "documentationPartId"
        ],
        "UpdateDocumentationVersion": [
            "restApiId",
            "documentationVersion"
        ],
        "UpdateDomainName": [
            "domainName"
        ],
        "UpdateGatewayResponse": [
            "restApiId",
            "responseType"
        ],
        "UpdateIntegration": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "UpdateIntegrationResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "UpdateMethod": [
            "restApiId",
            "resourceId",
            "httpMethod"
        ],
        "UpdateMethodResponse": [
            "restApiId",
            "resourceId",
            "httpMethod",
            "statusCode"
        ],
        "UpdateModel": [
            "restApiId",
            "modelName"
        ],
        "UpdateRequestValidator": [
            "restApiId",
            "requestValidatorId"
        ],
        "UpdateResource": [
            "restApiId",
            "resourceId"
        ],
        "UpdateRestApi": [
            "restApiId"
        ],
        "UpdateStage": [
            "restApiId",
            "stageName"
        ],
        "UpdateUsage": [
            "usagePlanId",
            "keyId"
        ],
        "UpdateUsagePlan": [
            "usagePlanId"
        ],
        "UpdateVpcLink": [
            "vpcLinkId"
        ]
    },
    "apigatewaymanagementapi": {
        "DeleteConnection": [
            "ConnectionId"
        ],
        "GetConnection": [
            "ConnectionId"
        ],
        "PostToConnection": [
            "ConnectionId",
            "Data"
        ]
    },
    "apigatewayv2": {
        "CreateApi": [
            "ProtocolType",
            "Name"
        ],
        "CreateApiMapping": [
            "DomainName",
            "Stage",
            "ApiId"
        ],
        "CreateAuthorizer": [
            "ApiId",
            "AuthorizerType",
            "IdentitySource",
            "Name"
        ],
        "CreateDeployment": [
            "ApiId"
        ],
        "CreateDomainName": [
            "DomainName"
        ],
        "CreateIntegration": [
            "ApiId",
            "IntegrationType"
        ],
        "CreateIntegrationResponse": [
            "ApiId",
            "IntegrationId",
            "IntegrationResponseKey"
        ],
        "CreateModel": [
            "ApiId",
            "Schema",
            "Name"
        ],
        "CreateRoute": [
            "ApiId",
            "RouteKey"
        ],
        "CreateRouteResponse": [
            "ApiId",
            "RouteId",
            "RouteResponseKey"
        ],
        "CreateStage": [
            "ApiId",
            "StageName"
        ],
        "CreateVpcLink": [
            "SubnetIds",
            "Name"
        ],
        "DeleteAccessLogSettings": [
            "StageName",
            "ApiId"
        ],
        "DeleteApi": [
            "ApiId"
        ],
        "DeleteApiMapping": [
            "ApiMappingId",
            "DomainName"
        ],
        "DeleteAuthorizer": [
            "AuthorizerId",
            "ApiId"
        ],
        "DeleteCorsConfiguration": [
            "ApiId"
        ],
        "DeleteDeployment": [
            "ApiId",
            "DeploymentId"
        ],
        "DeleteDomainName": [
            "DomainName"
        ],
        "DeleteIntegration": [
            "ApiId",
            "IntegrationId"
        ],
        "DeleteIntegrationResponse": [
            "ApiId",
            "IntegrationResponseId",
            "IntegrationId"
        ],
        "DeleteModel": [
            "ModelId",
            "ApiId"
        ],
        "DeleteRoute": [
            "ApiId",
            "RouteId"
        ],
        "DeleteRouteRequestParameter": [
            "RequestParameterKey",
            "ApiId",
            "RouteId"
        ],
        "DeleteRouteResponse": [
            "RouteResponseId",
            "ApiId",
            "RouteId"
        ],
        "DeleteRouteSettings": [
            "StageName",
            "RouteKey",
            "ApiId"
        ],
        "DeleteStage": [
            "StageName",
            "ApiId"
        ],
        "DeleteVpcLink": [
            "VpcLinkId"
        ],
        "ExportApi": [
            "Specification",
            "OutputType",
            "ApiId"
        ],
        "ResetAuthorizersCache": [
            "StageName",
            "ApiId"
        ],
        "GetApi": [
            "ApiId"
        ],
        "GetApiMapping": [
            "ApiMappingId",
            "DomainName"
        ],
        "GetApiMappings": [
            "DomainName"
        ],
        "GetApis": "",
        "GetAuthorizer": [
            "AuthorizerId",
            "ApiId"
        ],
        "GetAuthorizers": [
            "ApiId"
        ],
        "GetDeployment": [
            "ApiId",
            "DeploymentId"
        ],
        "GetDeployments": [
            "ApiId"
        ],
        "GetDomainName": [
            "DomainName"
        ],
        "GetDomainNames": "",
        "GetIntegration": [
            "ApiId",
            "IntegrationId"
        ],
        "GetIntegrationResponse": [
            "ApiId",
            "IntegrationResponseId",
            "IntegrationId"
        ],
        "GetIntegrationResponses": [
            "IntegrationId",
            "ApiId"
        ],
        "GetIntegrations": [
            "ApiId"
        ],
        "GetModel": [
            "ModelId",
            "ApiId"
        ],
        "GetModelTemplate": [
            "ModelId",
            "ApiId"
        ],
        "GetModels": [
            "ApiId"
        ],
        "GetRoute": [
            "ApiId",
            "RouteId"
        ],
        "GetRouteResponse": [
            "RouteResponseId",
            "ApiId",
            "RouteId"
        ],
        "GetRouteResponses": [
            "RouteId",
            "ApiId"
        ],
        "GetRoutes": [
            "ApiId"
        ],
        "GetStage": [
            "StageName",
            "ApiId"
        ],
        "GetStages": [
            "ApiId"
        ],
        "GetTags": [
            "ResourceArn"
        ],
        "GetVpcLink": [
            "VpcLinkId"
        ],
        "GetVpcLinks": "",
        "ImportApi": [
            "Body"
        ],
        "ReimportApi": [
            "ApiId",
            "Body"
        ],
        "TagResource": [
            "ResourceArn"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateApi": [
            "ApiId"
        ],
        "UpdateApiMapping": [
            "ApiMappingId",
            "ApiId",
            "DomainName"
        ],
        "UpdateAuthorizer": [
            "AuthorizerId",
            "ApiId"
        ],
        "UpdateDeployment": [
            "ApiId",
            "DeploymentId"
        ],
        "UpdateDomainName": [
            "DomainName"
        ],
        "UpdateIntegration": [
            "ApiId",
            "IntegrationId"
        ],
        "UpdateIntegrationResponse": [
            "ApiId",
            "IntegrationResponseId",
            "IntegrationId"
        ],
        "UpdateModel": [
            "ModelId",
            "ApiId"
        ],
        "UpdateRoute": [
            "ApiId",
            "RouteId"
        ],
        "UpdateRouteResponse": [
            "RouteResponseId",
            "ApiId",
            "RouteId"
        ],
        "UpdateStage": [
            "StageName",
            "ApiId"
        ],
        "UpdateVpcLink": [
            "VpcLinkId"
        ]
    },
    "appconfig": {
        "CreateApplication": [
            "Name"
        ],
        "CreateConfigurationProfile": [
            "ApplicationId",
            "Name",
            "LocationUri"
        ],
        "CreateDeploymentStrategy": [
            "Name",
            "DeploymentDurationInMinutes",
            "GrowthFactor"
        ],
        "CreateEnvironment": [
            "ApplicationId",
            "Name"
        ],
        "CreateExtension": [
            "Name",
            "Actions"
        ],
        "CreateExtensionAssociation": [
            "ExtensionIdentifier",
            "ResourceIdentifier"
        ],
        "CreateHostedConfigurationVersion": [
            "ApplicationId",
            "ConfigurationProfileId",
            "Content",
            "ContentType"
        ],
        "DeleteApplication": [
            "ApplicationId"
        ],
        "DeleteConfigurationProfile": [
            "ApplicationId",
            "ConfigurationProfileId"
        ],
        "DeleteDeploymentStrategy": [
            "DeploymentStrategyId"
        ],
        "DeleteEnvironment": [
            "ApplicationId",
            "EnvironmentId"
        ],
        "DeleteExtension": [
            "ExtensionIdentifier"
        ],
        "DeleteExtensionAssociation": [
            "ExtensionAssociationId"
        ],
        "DeleteHostedConfigurationVersion": [
            "ApplicationId",
            "ConfigurationProfileId",
            "VersionNumber"
        ],
        "GetApplication": [
            "ApplicationId"
        ],
        "GetConfiguration": [
            "Application",
            "Environment",
            "Configuration",
            "ClientId"
        ],
        "GetConfigurationProfile": [
            "ApplicationId",
            "ConfigurationProfileId"
        ],
        "GetDeployment": [
            "ApplicationId",
            "EnvironmentId",
            "DeploymentNumber"
        ],
        "GetDeploymentStrategy": [
            "DeploymentStrategyId"
        ],
        "GetEnvironment": [
            "ApplicationId",
            "EnvironmentId"
        ],
        "GetExtension": [
            "ExtensionIdentifier"
        ],
        "GetExtensionAssociation": [
            "ExtensionAssociationId"
        ],
        "GetHostedConfigurationVersion": [
            "ApplicationId",
            "ConfigurationProfileId",
            "VersionNumber"
        ],
        "ListApplications": "",
        "ListConfigurationProfiles": [
            "ApplicationId"
        ],
        "ListDeploymentStrategies": "",
        "ListDeployments": [
            "ApplicationId",
            "EnvironmentId"
        ],
        "ListEnvironments": [
            "ApplicationId"
        ],
        "ListExtensionAssociations": "",
        "ListExtensions": "",
        "ListHostedConfigurationVersions": [
            "ApplicationId",
            "ConfigurationProfileId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartDeployment": [
            "ApplicationId",
            "EnvironmentId",
            "DeploymentStrategyId",
            "ConfigurationProfileId",
            "ConfigurationVersion"
        ],
        "StopDeployment": [
            "ApplicationId",
            "EnvironmentId",
            "DeploymentNumber"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateApplication": [
            "ApplicationId"
        ],
        "UpdateConfigurationProfile": [
            "ApplicationId",
            "ConfigurationProfileId"
        ],
        "UpdateDeploymentStrategy": [
            "DeploymentStrategyId"
        ],
        "UpdateEnvironment": [
            "ApplicationId",
            "EnvironmentId"
        ],
        "UpdateExtension": [
            "ExtensionIdentifier"
        ],
        "UpdateExtensionAssociation": [
            "ExtensionAssociationId"
        ],
        "ValidateConfiguration": [
            "ApplicationId",
            "ConfigurationProfileId",
            "ConfigurationVersion"
        ]
    },
    "appconfigdata": {
        "GetLatestConfiguration": [
            "ConfigurationToken"
        ],
        "StartConfigurationSession": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "ConfigurationProfileIdentifier"
        ]
    },
    "appfabric": {
        "BatchGetUserAccessTasks": [
            "appBundleIdentifier",
            "taskIdList"
        ],
        "ConnectAppAuthorization": [
            "appBundleIdentifier",
            "appAuthorizationIdentifier"
        ],
        "CreateAppAuthorization": [
            "appBundleIdentifier",
            "app",
            "credential",
            "tenant",
            "authType"
        ],
        "CreateAppBundle": "",
        "CreateIngestion": [
            "appBundleIdentifier",
            "app",
            "tenantId",
            "ingestionType"
        ],
        "CreateIngestionDestination": [
            "appBundleIdentifier",
            "ingestionIdentifier",
            "processingConfiguration",
            "destinationConfiguration"
        ],
        "DeleteAppAuthorization": [
            "appBundleIdentifier",
            "appAuthorizationIdentifier"
        ],
        "DeleteAppBundle": [
            "appBundleIdentifier"
        ],
        "DeleteIngestion": [
            "appBundleIdentifier",
            "ingestionIdentifier"
        ],
        "DeleteIngestionDestination": [
            "appBundleIdentifier",
            "ingestionIdentifier",
            "ingestionDestinationIdentifier"
        ],
        "GetAppAuthorization": [
            "appBundleIdentifier",
            "appAuthorizationIdentifier"
        ],
        "GetAppBundle": [
            "appBundleIdentifier"
        ],
        "GetIngestion": [
            "appBundleIdentifier",
            "ingestionIdentifier"
        ],
        "GetIngestionDestination": [
            "appBundleIdentifier",
            "ingestionIdentifier",
            "ingestionDestinationIdentifier"
        ],
        "ListAppAuthorizations": [
            "appBundleIdentifier"
        ],
        "ListAppBundles": "",
        "ListIngestionDestinations": [
            "appBundleIdentifier",
            "ingestionIdentifier"
        ],
        "ListIngestions": [
            "appBundleIdentifier"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartIngestion": [
            "ingestionIdentifier",
            "appBundleIdentifier"
        ],
        "StartUserAccessTasks": [
            "appBundleIdentifier",
            "email"
        ],
        "StopIngestion": [
            "ingestionIdentifier",
            "appBundleIdentifier"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAppAuthorization": [
            "appBundleIdentifier",
            "appAuthorizationIdentifier"
        ],
        "UpdateIngestionDestination": [
            "appBundleIdentifier",
            "ingestionIdentifier",
            "ingestionDestinationIdentifier",
            "destinationConfiguration"
        ]
    },
    "appflow": {
        "CancelFlowExecutions": [
            "flowName"
        ],
        "CreateConnectorProfile": [
            "connectorProfileName",
            "connectorType",
            "connectionMode",
            "connectorProfileConfig"
        ],
        "CreateFlow": [
            "flowName",
            "triggerConfig",
            "sourceFlowConfig",
            "destinationFlowConfigList",
            "tasks"
        ],
        "DeleteConnectorProfile": [
            "connectorProfileName"
        ],
        "DeleteFlow": [
            "flowName"
        ],
        "DescribeConnector": [
            "connectorType"
        ],
        "DescribeConnectorEntity": [
            "connectorEntityName"
        ],
        "DescribeConnectorProfiles": "",
        "DescribeConnectors": "",
        "DescribeFlow": [
            "flowName"
        ],
        "DescribeFlowExecutionRecords": [
            "flowName"
        ],
        "ListConnectorEntities": "",
        "ListConnectors": "",
        "ListFlows": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterConnector": "",
        "ResetConnectorMetadataCache": "",
        "StartFlow": [
            "flowName"
        ],
        "StopFlow": [
            "flowName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UnregisterConnector": [
            "connectorLabel"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateConnectorProfile": [
            "connectorProfileName",
            "connectionMode",
            "connectorProfileConfig"
        ],
        "UpdateConnectorRegistration": [
            "connectorLabel"
        ],
        "UpdateFlow": [
            "flowName",
            "triggerConfig",
            "sourceFlowConfig",
            "destinationFlowConfigList",
            "tasks"
        ]
    },
    "appintegrations": {
        "CreateApplication": [
            "Name",
            "Namespace",
            "ApplicationSourceConfig"
        ],
        "CreateDataIntegration": [
            "Name",
            "KmsKey",
            "SourceURI"
        ],
        "CreateEventIntegration": [
            "Name",
            "EventFilter",
            "EventBridgeBus"
        ],
        "DeleteApplication": [
            "Arn"
        ],
        "DeleteDataIntegration": [
            "DataIntegrationIdentifier"
        ],
        "DeleteEventIntegration": [
            "Name"
        ],
        "GetApplication": [
            "Arn"
        ],
        "GetDataIntegration": [
            "Identifier"
        ],
        "GetEventIntegration": [
            "Name"
        ],
        "ListApplicationAssociations": [
            "ApplicationId"
        ],
        "ListApplications": "",
        "ListDataIntegrationAssociations": [
            "DataIntegrationIdentifier"
        ],
        "ListDataIntegrations": "",
        "ListEventIntegrationAssociations": [
            "EventIntegrationName"
        ],
        "ListEventIntegrations": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "Arn"
        ],
        "UpdateDataIntegration": [
            "Identifier"
        ],
        "UpdateEventIntegration": [
            "Name"
        ]
    },
    "application-autoscaling": {
        "DeleteScalingPolicy": [
            "PolicyName",
            "ServiceNamespace",
            "ResourceId",
            "ScalableDimension"
        ],
        "DeleteScheduledAction": [
            "ServiceNamespace",
            "ScheduledActionName",
            "ResourceId",
            "ScalableDimension"
        ],
        "DeregisterScalableTarget": [
            "ServiceNamespace",
            "ResourceId",
            "ScalableDimension"
        ],
        "DescribeScalableTargets": [
            "ServiceNamespace"
        ],
        "DescribeScalingActivities": [
            "ServiceNamespace"
        ],
        "DescribeScalingPolicies": [
            "ServiceNamespace"
        ],
        "DescribeScheduledActions": [
            "ServiceNamespace"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutScalingPolicy": [
            "PolicyName",
            "ServiceNamespace",
            "ResourceId",
            "ScalableDimension"
        ],
        "PutScheduledAction": [
            "ServiceNamespace",
            "ScheduledActionName",
            "ResourceId",
            "ScalableDimension"
        ],
        "RegisterScalableTarget": [
            "ServiceNamespace",
            "ResourceId",
            "ScalableDimension"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ]
    },
    "application-insights": {
        "AddWorkload": [
            "ResourceGroupName",
            "ComponentName",
            "WorkloadConfiguration"
        ],
        "CreateApplication": "",
        "CreateComponent": [
            "ResourceGroupName",
            "ComponentName",
            "ResourceList"
        ],
        "CreateLogPattern": [
            "ResourceGroupName",
            "PatternSetName",
            "PatternName",
            "Pattern",
            "Rank"
        ],
        "DeleteApplication": [
            "ResourceGroupName"
        ],
        "DeleteComponent": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "DeleteLogPattern": [
            "ResourceGroupName",
            "PatternSetName",
            "PatternName"
        ],
        "DescribeApplication": [
            "ResourceGroupName"
        ],
        "DescribeComponent": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "DescribeComponentConfiguration": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "DescribeComponentConfigurationRecommendation": [
            "ResourceGroupName",
            "ComponentName",
            "Tier"
        ],
        "DescribeLogPattern": [
            "ResourceGroupName",
            "PatternSetName",
            "PatternName"
        ],
        "DescribeObservation": [
            "ObservationId"
        ],
        "DescribeProblem": [
            "ProblemId"
        ],
        "DescribeProblemObservations": [
            "ProblemId"
        ],
        "DescribeWorkload": [
            "ResourceGroupName",
            "ComponentName",
            "WorkloadId"
        ],
        "ListApplications": "",
        "ListComponents": [
            "ResourceGroupName"
        ],
        "ListConfigurationHistory": "",
        "ListLogPatternSets": [
            "ResourceGroupName"
        ],
        "ListLogPatterns": [
            "ResourceGroupName"
        ],
        "ListProblems": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListWorkloads": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "RemoveWorkload": [
            "ResourceGroupName",
            "ComponentName",
            "WorkloadId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApplication": [
            "ResourceGroupName"
        ],
        "UpdateComponent": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "UpdateComponentConfiguration": [
            "ResourceGroupName",
            "ComponentName"
        ],
        "UpdateLogPattern": [
            "ResourceGroupName",
            "PatternSetName",
            "PatternName"
        ],
        "UpdateProblem": [
            "ProblemId"
        ],
        "UpdateWorkload": [
            "ResourceGroupName",
            "ComponentName",
            "WorkloadConfiguration"
        ]
    },
    "AWSApplicationCostProfiler": {
        "DeleteReportDefinition": [
            "reportId"
        ],
        "GetReportDefinition": [
            "reportId"
        ],
        "ImportApplicationUsage": [
            "sourceS3Location"
        ],
        "ListReportDefinitions": "",
        "PutReportDefinition": [
            "reportId",
            "reportDescription",
            "reportFrequency",
            "format",
            "destinationS3Location"
        ],
        "UpdateReportDefinition": [
            "reportId",
            "reportDescription",
            "reportFrequency",
            "format",
            "destinationS3Location"
        ]
    },
    "appmesh": {
        "CreateGatewayRoute": [
            "gatewayRouteName",
            "meshName",
            "spec",
            "virtualGatewayName"
        ],
        "CreateMesh": [
            "meshName"
        ],
        "CreateRoute": [
            "meshName",
            "routeName",
            "spec",
            "virtualRouterName"
        ],
        "CreateVirtualGateway": [
            "meshName",
            "spec",
            "virtualGatewayName"
        ],
        "CreateVirtualNode": [
            "meshName",
            "spec",
            "virtualNodeName"
        ],
        "CreateVirtualRouter": [
            "meshName",
            "spec",
            "virtualRouterName"
        ],
        "CreateVirtualService": [
            "meshName",
            "spec",
            "virtualServiceName"
        ],
        "DeleteGatewayRoute": [
            "gatewayRouteName",
            "meshName",
            "virtualGatewayName"
        ],
        "DeleteMesh": [
            "meshName"
        ],
        "DeleteRoute": [
            "meshName",
            "routeName",
            "virtualRouterName"
        ],
        "DeleteVirtualGateway": [
            "meshName",
            "virtualGatewayName"
        ],
        "DeleteVirtualNode": [
            "meshName",
            "virtualNodeName"
        ],
        "DeleteVirtualRouter": [
            "meshName",
            "virtualRouterName"
        ],
        "DeleteVirtualService": [
            "meshName",
            "virtualServiceName"
        ],
        "DescribeGatewayRoute": [
            "gatewayRouteName",
            "meshName",
            "virtualGatewayName"
        ],
        "DescribeMesh": [
            "meshName"
        ],
        "DescribeRoute": [
            "meshName",
            "routeName",
            "virtualRouterName"
        ],
        "DescribeVirtualGateway": [
            "meshName",
            "virtualGatewayName"
        ],
        "DescribeVirtualNode": [
            "meshName",
            "virtualNodeName"
        ],
        "DescribeVirtualRouter": [
            "meshName",
            "virtualRouterName"
        ],
        "DescribeVirtualService": [
            "meshName",
            "virtualServiceName"
        ],
        "ListGatewayRoutes": [
            "meshName",
            "virtualGatewayName"
        ],
        "ListMeshes": "",
        "ListRoutes": [
            "meshName",
            "virtualRouterName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListVirtualGateways": [
            "meshName"
        ],
        "ListVirtualNodes": [
            "meshName"
        ],
        "ListVirtualRouters": [
            "meshName"
        ],
        "ListVirtualServices": [
            "meshName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateGatewayRoute": [
            "gatewayRouteName",
            "meshName",
            "spec",
            "virtualGatewayName"
        ],
        "UpdateMesh": [
            "meshName"
        ],
        "UpdateRoute": [
            "meshName",
            "routeName",
            "spec",
            "virtualRouterName"
        ],
        "UpdateVirtualGateway": [
            "meshName",
            "spec",
            "virtualGatewayName"
        ],
        "UpdateVirtualNode": [
            "meshName",
            "spec",
            "virtualNodeName"
        ],
        "UpdateVirtualRouter": [
            "meshName",
            "spec",
            "virtualRouterName"
        ],
        "UpdateVirtualService": [
            "meshName",
            "spec",
            "virtualServiceName"
        ]
    },
    "apprunner": {
        "AssociateCustomDomain": [
            "ServiceArn",
            "DomainName"
        ],
        "CreateAutoScalingConfiguration": [
            "AutoScalingConfigurationName"
        ],
        "CreateConnection": [
            "ConnectionName",
            "ProviderType"
        ],
        "CreateObservabilityConfiguration": [
            "ObservabilityConfigurationName"
        ],
        "CreateService": [
            "ServiceName",
            "SourceConfiguration"
        ],
        "CreateVpcConnector": [
            "VpcConnectorName",
            "Subnets"
        ],
        "CreateVpcIngressConnection": [
            "ServiceArn",
            "VpcIngressConnectionName",
            "IngressVpcConfiguration"
        ],
        "DeleteAutoScalingConfiguration": [
            "AutoScalingConfigurationArn"
        ],
        "DeleteConnection": [
            "ConnectionArn"
        ],
        "DeleteObservabilityConfiguration": [
            "ObservabilityConfigurationArn"
        ],
        "DeleteService": [
            "ServiceArn"
        ],
        "DeleteVpcConnector": [
            "VpcConnectorArn"
        ],
        "DeleteVpcIngressConnection": [
            "VpcIngressConnectionArn"
        ],
        "DescribeAutoScalingConfiguration": [
            "AutoScalingConfigurationArn"
        ],
        "DescribeCustomDomains": [
            "ServiceArn"
        ],
        "DescribeObservabilityConfiguration": [
            "ObservabilityConfigurationArn"
        ],
        "DescribeService": [
            "ServiceArn"
        ],
        "DescribeVpcConnector": [
            "VpcConnectorArn"
        ],
        "DescribeVpcIngressConnection": [
            "VpcIngressConnectionArn"
        ],
        "DisassociateCustomDomain": [
            "ServiceArn",
            "DomainName"
        ],
        "ListAutoScalingConfigurations": "",
        "ListConnections": "",
        "ListObservabilityConfigurations": "",
        "ListOperations": [
            "ServiceArn"
        ],
        "ListServices": "",
        "ListServicesForAutoScalingConfiguration": [
            "AutoScalingConfigurationArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListVpcConnectors": "",
        "ListVpcIngressConnections": "",
        "PauseService": [
            "ServiceArn"
        ],
        "ResumeService": [
            "ServiceArn"
        ],
        "StartDeployment": [
            "ServiceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDefaultAutoScalingConfiguration": [
            "AutoScalingConfigurationArn"
        ],
        "UpdateService": [
            "ServiceArn"
        ],
        "UpdateVpcIngressConnection": [
            "VpcIngressConnectionArn",
            "IngressVpcConfiguration"
        ]
    },
    "appstream": {
        "AssociateAppBlockBuilderAppBlock": [
            "AppBlockArn",
            "AppBlockBuilderName"
        ],
        "AssociateApplicationFleet": [
            "FleetName",
            "ApplicationArn"
        ],
        "AssociateApplicationToEntitlement": [
            "StackName",
            "EntitlementName",
            "ApplicationIdentifier"
        ],
        "AssociateFleet": [
            "FleetName",
            "StackName"
        ],
        "BatchAssociateUserStack": [
            "UserStackAssociations"
        ],
        "BatchDisassociateUserStack": [
            "UserStackAssociations"
        ],
        "CopyImage": [
            "SourceImageName",
            "DestinationImageName",
            "DestinationRegion"
        ],
        "CreateAppBlock": [
            "Name",
            "SourceS3Location"
        ],
        "CreateAppBlockBuilder": [
            "Name",
            "Platform",
            "InstanceType",
            "VpcConfig"
        ],
        "CreateAppBlockBuilderStreamingURL": [
            "AppBlockBuilderName"
        ],
        "CreateApplication": [
            "Name",
            "IconS3Location",
            "LaunchPath",
            "Platforms",
            "InstanceFamilies",
            "AppBlockArn"
        ],
        "CreateDirectoryConfig": [
            "DirectoryName",
            "OrganizationalUnitDistinguishedNames"
        ],
        "CreateEntitlement": [
            "Name",
            "StackName",
            "AppVisibility",
            "Attributes"
        ],
        "CreateFleet": [
            "Name",
            "InstanceType"
        ],
        "CreateImageBuilder": [
            "Name",
            "InstanceType"
        ],
        "CreateImageBuilderStreamingURL": [
            "Name"
        ],
        "CreateStack": [
            "Name"
        ],
        "CreateStreamingURL": [
            "StackName",
            "FleetName",
            "UserId"
        ],
        "CreateUpdatedImage": [
            "existingImageName",
            "newImageName"
        ],
        "CreateUsageReportSubscription": "",
        "CreateUser": [
            "UserName",
            "AuthenticationType"
        ],
        "DeleteAppBlock": [
            "Name"
        ],
        "DeleteAppBlockBuilder": [
            "Name"
        ],
        "DeleteApplication": [
            "Name"
        ],
        "DeleteDirectoryConfig": [
            "DirectoryName"
        ],
        "DeleteEntitlement": [
            "Name",
            "StackName"
        ],
        "DeleteFleet": [
            "Name"
        ],
        "DeleteImage": [
            "Name"
        ],
        "DeleteImageBuilder": [
            "Name"
        ],
        "DeleteImagePermissions": [
            "Name",
            "SharedAccountId"
        ],
        "DeleteStack": [
            "Name"
        ],
        "DeleteUsageReportSubscription": "",
        "DeleteUser": [
            "UserName",
            "AuthenticationType"
        ],
        "DescribeAppBlockBuilderAppBlockAssociations": "",
        "DescribeAppBlockBuilders": "",
        "DescribeAppBlocks": "",
        "DescribeApplicationFleetAssociations": "",
        "DescribeApplications": "",
        "DescribeDirectoryConfigs": "",
        "DescribeEntitlements": [
            "StackName"
        ],
        "DescribeFleets": "",
        "DescribeImageBuilders": "",
        "DescribeImagePermissions": [
            "Name"
        ],
        "DescribeImages": "",
        "DescribeSessions": [
            "StackName",
            "FleetName"
        ],
        "DescribeStacks": "",
        "DescribeUsageReportSubscriptions": "",
        "DescribeUserStackAssociations": "",
        "DescribeUsers": [
            "AuthenticationType"
        ],
        "DisableUser": [
            "UserName",
            "AuthenticationType"
        ],
        "DisassociateAppBlockBuilderAppBlock": [
            "AppBlockArn",
            "AppBlockBuilderName"
        ],
        "DisassociateApplicationFleet": [
            "FleetName",
            "ApplicationArn"
        ],
        "DisassociateApplicationFromEntitlement": [
            "StackName",
            "EntitlementName",
            "ApplicationIdentifier"
        ],
        "DisassociateFleet": [
            "FleetName",
            "StackName"
        ],
        "EnableUser": [
            "UserName",
            "AuthenticationType"
        ],
        "ExpireSession": [
            "SessionId"
        ],
        "ListAssociatedFleets": [
            "StackName"
        ],
        "ListAssociatedStacks": [
            "FleetName"
        ],
        "ListEntitledApplications": [
            "StackName",
            "EntitlementName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartAppBlockBuilder": [
            "Name"
        ],
        "StartFleet": [
            "Name"
        ],
        "StartImageBuilder": [
            "Name"
        ],
        "StopAppBlockBuilder": [
            "Name"
        ],
        "StopFleet": [
            "Name"
        ],
        "StopImageBuilder": [
            "Name"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAppBlockBuilder": [
            "Name"
        ],
        "UpdateApplication": [
            "Name"
        ],
        "UpdateDirectoryConfig": [
            "DirectoryName"
        ],
        "UpdateEntitlement": [
            "Name",
            "StackName"
        ],
        "UpdateFleet": "",
        "UpdateImagePermissions": [
            "Name",
            "SharedAccountId",
            "ImagePermissions"
        ],
        "UpdateStack": [
            "Name"
        ]
    },
    "appsync": {
        "AssociateApi": [
            "domainName",
            "apiId"
        ],
        "AssociateMergedGraphqlApi": [
            "sourceApiIdentifier",
            "mergedApiIdentifier"
        ],
        "AssociateSourceGraphqlApi": [
            "mergedApiIdentifier",
            "sourceApiIdentifier"
        ],
        "CreateApiCache": [
            "apiId",
            "ttl",
            "apiCachingBehavior",
            "type"
        ],
        "CreateApiKey": [
            "apiId"
        ],
        "CreateDataSource": [
            "apiId",
            "name",
            "type"
        ],
        "CreateDomainName": [
            "domainName",
            "certificateArn"
        ],
        "CreateFunction": [
            "apiId",
            "name",
            "dataSourceName"
        ],
        "CreateGraphqlApi": [
            "name",
            "authenticationType"
        ],
        "CreateResolver": [
            "apiId",
            "typeName",
            "fieldName"
        ],
        "CreateType": [
            "apiId",
            "definition",
            "format"
        ],
        "DeleteApiCache": [
            "apiId"
        ],
        "DeleteApiKey": [
            "apiId",
            "id"
        ],
        "DeleteDataSource": [
            "apiId",
            "name"
        ],
        "DeleteDomainName": [
            "domainName"
        ],
        "DeleteFunction": [
            "apiId",
            "functionId"
        ],
        "DeleteGraphqlApi": [
            "apiId"
        ],
        "DeleteResolver": [
            "apiId",
            "typeName",
            "fieldName"
        ],
        "DeleteType": [
            "apiId",
            "typeName"
        ],
        "DisassociateApi": [
            "domainName"
        ],
        "DisassociateMergedGraphqlApi": [
            "sourceApiIdentifier",
            "associationId"
        ],
        "DisassociateSourceGraphqlApi": [
            "mergedApiIdentifier",
            "associationId"
        ],
        "EvaluateCode": [
            "runtime",
            "code",
            "context"
        ],
        "EvaluateMappingTemplate": [
            "template",
            "context"
        ],
        "FlushApiCache": [
            "apiId"
        ],
        "GetApiAssociation": [
            "domainName"
        ],
        "GetApiCache": [
            "apiId"
        ],
        "GetDataSource": [
            "apiId",
            "name"
        ],
        "GetDataSourceIntrospection": [
            "introspectionId"
        ],
        "GetDomainName": [
            "domainName"
        ],
        "GetFunction": [
            "apiId",
            "functionId"
        ],
        "GetGraphqlApi": [
            "apiId"
        ],
        "GetGraphqlApiEnvironmentVariables": [
            "apiId"
        ],
        "GetIntrospectionSchema": [
            "apiId",
            "format"
        ],
        "GetResolver": [
            "apiId",
            "typeName",
            "fieldName"
        ],
        "GetSchemaCreationStatus": [
            "apiId"
        ],
        "GetSourceApiAssociation": [
            "mergedApiIdentifier",
            "associationId"
        ],
        "GetType": [
            "apiId",
            "typeName",
            "format"
        ],
        "ListApiKeys": [
            "apiId"
        ],
        "ListDataSources": [
            "apiId"
        ],
        "ListDomainNames": "",
        "ListFunctions": [
            "apiId"
        ],
        "ListGraphqlApis": "",
        "ListResolvers": [
            "apiId",
            "typeName"
        ],
        "ListResolversByFunction": [
            "apiId",
            "functionId"
        ],
        "ListSourceApiAssociations": [
            "apiId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTypes": [
            "apiId",
            "format"
        ],
        "ListTypesByAssociation": [
            "mergedApiIdentifier",
            "associationId",
            "format"
        ],
        "PutGraphqlApiEnvironmentVariables": [
            "apiId",
            "environmentVariables"
        ],
        "StartDataSourceIntrospection": "",
        "StartSchemaCreation": [
            "apiId",
            "definition"
        ],
        "StartSchemaMerge": [
            "associationId",
            "mergedApiIdentifier"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApiCache": [
            "apiId",
            "ttl",
            "apiCachingBehavior",
            "type"
        ],
        "UpdateApiKey": [
            "apiId",
            "id"
        ],
        "UpdateDataSource": [
            "apiId",
            "name",
            "type"
        ],
        "UpdateDomainName": [
            "domainName"
        ],
        "UpdateFunction": [
            "apiId",
            "name",
            "functionId",
            "dataSourceName"
        ],
        "UpdateGraphqlApi": [
            "apiId",
            "name"
        ],
        "UpdateResolver": [
            "apiId",
            "typeName",
            "fieldName"
        ],
        "UpdateSourceApiAssociation": [
            "associationId",
            "mergedApiIdentifier"
        ],
        "UpdateType": [
            "apiId",
            "typeName",
            "format"
        ]
    },
    "arc-zonal-shift": {
        "CancelZonalShift": [
            "zonalShiftId"
        ],
        "CreatePracticeRunConfiguration": [
            "outcomeAlarms",
            "resourceIdentifier"
        ],
        "DeletePracticeRunConfiguration": [
            "resourceIdentifier"
        ],
        "GetManagedResource": [
            "resourceIdentifier"
        ],
        "ListAutoshifts": "",
        "ListManagedResources": "",
        "ListZonalShifts": "",
        "StartZonalShift": [
            "awayFrom",
            "comment",
            "expiresIn",
            "resourceIdentifier"
        ],
        "UpdatePracticeRunConfiguration": [
            "resourceIdentifier"
        ],
        "UpdateZonalAutoshiftConfiguration": [
            "resourceIdentifier",
            "zonalAutoshiftStatus"
        ],
        "UpdateZonalShift": [
            "zonalShiftId"
        ]
    },
    "artifact": {
        "GetAccountSettings": "",
        "GetReport": [
            "reportId",
            "termToken"
        ],
        "GetReportMetadata": [
            "reportId"
        ],
        "GetTermForReport": [
            "reportId"
        ],
        "ListReports": "",
        "PutAccountSettings": ""
    },
    "athena": {
        "BatchGetNamedQuery": [
            "NamedQueryIds"
        ],
        "BatchGetPreparedStatement": [
            "PreparedStatementNames",
            "WorkGroup"
        ],
        "BatchGetQueryExecution": [
            "QueryExecutionIds"
        ],
        "CancelCapacityReservation": [
            "Name"
        ],
        "CreateCapacityReservation": [
            "TargetDpus",
            "Name"
        ],
        "CreateDataCatalog": [
            "Name",
            "Type"
        ],
        "CreateNamedQuery": [
            "Name",
            "Database",
            "QueryString"
        ],
        "CreateNotebook": [
            "WorkGroup",
            "Name"
        ],
        "CreatePreparedStatement": [
            "StatementName",
            "WorkGroup",
            "QueryStatement"
        ],
        "CreatePresignedNotebookUrl": [
            "SessionId"
        ],
        "CreateWorkGroup": [
            "Name"
        ],
        "DeleteCapacityReservation": [
            "Name"
        ],
        "DeleteDataCatalog": [
            "Name"
        ],
        "DeleteNamedQuery": [
            "NamedQueryId"
        ],
        "DeleteNotebook": [
            "NotebookId"
        ],
        "DeletePreparedStatement": [
            "StatementName",
            "WorkGroup"
        ],
        "DeleteWorkGroup": [
            "WorkGroup"
        ],
        "ExportNotebook": [
            "NotebookId"
        ],
        "GetCalculationExecution": [
            "CalculationExecutionId"
        ],
        "GetCalculationExecutionCode": [
            "CalculationExecutionId"
        ],
        "GetCalculationExecutionStatus": [
            "CalculationExecutionId"
        ],
        "GetCapacityAssignmentConfiguration": [
            "CapacityReservationName"
        ],
        "GetCapacityReservation": [
            "Name"
        ],
        "GetDataCatalog": [
            "Name"
        ],
        "GetDatabase": [
            "CatalogName",
            "DatabaseName"
        ],
        "GetNamedQuery": [
            "NamedQueryId"
        ],
        "GetNotebookMetadata": [
            "NotebookId"
        ],
        "GetPreparedStatement": [
            "StatementName",
            "WorkGroup"
        ],
        "GetQueryExecution": [
            "QueryExecutionId"
        ],
        "GetQueryResults": [
            "QueryExecutionId"
        ],
        "GetQueryRuntimeStatistics": [
            "QueryExecutionId"
        ],
        "GetSession": [
            "SessionId"
        ],
        "GetSessionStatus": [
            "SessionId"
        ],
        "GetTableMetadata": [
            "CatalogName",
            "DatabaseName",
            "TableName"
        ],
        "GetWorkGroup": [
            "WorkGroup"
        ],
        "ImportNotebook": [
            "WorkGroup",
            "Name",
            "Type"
        ],
        "ListApplicationDPUSizes": "",
        "ListCalculationExecutions": [
            "SessionId"
        ],
        "ListCapacityReservations": "",
        "ListDataCatalogs": "",
        "ListDatabases": [
            "CatalogName"
        ],
        "ListEngineVersions": "",
        "ListExecutors": [
            "SessionId"
        ],
        "ListNamedQueries": "",
        "ListNotebookMetadata": [
            "WorkGroup"
        ],
        "ListNotebookSessions": [
            "NotebookId"
        ],
        "ListPreparedStatements": [
            "WorkGroup"
        ],
        "ListQueryExecutions": "",
        "ListSessions": [
            "WorkGroup"
        ],
        "ListTableMetadata": [
            "CatalogName",
            "DatabaseName"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListWorkGroups": "",
        "PutCapacityAssignmentConfiguration": [
            "CapacityReservationName",
            "CapacityAssignments"
        ],
        "StartCalculationExecution": [
            "SessionId"
        ],
        "StartQueryExecution": [
            "QueryString"
        ],
        "StartSession": [
            "WorkGroup",
            "EngineConfiguration"
        ],
        "StopCalculationExecution": [
            "CalculationExecutionId"
        ],
        "StopQueryExecution": [
            "QueryExecutionId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TerminateSession": [
            "SessionId"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateCapacityReservation": [
            "TargetDpus",
            "Name"
        ],
        "UpdateDataCatalog": [
            "Name",
            "Type"
        ],
        "UpdateNamedQuery": [
            "NamedQueryId",
            "Name",
            "QueryString"
        ],
        "UpdateNotebook": [
            "NotebookId",
            "Payload",
            "Type"
        ],
        "UpdateNotebookMetadata": [
            "NotebookId",
            "Name"
        ],
        "UpdatePreparedStatement": [
            "StatementName",
            "WorkGroup",
            "QueryStatement"
        ],
        "UpdateWorkGroup": [
            "WorkGroup"
        ]
    },
    "auditmanager": {
        "AssociateAssessmentReportEvidenceFolder": [
            "assessmentId",
            "evidenceFolderId"
        ],
        "BatchAssociateAssessmentReportEvidence": [
            "assessmentId",
            "evidenceFolderId",
            "evidenceIds"
        ],
        "BatchCreateDelegationByAssessment": [
            "createDelegationRequests",
            "assessmentId"
        ],
        "BatchDeleteDelegationByAssessment": [
            "delegationIds",
            "assessmentId"
        ],
        "BatchDisassociateAssessmentReportEvidence": [
            "assessmentId",
            "evidenceFolderId",
            "evidenceIds"
        ],
        "BatchImportEvidenceToAssessmentControl": [
            "assessmentId",
            "controlSetId",
            "controlId",
            "manualEvidence"
        ],
        "CreateAssessment": [
            "name",
            "assessmentReportsDestination",
            "scope",
            "roles",
            "frameworkId"
        ],
        "CreateAssessmentFramework": [
            "name",
            "controlSets"
        ],
        "CreateAssessmentReport": [
            "name",
            "assessmentId"
        ],
        "CreateControl": [
            "name",
            "controlMappingSources"
        ],
        "DeleteAssessment": [
            "assessmentId"
        ],
        "DeleteAssessmentFramework": [
            "frameworkId"
        ],
        "DeleteAssessmentFrameworkShare": [
            "requestId",
            "requestType"
        ],
        "DeleteAssessmentReport": [
            "assessmentId",
            "assessmentReportId"
        ],
        "DeleteControl": [
            "controlId"
        ],
        "DeregisterAccount": "",
        "DeregisterOrganizationAdminAccount": "",
        "DisassociateAssessmentReportEvidenceFolder": [
            "assessmentId",
            "evidenceFolderId"
        ],
        "GetAccountStatus": "",
        "GetAssessment": [
            "assessmentId"
        ],
        "GetAssessmentFramework": [
            "frameworkId"
        ],
        "GetAssessmentReportUrl": [
            "assessmentReportId",
            "assessmentId"
        ],
        "GetChangeLogs": [
            "assessmentId"
        ],
        "GetControl": [
            "controlId"
        ],
        "GetDelegations": "",
        "GetEvidence": [
            "assessmentId",
            "controlSetId",
            "evidenceFolderId",
            "evidenceId"
        ],
        "GetEvidenceByEvidenceFolder": [
            "assessmentId",
            "controlSetId",
            "evidenceFolderId"
        ],
        "GetEvidenceFileUploadUrl": [
            "fileName"
        ],
        "GetEvidenceFolder": [
            "assessmentId",
            "controlSetId",
            "evidenceFolderId"
        ],
        "GetEvidenceFoldersByAssessment": [
            "assessmentId"
        ],
        "GetEvidenceFoldersByAssessmentControl": [
            "assessmentId",
            "controlSetId",
            "controlId"
        ],
        "GetInsights": "",
        "GetInsightsByAssessment": [
            "assessmentId"
        ],
        "GetOrganizationAdminAccount": "",
        "GetServicesInScope": "",
        "GetSettings": [
            "attribute"
        ],
        "ListAssessmentControlInsightsByControlDomain": [
            "controlDomainId",
            "assessmentId"
        ],
        "ListAssessmentFrameworkShareRequests": [
            "requestType"
        ],
        "ListAssessmentFrameworks": [
            "frameworkType"
        ],
        "ListAssessmentReports": "",
        "ListAssessments": "",
        "ListControlDomainInsights": "",
        "ListControlDomainInsightsByAssessment": [
            "assessmentId"
        ],
        "ListControlInsightsByControlDomain": [
            "controlDomainId"
        ],
        "ListControls": [
            "controlType"
        ],
        "ListKeywordsForDataSource": [
            "source"
        ],
        "ListNotifications": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterAccount": "",
        "RegisterOrganizationAdminAccount": [
            "adminAccountId"
        ],
        "StartAssessmentFrameworkShare": [
            "frameworkId",
            "destinationAccount",
            "destinationRegion"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAssessment": [
            "assessmentId",
            "scope"
        ],
        "UpdateAssessmentControl": [
            "assessmentId",
            "controlSetId",
            "controlId"
        ],
        "UpdateAssessmentControlSetStatus": [
            "assessmentId",
            "controlSetId",
            "status",
            "comment"
        ],
        "UpdateAssessmentFramework": [
            "frameworkId",
            "name",
            "controlSets"
        ],
        "UpdateAssessmentFrameworkShare": [
            "requestId",
            "requestType",
            "action"
        ],
        "UpdateAssessmentStatus": [
            "assessmentId",
            "status"
        ],
        "UpdateControl": [
            "controlId",
            "name",
            "controlMappingSources"
        ],
        "UpdateSettings": "",
        "ValidateAssessmentReportIntegrity": [
            "s3RelativePath"
        ]
    },
    "autoscaling": {
        "AttachInstances": [
            "AutoScalingGroupName"
        ],
        "AttachLoadBalancerTargetGroups": [
            "AutoScalingGroupName",
            "TargetGroupARNs"
        ],
        "AttachLoadBalancers": [
            "AutoScalingGroupName",
            "LoadBalancerNames"
        ],
        "AttachTrafficSources": [
            "AutoScalingGroupName",
            "TrafficSources"
        ],
        "BatchDeleteScheduledAction": [
            "AutoScalingGroupName",
            "ScheduledActionNames"
        ],
        "BatchPutScheduledUpdateGroupAction": [
            "AutoScalingGroupName",
            "ScheduledUpdateGroupActions"
        ],
        "CancelInstanceRefresh": [
            "AutoScalingGroupName"
        ],
        "CompleteLifecycleAction": [
            "LifecycleHookName",
            "AutoScalingGroupName",
            "LifecycleActionResult"
        ],
        "CreateAutoScalingGroup": [
            "AutoScalingGroupName",
            "MinSize",
            "MaxSize"
        ],
        "CreateLaunchConfiguration": [
            "LaunchConfigurationName"
        ],
        "CreateOrUpdateTags": [
            "Tags"
        ],
        "DeleteAutoScalingGroup": [
            "AutoScalingGroupName"
        ],
        "DeleteLaunchConfiguration": [
            "LaunchConfigurationName"
        ],
        "DeleteLifecycleHook": [
            "LifecycleHookName",
            "AutoScalingGroupName"
        ],
        "DeleteNotificationConfiguration": [
            "AutoScalingGroupName",
            "TopicARN"
        ],
        "DeletePolicy": [
            "PolicyName"
        ],
        "DeleteScheduledAction": [
            "AutoScalingGroupName",
            "ScheduledActionName"
        ],
        "DeleteTags": [
            "Tags"
        ],
        "DeleteWarmPool": [
            "AutoScalingGroupName"
        ],
        "DescribeAccountLimits": "",
        "DescribeAdjustmentTypes": "",
        "DescribeAutoScalingGroups": "",
        "DescribeAutoScalingInstances": "",
        "DescribeAutoScalingNotificationTypes": "",
        "DescribeInstanceRefreshes": [
            "AutoScalingGroupName"
        ],
        "DescribeLaunchConfigurations": "",
        "DescribeLifecycleHookTypes": "",
        "DescribeLifecycleHooks": [
            "AutoScalingGroupName"
        ],
        "DescribeLoadBalancerTargetGroups": [
            "AutoScalingGroupName"
        ],
        "DescribeLoadBalancers": [
            "AutoScalingGroupName"
        ],
        "DescribeMetricCollectionTypes": "",
        "DescribeNotificationConfigurations": "",
        "DescribePolicies": "",
        "DescribeScalingActivities": "",
        "DescribeScalingProcessTypes": "",
        "DescribeScheduledActions": "",
        "DescribeTags": "",
        "DescribeTerminationPolicyTypes": "",
        "DescribeTrafficSources": [
            "AutoScalingGroupName"
        ],
        "DescribeWarmPool": [
            "AutoScalingGroupName"
        ],
        "DetachInstances": [
            "AutoScalingGroupName",
            "ShouldDecrementDesiredCapacity"
        ],
        "DetachLoadBalancerTargetGroups": [
            "AutoScalingGroupName",
            "TargetGroupARNs"
        ],
        "DetachLoadBalancers": [
            "AutoScalingGroupName",
            "LoadBalancerNames"
        ],
        "DetachTrafficSources": [
            "AutoScalingGroupName",
            "TrafficSources"
        ],
        "DisableMetricsCollection": [
            "AutoScalingGroupName"
        ],
        "EnableMetricsCollection": [
            "AutoScalingGroupName",
            "Granularity"
        ],
        "EnterStandby": [
            "AutoScalingGroupName",
            "ShouldDecrementDesiredCapacity"
        ],
        "ExecutePolicy": [
            "PolicyName"
        ],
        "ExitStandby": [
            "AutoScalingGroupName"
        ],
        "GetPredictiveScalingForecast": [
            "AutoScalingGroupName",
            "PolicyName",
            "StartTime",
            "EndTime"
        ],
        "PutLifecycleHook": [
            "LifecycleHookName",
            "AutoScalingGroupName"
        ],
        "PutNotificationConfiguration": [
            "AutoScalingGroupName",
            "TopicARN",
            "NotificationTypes"
        ],
        "PutScalingPolicy": [
            "AutoScalingGroupName",
            "PolicyName"
        ],
        "PutScheduledUpdateGroupAction": [
            "AutoScalingGroupName",
            "ScheduledActionName"
        ],
        "PutWarmPool": [
            "AutoScalingGroupName"
        ],
        "RecordLifecycleActionHeartbeat": [
            "LifecycleHookName",
            "AutoScalingGroupName"
        ],
        "ResumeProcesses": "",
        "RollbackInstanceRefresh": [
            "AutoScalingGroupName"
        ],
        "SetDesiredCapacity": [
            "AutoScalingGroupName",
            "DesiredCapacity"
        ],
        "SetInstanceHealth": [
            "InstanceId",
            "HealthStatus"
        ],
        "SetInstanceProtection": [
            "InstanceIds",
            "AutoScalingGroupName",
            "ProtectedFromScaleIn"
        ],
        "StartInstanceRefresh": [
            "AutoScalingGroupName"
        ],
        "SuspendProcesses": "",
        "TerminateInstanceInAutoScalingGroup": [
            "InstanceId",
            "ShouldDecrementDesiredCapacity"
        ],
        "UpdateAutoScalingGroup": [
            "AutoScalingGroupName"
        ]
    },
    "autoscaling-plans": {
        "CreateScalingPlan": [
            "ScalingPlanName",
            "ApplicationSource",
            "ScalingInstructions"
        ],
        "DeleteScalingPlan": [
            "ScalingPlanName",
            "ScalingPlanVersion"
        ],
        "DescribeScalingPlanResources": [
            "ScalingPlanName",
            "ScalingPlanVersion"
        ],
        "DescribeScalingPlans": "",
        "GetScalingPlanResourceForecastData": [
            "ScalingPlanName",
            "ScalingPlanVersion",
            "ServiceNamespace",
            "ResourceId",
            "ScalableDimension",
            "ForecastDataType",
            "StartTime",
            "EndTime"
        ],
        "UpdateScalingPlan": [
            "ScalingPlanName",
            "ScalingPlanVersion"
        ]
    },
    "b2bi": {
        "CreateCapability": [
            "name",
            "type",
            "configuration"
        ],
        "CreatePartnership": [
            "profileId",
            "name",
            "email"
        ],
        "CreateProfile": [
            "name",
            "phone",
            "businessName",
            "logging"
        ],
        "CreateTransformer": [
            "name",
            "fileFormat",
            "mappingTemplate",
            "ediType"
        ],
        "DeleteCapability": [
            "capabilityId"
        ],
        "DeletePartnership": [
            "partnershipId"
        ],
        "DeleteProfile": [
            "profileId"
        ],
        "DeleteTransformer": [
            "transformerId"
        ],
        "GetCapability": [
            "capabilityId"
        ],
        "GetPartnership": [
            "partnershipId"
        ],
        "GetProfile": [
            "profileId"
        ],
        "GetTransformer": [
            "transformerId"
        ],
        "GetTransformerJob": [
            "transformerJobId",
            "transformerId"
        ],
        "ListCapabilities": "",
        "ListPartnerships": "",
        "ListProfiles": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTransformers": "",
        "StartTransformerJob": [
            "inputFile",
            "outputLocation",
            "transformerId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TestMapping": [
            "inputFileContent",
            "mappingTemplate",
            "fileFormat"
        ],
        "TestParsing": [
            "inputFile",
            "fileFormat",
            "ediType"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateCapability": [
            "capabilityId"
        ],
        "UpdatePartnership": [
            "partnershipId"
        ],
        "UpdateProfile": [
            "profileId"
        ],
        "UpdateTransformer": [
            "transformerId"
        ]
    },
    "backup": {
        "CancelLegalHold": [
            "LegalHoldId",
            "CancelDescription"
        ],
        "CreateBackupPlan": [
            "BackupPlan"
        ],
        "CreateBackupSelection": [
            "BackupPlanId",
            "BackupSelection"
        ],
        "CreateBackupVault": [
            "BackupVaultName"
        ],
        "CreateFramework": [
            "FrameworkName",
            "FrameworkControls"
        ],
        "CreateLegalHold": [
            "Title",
            "Description"
        ],
        "CreateLogicallyAirGappedBackupVault": [
            "BackupVaultName",
            "MinRetentionDays",
            "MaxRetentionDays"
        ],
        "CreateReportPlan": [
            "ReportPlanName",
            "ReportDeliveryChannel",
            "ReportSetting"
        ],
        "CreateRestoreTestingPlan": [
            "RestoreTestingPlan"
        ],
        "CreateRestoreTestingSelection": [
            "RestoreTestingPlanName",
            "RestoreTestingSelection"
        ],
        "DeleteBackupPlan": [
            "BackupPlanId"
        ],
        "DeleteBackupSelection": [
            "BackupPlanId",
            "SelectionId"
        ],
        "DeleteBackupVault": [
            "BackupVaultName"
        ],
        "DeleteBackupVaultAccessPolicy": [
            "BackupVaultName"
        ],
        "DeleteBackupVaultLockConfiguration": [
            "BackupVaultName"
        ],
        "DeleteBackupVaultNotifications": [
            "BackupVaultName"
        ],
        "DeleteFramework": [
            "FrameworkName"
        ],
        "DeleteRecoveryPoint": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "DeleteReportPlan": [
            "ReportPlanName"
        ],
        "DeleteRestoreTestingPlan": [
            "RestoreTestingPlanName"
        ],
        "DeleteRestoreTestingSelection": [
            "RestoreTestingPlanName",
            "RestoreTestingSelectionName"
        ],
        "DescribeBackupJob": [
            "BackupJobId"
        ],
        "DescribeBackupVault": [
            "BackupVaultName"
        ],
        "DescribeCopyJob": [
            "CopyJobId"
        ],
        "DescribeFramework": [
            "FrameworkName"
        ],
        "DescribeGlobalSettings": "",
        "DescribeProtectedResource": [
            "ResourceArn"
        ],
        "DescribeRecoveryPoint": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "DescribeRegionSettings": "",
        "DescribeReportJob": [
            "ReportJobId"
        ],
        "DescribeReportPlan": [
            "ReportPlanName"
        ],
        "DescribeRestoreJob": [
            "RestoreJobId"
        ],
        "DisassociateRecoveryPoint": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "DisassociateRecoveryPointFromParent": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "ExportBackupPlanTemplate": [
            "BackupPlanId"
        ],
        "GetBackupPlan": [
            "BackupPlanId"
        ],
        "GetBackupPlanFromJSON": [
            "BackupPlanTemplateJson"
        ],
        "GetBackupPlanFromTemplate": [
            "BackupPlanTemplateId"
        ],
        "GetBackupSelection": [
            "BackupPlanId",
            "SelectionId"
        ],
        "GetBackupVaultAccessPolicy": [
            "BackupVaultName"
        ],
        "GetBackupVaultNotifications": [
            "BackupVaultName"
        ],
        "GetLegalHold": [
            "LegalHoldId"
        ],
        "GetRecoveryPointRestoreMetadata": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "GetRestoreJobMetadata": [
            "RestoreJobId"
        ],
        "GetRestoreTestingInferredMetadata": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "GetRestoreTestingPlan": [
            "RestoreTestingPlanName"
        ],
        "GetRestoreTestingSelection": [
            "RestoreTestingPlanName",
            "RestoreTestingSelectionName"
        ],
        "GetSupportedResourceTypes": "",
        "ListBackupJobSummaries": "",
        "ListBackupJobs": "",
        "ListBackupPlanTemplates": "",
        "ListBackupPlanVersions": [
            "BackupPlanId"
        ],
        "ListBackupPlans": "",
        "ListBackupSelections": [
            "BackupPlanId"
        ],
        "ListBackupVaults": "",
        "ListCopyJobSummaries": "",
        "ListCopyJobs": "",
        "ListFrameworks": "",
        "ListLegalHolds": "",
        "ListProtectedResources": "",
        "ListProtectedResourcesByBackupVault": [
            "BackupVaultName"
        ],
        "ListRecoveryPointsByBackupVault": [
            "BackupVaultName"
        ],
        "ListRecoveryPointsByLegalHold": [
            "LegalHoldId"
        ],
        "ListRecoveryPointsByResource": [
            "ResourceArn"
        ],
        "ListReportJobs": "",
        "ListReportPlans": "",
        "ListRestoreJobSummaries": "",
        "ListRestoreJobs": "",
        "ListRestoreJobsByProtectedResource": [
            "ResourceArn"
        ],
        "ListRestoreTestingPlans": "",
        "ListRestoreTestingSelections": [
            "RestoreTestingPlanName"
        ],
        "ListTags": [
            "ResourceArn"
        ],
        "PutBackupVaultAccessPolicy": [
            "BackupVaultName"
        ],
        "PutBackupVaultLockConfiguration": [
            "BackupVaultName"
        ],
        "PutBackupVaultNotifications": [
            "BackupVaultName",
            "SNSTopicArn",
            "BackupVaultEvents"
        ],
        "PutRestoreValidationResult": [
            "RestoreJobId",
            "ValidationStatus"
        ],
        "StartBackupJob": [
            "BackupVaultName",
            "ResourceArn",
            "IamRoleArn"
        ],
        "StartCopyJob": [
            "RecoveryPointArn",
            "SourceBackupVaultName",
            "DestinationBackupVaultArn",
            "IamRoleArn"
        ],
        "StartReportJob": [
            "ReportPlanName"
        ],
        "StartRestoreJob": [
            "RecoveryPointArn",
            "Metadata"
        ],
        "StopBackupJob": [
            "BackupJobId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeyList"
        ],
        "UpdateBackupPlan": [
            "BackupPlanId",
            "BackupPlan"
        ],
        "UpdateFramework": [
            "FrameworkName"
        ],
        "UpdateGlobalSettings": "",
        "UpdateRecoveryPointLifecycle": [
            "BackupVaultName",
            "RecoveryPointArn"
        ],
        "UpdateRegionSettings": "",
        "UpdateReportPlan": [
            "ReportPlanName"
        ],
        "UpdateRestoreTestingPlan": [
            "RestoreTestingPlan",
            "RestoreTestingPlanName"
        ],
        "UpdateRestoreTestingSelection": [
            "RestoreTestingPlanName",
            "RestoreTestingSelection",
            "RestoreTestingSelectionName"
        ]
    },
    "backup-gateway": {
        "AssociateGatewayToServer": [
            "GatewayArn",
            "ServerArn"
        ],
        "CreateGateway": [
            "ActivationKey",
            "GatewayDisplayName",
            "GatewayType"
        ],
        "DeleteGateway": [
            "GatewayArn"
        ],
        "DeleteHypervisor": [
            "HypervisorArn"
        ],
        "DisassociateGatewayFromServer": [
            "GatewayArn"
        ],
        "GetBandwidthRateLimitSchedule": [
            "GatewayArn"
        ],
        "GetGateway": [
            "GatewayArn"
        ],
        "GetHypervisor": [
            "HypervisorArn"
        ],
        "GetHypervisorPropertyMappings": [
            "HypervisorArn"
        ],
        "GetVirtualMachine": [
            "ResourceArn"
        ],
        "ImportHypervisorConfiguration": [
            "Host",
            "Name"
        ],
        "ListGateways": "",
        "ListHypervisors": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListVirtualMachines": "",
        "PutBandwidthRateLimitSchedule": [
            "BandwidthRateLimitIntervals",
            "GatewayArn"
        ],
        "PutHypervisorPropertyMappings": [
            "HypervisorArn",
            "IamRoleArn",
            "VmwareToAwsTagMappings"
        ],
        "PutMaintenanceStartTime": [
            "GatewayArn",
            "HourOfDay",
            "MinuteOfHour"
        ],
        "StartVirtualMachinesMetadataSync": [
            "HypervisorArn"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TestHypervisorConfiguration": [
            "GatewayArn",
            "Host"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateGatewayInformation": [
            "GatewayArn"
        ],
        "UpdateGatewaySoftwareNow": [
            "GatewayArn"
        ],
        "UpdateHypervisor": [
            "HypervisorArn"
        ]
    },
    "backupstorage": {
        "DeleteObject": [
            "BackupJobId",
            "ObjectName"
        ],
        "GetChunk": [
            "StorageJobId",
            "ChunkToken"
        ],
        "GetObjectMetadata": [
            "StorageJobId",
            "ObjectToken"
        ],
        "ListChunks": [
            "StorageJobId",
            "ObjectToken"
        ],
        "ListObjects": [
            "StorageJobId"
        ],
        "NotifyObjectComplete": [
            "BackupJobId",
            "UploadId",
            "ObjectChecksum",
            "ObjectChecksumAlgorithm"
        ],
        "PutChunk": [
            "BackupJobId",
            "UploadId",
            "ChunkIndex",
            "Data",
            "Length",
            "Checksum",
            "ChecksumAlgorithm"
        ],
        "PutObject": [
            "BackupJobId",
            "ObjectName"
        ],
        "StartObject": [
            "BackupJobId",
            "ObjectName"
        ]
    },
    "batch": {
        "CancelJob": [
            "jobId",
            "reason"
        ],
        "CreateComputeEnvironment": [
            "computeEnvironmentName",
            "type"
        ],
        "CreateJobQueue": [
            "jobQueueName",
            "priority",
            "computeEnvironmentOrder"
        ],
        "CreateSchedulingPolicy": [
            "name"
        ],
        "DeleteComputeEnvironment": [
            "computeEnvironment"
        ],
        "DeleteJobQueue": [
            "jobQueue"
        ],
        "DeleteSchedulingPolicy": [
            "arn"
        ],
        "DeregisterJobDefinition": [
            "jobDefinition"
        ],
        "DescribeComputeEnvironments": "",
        "DescribeJobDefinitions": "",
        "DescribeJobQueues": "",
        "DescribeJobs": [
            "jobs"
        ],
        "DescribeSchedulingPolicies": [
            "arns"
        ],
        "ListJobs": "",
        "ListSchedulingPolicies": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterJobDefinition": [
            "jobDefinitionName",
            "type"
        ],
        "SubmitJob": [
            "jobName",
            "jobQueue",
            "jobDefinition"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TerminateJob": [
            "jobId",
            "reason"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateComputeEnvironment": [
            "computeEnvironment"
        ],
        "UpdateJobQueue": [
            "jobQueue"
        ],
        "UpdateSchedulingPolicy": [
            "arn"
        ]
    },
    "bcm-data-exports": {
        "CreateExport": [
            "Export"
        ],
        "DeleteExport": [
            "ExportArn"
        ],
        "GetExecution": [
            "ExecutionId",
            "ExportArn"
        ],
        "GetExport": [
            "ExportArn"
        ],
        "GetTable": [
            "TableName"
        ],
        "ListExecutions": [
            "ExportArn"
        ],
        "ListExports": "",
        "ListTables": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "ResourceTags"
        ],
        "UntagResource": [
            "ResourceArn",
            "ResourceTagKeys"
        ],
        "UpdateExport": [
            "Export",
            "ExportArn"
        ]
    },
    "bedrock": {
        "CreateModelCustomizationJob": [
            "jobName",
            "customModelName",
            "roleArn",
            "baseModelIdentifier",
            "trainingDataConfig",
            "outputDataConfig",
            "hyperParameters"
        ],
        "CreateProvisionedModelThroughput": [
            "modelUnits",
            "provisionedModelName",
            "modelId"
        ],
        "DeleteCustomModel": [
            "modelIdentifier"
        ],
        "DeleteModelInvocationLoggingConfiguration": "",
        "DeleteProvisionedModelThroughput": [
            "provisionedModelId"
        ],
        "GetCustomModel": [
            "modelIdentifier"
        ],
        "GetFoundationModel": [
            "modelIdentifier"
        ],
        "GetModelCustomizationJob": [
            "jobIdentifier"
        ],
        "GetModelInvocationLoggingConfiguration": "",
        "GetProvisionedModelThroughput": [
            "provisionedModelId"
        ],
        "ListCustomModels": "",
        "ListFoundationModels": "",
        "ListModelCustomizationJobs": "",
        "ListProvisionedModelThroughputs": "",
        "ListTagsForResource": [
            "resourceARN"
        ],
        "PutModelInvocationLoggingConfiguration": [
            "loggingConfig"
        ],
        "StopModelCustomizationJob": [
            "jobIdentifier"
        ],
        "TagResource": [
            "resourceARN",
            "tags"
        ],
        "UntagResource": [
            "resourceARN",
            "tagKeys"
        ],
        "UpdateProvisionedModelThroughput": [
            "provisionedModelId"
        ]
    },
    "bedrock-agent": {
        "AssociateAgentKnowledgeBase": [
            "agentId",
            "agentVersion",
            "description",
            "knowledgeBaseId"
        ],
        "CreateAgent": [
            "agentName",
            "agentResourceRoleArn"
        ],
        "CreateAgentActionGroup": [
            "actionGroupName",
            "agentId",
            "agentVersion"
        ],
        "CreateAgentAlias": [
            "agentAliasName",
            "agentId"
        ],
        "CreateDataSource": [
            "dataSourceConfiguration",
            "knowledgeBaseId",
            "name"
        ],
        "CreateKnowledgeBase": [
            "knowledgeBaseConfiguration",
            "name",
            "roleArn",
            "storageConfiguration"
        ],
        "DeleteAgent": [
            "agentId"
        ],
        "DeleteAgentActionGroup": [
            "actionGroupId",
            "agentId",
            "agentVersion"
        ],
        "DeleteAgentAlias": [
            "agentAliasId",
            "agentId"
        ],
        "DeleteAgentVersion": [
            "agentId",
            "agentVersion"
        ],
        "DeleteDataSource": [
            "dataSourceId",
            "knowledgeBaseId"
        ],
        "DeleteKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "DisassociateAgentKnowledgeBase": [
            "agentId",
            "agentVersion",
            "knowledgeBaseId"
        ],
        "GetAgent": [
            "agentId"
        ],
        "GetAgentActionGroup": [
            "actionGroupId",
            "agentId",
            "agentVersion"
        ],
        "GetAgentAlias": [
            "agentAliasId",
            "agentId"
        ],
        "GetAgentKnowledgeBase": [
            "agentId",
            "agentVersion",
            "knowledgeBaseId"
        ],
        "GetAgentVersion": [
            "agentId",
            "agentVersion"
        ],
        "GetDataSource": [
            "dataSourceId",
            "knowledgeBaseId"
        ],
        "GetIngestionJob": [
            "dataSourceId",
            "ingestionJobId",
            "knowledgeBaseId"
        ],
        "GetKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "ListAgentActionGroups": [
            "agentId",
            "agentVersion"
        ],
        "ListAgentAliases": [
            "agentId"
        ],
        "ListAgentKnowledgeBases": [
            "agentId",
            "agentVersion"
        ],
        "ListAgentVersions": [
            "agentId"
        ],
        "ListAgents": "",
        "ListDataSources": [
            "knowledgeBaseId"
        ],
        "ListIngestionJobs": [
            "dataSourceId",
            "knowledgeBaseId"
        ],
        "ListKnowledgeBases": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PrepareAgent": [
            "agentId"
        ],
        "StartIngestionJob": [
            "dataSourceId",
            "knowledgeBaseId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAgent": [
            "agentId",
            "agentName",
            "agentResourceRoleArn",
            "foundationModel"
        ],
        "UpdateAgentActionGroup": [
            "actionGroupId",
            "actionGroupName",
            "agentId",
            "agentVersion"
        ],
        "UpdateAgentAlias": [
            "agentAliasId",
            "agentAliasName",
            "agentId"
        ],
        "UpdateAgentKnowledgeBase": [
            "agentId",
            "agentVersion",
            "knowledgeBaseId"
        ],
        "UpdateDataSource": [
            "dataSourceConfiguration",
            "dataSourceId",
            "knowledgeBaseId",
            "name"
        ],
        "UpdateKnowledgeBase": [
            "knowledgeBaseConfiguration",
            "knowledgeBaseId",
            "name",
            "roleArn",
            "storageConfiguration"
        ]
    },
    "bedrock-agent-runtime": {
        "InvokeAgent": [
            "agentAliasId",
            "agentId",
            "inputText",
            "sessionId"
        ],
        "Retrieve": [
            "knowledgeBaseId",
            "retrievalQuery"
        ],
        "RetrieveAndGenerate": [
            "input"
        ]
    },
    "bedrock-runtime": {
        "InvokeModel": [
            "body",
            "modelId"
        ],
        "InvokeModelWithResponseStream": [
            "body",
            "modelId"
        ]
    },
    "billingconductor": {
        "AssociateAccounts": [
            "Arn",
            "AccountIds"
        ],
        "AssociatePricingRules": [
            "Arn",
            "PricingRuleArns"
        ],
        "BatchAssociateResourcesToCustomLineItem": [
            "TargetArn",
            "ResourceArns"
        ],
        "BatchDisassociateResourcesFromCustomLineItem": [
            "TargetArn",
            "ResourceArns"
        ],
        "CreateBillingGroup": [
            "Name",
            "AccountGrouping",
            "ComputationPreference"
        ],
        "CreateCustomLineItem": [
            "Name",
            "Description",
            "BillingGroupArn",
            "ChargeDetails"
        ],
        "CreatePricingPlan": [
            "Name"
        ],
        "CreatePricingRule": [
            "Name",
            "Scope",
            "Type"
        ],
        "DeleteBillingGroup": [
            "Arn"
        ],
        "DeleteCustomLineItem": [
            "Arn"
        ],
        "DeletePricingPlan": [
            "Arn"
        ],
        "DeletePricingRule": [
            "Arn"
        ],
        "DisassociateAccounts": [
            "Arn",
            "AccountIds"
        ],
        "DisassociatePricingRules": [
            "Arn",
            "PricingRuleArns"
        ],
        "GetBillingGroupCostReport": [
            "Arn"
        ],
        "ListAccountAssociations": "",
        "ListBillingGroupCostReports": "",
        "ListBillingGroups": "",
        "ListCustomLineItemVersions": [
            "Arn"
        ],
        "ListCustomLineItems": "",
        "ListPricingPlans": "",
        "ListPricingPlansAssociatedWithPricingRule": [
            "PricingRuleArn"
        ],
        "ListPricingRules": "",
        "ListPricingRulesAssociatedToPricingPlan": [
            "PricingPlanArn"
        ],
        "ListResourcesAssociatedToCustomLineItem": [
            "Arn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateBillingGroup": [
            "Arn"
        ],
        "UpdateCustomLineItem": [
            "Arn"
        ],
        "UpdatePricingPlan": [
            "Arn"
        ],
        "UpdatePricingRule": [
            "Arn"
        ]
    },
    "braket": {
        "CancelJob": [
            "jobArn"
        ],
        "CancelQuantumTask": [
            "clientToken",
            "quantumTaskArn"
        ],
        "CreateJob": [
            "algorithmSpecification",
            "clientToken",
            "deviceConfig",
            "instanceConfig",
            "jobName",
            "outputDataConfig",
            "roleArn"
        ],
        "CreateQuantumTask": [
            "action",
            "clientToken",
            "deviceArn",
            "outputS3Bucket",
            "outputS3KeyPrefix",
            "shots"
        ],
        "GetDevice": [
            "deviceArn"
        ],
        "GetJob": [
            "jobArn"
        ],
        "GetQuantumTask": [
            "quantumTaskArn"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "SearchDevices": [
            "filters"
        ],
        "SearchJobs": [
            "filters"
        ],
        "SearchQuantumTasks": [
            "filters"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "budgets": {
        "CreateBudget": [
            "AccountId",
            "Budget"
        ],
        "CreateBudgetAction": [
            "AccountId",
            "BudgetName",
            "NotificationType",
            "ActionType",
            "ActionThreshold",
            "Definition",
            "ExecutionRoleArn",
            "ApprovalModel",
            "Subscribers"
        ],
        "CreateNotification": [
            "AccountId",
            "BudgetName",
            "Notification",
            "Subscribers"
        ],
        "CreateSubscriber": [
            "AccountId",
            "BudgetName",
            "Notification",
            "Subscriber"
        ],
        "DeleteBudget": [
            "AccountId",
            "BudgetName"
        ],
        "DeleteBudgetAction": [
            "AccountId",
            "BudgetName",
            "ActionId"
        ],
        "DeleteNotification": [
            "AccountId",
            "BudgetName",
            "Notification"
        ],
        "DeleteSubscriber": [
            "AccountId",
            "BudgetName",
            "Notification",
            "Subscriber"
        ],
        "DescribeBudget": [
            "AccountId",
            "BudgetName"
        ],
        "DescribeBudgetAction": [
            "AccountId",
            "BudgetName",
            "ActionId"
        ],
        "DescribeBudgetActionHistories": [
            "AccountId",
            "BudgetName",
            "ActionId"
        ],
        "DescribeBudgetActionsForAccount": [
            "AccountId"
        ],
        "DescribeBudgetActionsForBudget": [
            "AccountId",
            "BudgetName"
        ],
        "DescribeBudgetNotificationsForAccount": [
            "AccountId"
        ],
        "DescribeBudgetPerformanceHistory": [
            "AccountId",
            "BudgetName"
        ],
        "DescribeBudgets": [
            "AccountId"
        ],
        "DescribeNotificationsForBudget": [
            "AccountId",
            "BudgetName"
        ],
        "DescribeSubscribersForNotification": [
            "AccountId",
            "BudgetName",
            "Notification"
        ],
        "ExecuteBudgetAction": [
            "AccountId",
            "BudgetName",
            "ActionId",
            "ExecutionType"
        ],
        "UpdateBudget": [
            "AccountId",
            "NewBudget"
        ],
        "UpdateBudgetAction": [
            "AccountId",
            "BudgetName",
            "ActionId"
        ],
        "UpdateNotification": [
            "AccountId",
            "BudgetName",
            "OldNotification",
            "NewNotification"
        ],
        "UpdateSubscriber": [
            "AccountId",
            "BudgetName",
            "Notification",
            "OldSubscriber",
            "NewSubscriber"
        ]
    },
    "ce": {
        "CreateAnomalyMonitor": [
            "AnomalyMonitor"
        ],
        "CreateAnomalySubscription": [
            "AnomalySubscription"
        ],
        "CreateCostCategoryDefinition": [
            "Name",
            "RuleVersion",
            "Rules"
        ],
        "DeleteAnomalyMonitor": [
            "MonitorArn"
        ],
        "DeleteAnomalySubscription": [
            "SubscriptionArn"
        ],
        "DeleteCostCategoryDefinition": [
            "CostCategoryArn"
        ],
        "DescribeCostCategoryDefinition": [
            "CostCategoryArn"
        ],
        "GetAnomalies": [
            "DateInterval"
        ],
        "GetAnomalyMonitors": "",
        "GetAnomalySubscriptions": "",
        "GetApproximateUsageRecords": [
            "Granularity",
            "ApproximationDimension"
        ],
        "GetCostAndUsage": [
            "TimePeriod",
            "Granularity",
            "Metrics"
        ],
        "GetCostAndUsageWithResources": [
            "TimePeriod",
            "Granularity",
            "Filter"
        ],
        "GetCostCategories": [
            "TimePeriod"
        ],
        "GetCostForecast": [
            "TimePeriod",
            "Metric",
            "Granularity"
        ],
        "GetDimensionValues": [
            "TimePeriod",
            "Dimension"
        ],
        "GetReservationCoverage": [
            "TimePeriod"
        ],
        "GetReservationPurchaseRecommendation": [
            "Service"
        ],
        "GetReservationUtilization": [
            "TimePeriod"
        ],
        "GetRightsizingRecommendation": [
            "Service"
        ],
        "GetSavingsPlanPurchaseRecommendationDetails": [
            "RecommendationDetailId"
        ],
        "GetSavingsPlansCoverage": [
            "TimePeriod"
        ],
        "GetSavingsPlansPurchaseRecommendation": [
            "SavingsPlansType",
            "TermInYears",
            "PaymentOption",
            "LookbackPeriodInDays"
        ],
        "GetSavingsPlansUtilization": [
            "TimePeriod"
        ],
        "GetSavingsPlansUtilizationDetails": [
            "TimePeriod"
        ],
        "GetTags": [
            "TimePeriod"
        ],
        "GetUsageForecast": [
            "TimePeriod",
            "Metric",
            "Granularity"
        ],
        "ListCostAllocationTagBackfillHistory": "",
        "ListCostAllocationTags": "",
        "ListCostCategoryDefinitions": "",
        "ListSavingsPlansPurchaseRecommendationGeneration": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ProvideAnomalyFeedback": [
            "AnomalyId",
            "Feedback"
        ],
        "StartCostAllocationTagBackfill": [
            "BackfillFrom"
        ],
        "StartSavingsPlansPurchaseRecommendationGeneration": "",
        "TagResource": [
            "ResourceArn",
            "ResourceTags"
        ],
        "UntagResource": [
            "ResourceArn",
            "ResourceTagKeys"
        ],
        "UpdateAnomalyMonitor": [
            "MonitorArn"
        ],
        "UpdateAnomalySubscription": [
            "SubscriptionArn"
        ],
        "UpdateCostAllocationTagsStatus": [
            "CostAllocationTagsStatus"
        ],
        "UpdateCostCategoryDefinition": [
            "CostCategoryArn",
            "RuleVersion",
            "Rules"
        ]
    },
    "chatbot": {
        "CreateChimeWebhookConfiguration": [
            "WebhookDescription",
            "WebhookUrl",
            "SnsTopicArns",
            "IamRoleArn",
            "ConfigurationName"
        ],
        "CreateMicrosoftTeamsChannelConfiguration": [
            "ChannelId",
            "TeamId",
            "TenantId",
            "IamRoleArn",
            "ConfigurationName"
        ],
        "CreateSlackChannelConfiguration": [
            "SlackTeamId",
            "SlackChannelId",
            "IamRoleArn",
            "ConfigurationName"
        ],
        "DeleteChimeWebhookConfiguration": [
            "ChatConfigurationArn"
        ],
        "DeleteMicrosoftTeamsChannelConfiguration": [
            "ChatConfigurationArn"
        ],
        "DeleteMicrosoftTeamsConfiguredTeam": [
            "TeamId"
        ],
        "DeleteMicrosoftTeamsUserIdentity": [
            "ChatConfigurationArn",
            "UserId"
        ],
        "DeleteSlackChannelConfiguration": [
            "ChatConfigurationArn"
        ],
        "DeleteSlackUserIdentity": [
            "ChatConfigurationArn",
            "SlackTeamId",
            "SlackUserId"
        ],
        "DeleteSlackWorkspaceAuthorization": [
            "SlackTeamId"
        ],
        "DescribeChimeWebhookConfigurations": "",
        "DescribeSlackChannelConfigurations": "",
        "DescribeSlackUserIdentities": "",
        "DescribeSlackWorkspaces": "",
        "GetAccountPreferences": "",
        "GetMicrosoftTeamsChannelConfiguration": [
            "ChatConfigurationArn"
        ],
        "ListMicrosoftTeamsChannelConfigurations": "",
        "ListMicrosoftTeamsConfiguredTeams": "",
        "ListMicrosoftTeamsUserIdentities": "",
        "UpdateAccountPreferences": "",
        "UpdateChimeWebhookConfiguration": [
            "ChatConfigurationArn"
        ],
        "UpdateMicrosoftTeamsChannelConfiguration": [
            "ChatConfigurationArn",
            "ChannelId"
        ],
        "UpdateSlackChannelConfiguration": [
            "ChatConfigurationArn",
            "SlackChannelId"
        ]
    },
    "chime": {
        "AssociatePhoneNumberWithUser": [
            "AccountId",
            "UserId",
            "E164PhoneNumber"
        ],
        "AssociatePhoneNumbersWithVoiceConnector": [
            "VoiceConnectorId",
            "E164PhoneNumbers"
        ],
        "AssociatePhoneNumbersWithVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "E164PhoneNumbers"
        ],
        "AssociateSigninDelegateGroupsWithAccount": [
            "AccountId",
            "SigninDelegateGroups"
        ],
        "BatchCreateAttendee": [
            "MeetingId",
            "Attendees"
        ],
        "BatchCreateChannelMembership": [
            "ChannelArn",
            "MemberArns"
        ],
        "BatchCreateRoomMembership": [
            "AccountId",
            "RoomId",
            "MembershipItemList"
        ],
        "BatchDeletePhoneNumber": [
            "PhoneNumberIds"
        ],
        "BatchSuspendUser": [
            "AccountId",
            "UserIdList"
        ],
        "BatchUnsuspendUser": [
            "AccountId",
            "UserIdList"
        ],
        "BatchUpdatePhoneNumber": [
            "UpdatePhoneNumberRequestItems"
        ],
        "BatchUpdateUser": [
            "AccountId",
            "UpdateUserRequestItems"
        ],
        "CreateAccount": [
            "Name"
        ],
        "CreateAppInstance": [
            "Name",
            "ClientRequestToken"
        ],
        "CreateAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "CreateAppInstanceUser": [
            "AppInstanceArn",
            "AppInstanceUserId",
            "Name",
            "ClientRequestToken"
        ],
        "CreateAttendee": [
            "MeetingId",
            "ExternalUserId"
        ],
        "CreateBot": [
            "DisplayName",
            "AccountId"
        ],
        "CreateChannel": [
            "AppInstanceArn",
            "Name",
            "ClientRequestToken"
        ],
        "CreateChannelBan": [
            "ChannelArn",
            "MemberArn"
        ],
        "CreateChannelMembership": [
            "ChannelArn",
            "MemberArn",
            "Type"
        ],
        "CreateChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn"
        ],
        "CreateMediaCapturePipeline": [
            "SourceType",
            "SourceArn",
            "SinkType",
            "SinkArn"
        ],
        "CreateMeeting": [
            "ClientRequestToken"
        ],
        "CreateMeetingDialOut": [
            "MeetingId",
            "FromPhoneNumber",
            "ToPhoneNumber",
            "JoinToken"
        ],
        "CreateMeetingWithAttendees": [
            "ClientRequestToken"
        ],
        "CreatePhoneNumberOrder": [
            "ProductType",
            "E164PhoneNumbers"
        ],
        "CreateProxySession": [
            "ParticipantPhoneNumbers",
            "Capabilities",
            "VoiceConnectorId"
        ],
        "CreateRoom": [
            "AccountId",
            "Name"
        ],
        "CreateRoomMembership": [
            "AccountId",
            "RoomId",
            "MemberId"
        ],
        "CreateSipMediaApplication": [
            "AwsRegion",
            "Name",
            "Endpoints"
        ],
        "CreateSipMediaApplicationCall": [
            "FromPhoneNumber",
            "ToPhoneNumber",
            "SipMediaApplicationId"
        ],
        "CreateSipRule": [
            "Name",
            "TriggerType",
            "TriggerValue",
            "TargetApplications"
        ],
        "CreateUser": [
            "AccountId"
        ],
        "CreateVoiceConnector": [
            "Name",
            "RequireEncryption"
        ],
        "CreateVoiceConnectorGroup": [
            "Name"
        ],
        "DeleteAccount": [
            "AccountId"
        ],
        "DeleteAppInstance": [
            "AppInstanceArn"
        ],
        "DeleteAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "DeleteAppInstanceStreamingConfigurations": [
            "AppInstanceArn"
        ],
        "DeleteAppInstanceUser": [
            "AppInstanceUserArn"
        ],
        "DeleteAttendee": [
            "MeetingId",
            "AttendeeId"
        ],
        "DeleteChannel": [
            "ChannelArn"
        ],
        "DeleteChannelBan": [
            "ChannelArn",
            "MemberArn"
        ],
        "DeleteChannelMembership": [
            "ChannelArn",
            "MemberArn"
        ],
        "DeleteChannelMessage": [
            "ChannelArn",
            "MessageId"
        ],
        "DeleteChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn"
        ],
        "DeleteEventsConfiguration": [
            "AccountId",
            "BotId"
        ],
        "DeleteMediaCapturePipeline": [
            "MediaPipelineId"
        ],
        "DeleteMeeting": [
            "MeetingId"
        ],
        "DeletePhoneNumber": [
            "PhoneNumberId"
        ],
        "DeleteProxySession": [
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "DeleteRoom": [
            "AccountId",
            "RoomId"
        ],
        "DeleteRoomMembership": [
            "AccountId",
            "RoomId",
            "MemberId"
        ],
        "DeleteSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "DeleteSipRule": [
            "SipRuleId"
        ],
        "DeleteVoiceConnector": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorGroup": [
            "VoiceConnectorGroupId"
        ],
        "DeleteVoiceConnectorOrigination": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorProxy": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorTermination": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorTerminationCredentials": [
            "Usernames",
            "VoiceConnectorId"
        ],
        "DescribeAppInstance": [
            "AppInstanceArn"
        ],
        "DescribeAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "DescribeAppInstanceUser": [
            "AppInstanceUserArn"
        ],
        "DescribeChannel": [
            "ChannelArn"
        ],
        "DescribeChannelBan": [
            "ChannelArn",
            "MemberArn"
        ],
        "DescribeChannelMembership": [
            "ChannelArn",
            "MemberArn"
        ],
        "DescribeChannelMembershipForAppInstanceUser": [
            "ChannelArn",
            "AppInstanceUserArn"
        ],
        "DescribeChannelModeratedByAppInstanceUser": [
            "ChannelArn",
            "AppInstanceUserArn"
        ],
        "DescribeChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn"
        ],
        "DisassociatePhoneNumberFromUser": [
            "AccountId",
            "UserId"
        ],
        "DisassociatePhoneNumbersFromVoiceConnector": [
            "VoiceConnectorId",
            "E164PhoneNumbers"
        ],
        "DisassociatePhoneNumbersFromVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "E164PhoneNumbers"
        ],
        "DisassociateSigninDelegateGroupsFromAccount": [
            "AccountId",
            "GroupNames"
        ],
        "GetAccount": [
            "AccountId"
        ],
        "GetAccountSettings": [
            "AccountId"
        ],
        "GetAppInstanceRetentionSettings": [
            "AppInstanceArn"
        ],
        "GetAppInstanceStreamingConfigurations": [
            "AppInstanceArn"
        ],
        "GetAttendee": [
            "MeetingId",
            "AttendeeId"
        ],
        "GetBot": [
            "AccountId",
            "BotId"
        ],
        "GetChannelMessage": [
            "ChannelArn",
            "MessageId"
        ],
        "GetEventsConfiguration": [
            "AccountId",
            "BotId"
        ],
        "GetGlobalSettings": "",
        "GetMediaCapturePipeline": [
            "MediaPipelineId"
        ],
        "GetMeeting": [
            "MeetingId"
        ],
        "GetMessagingSessionEndpoint": "",
        "GetPhoneNumber": [
            "PhoneNumberId"
        ],
        "GetPhoneNumberOrder": [
            "PhoneNumberOrderId"
        ],
        "GetPhoneNumberSettings": "",
        "GetProxySession": [
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "GetRetentionSettings": [
            "AccountId"
        ],
        "GetRoom": [
            "AccountId",
            "RoomId"
        ],
        "GetSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "GetSipMediaApplicationLoggingConfiguration": [
            "SipMediaApplicationId"
        ],
        "GetSipRule": [
            "SipRuleId"
        ],
        "GetUser": [
            "AccountId",
            "UserId"
        ],
        "GetUserSettings": [
            "AccountId",
            "UserId"
        ],
        "GetVoiceConnector": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorGroup": [
            "VoiceConnectorGroupId"
        ],
        "GetVoiceConnectorLoggingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorOrigination": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorProxy": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorTermination": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorTerminationHealth": [
            "VoiceConnectorId"
        ],
        "InviteUsers": [
            "AccountId",
            "UserEmailList"
        ],
        "ListAccounts": "",
        "ListAppInstanceAdmins": [
            "AppInstanceArn"
        ],
        "ListAppInstanceUsers": [
            "AppInstanceArn"
        ],
        "ListAppInstances": "",
        "ListAttendeeTags": [
            "MeetingId",
            "AttendeeId"
        ],
        "ListAttendees": [
            "MeetingId"
        ],
        "ListBots": [
            "AccountId"
        ],
        "ListChannelBans": [
            "ChannelArn"
        ],
        "ListChannelMemberships": [
            "ChannelArn"
        ],
        "ListChannelMembershipsForAppInstanceUser": "",
        "ListChannelMessages": [
            "ChannelArn"
        ],
        "ListChannelModerators": [
            "ChannelArn"
        ],
        "ListChannels": [
            "AppInstanceArn"
        ],
        "ListChannelsModeratedByAppInstanceUser": "",
        "ListMediaCapturePipelines": "",
        "ListMeetingTags": [
            "MeetingId"
        ],
        "ListMeetings": "",
        "ListPhoneNumberOrders": "",
        "ListPhoneNumbers": "",
        "ListProxySessions": [
            "VoiceConnectorId"
        ],
        "ListRoomMemberships": [
            "AccountId",
            "RoomId"
        ],
        "ListRooms": [
            "AccountId"
        ],
        "ListSipMediaApplications": "",
        "ListSipRules": "",
        "ListSupportedPhoneNumberCountries": [
            "ProductType"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListUsers": [
            "AccountId"
        ],
        "ListVoiceConnectorGroups": "",
        "ListVoiceConnectorTerminationCredentials": [
            "VoiceConnectorId"
        ],
        "ListVoiceConnectors": "",
        "LogoutUser": [
            "AccountId",
            "UserId"
        ],
        "PutAppInstanceRetentionSettings": [
            "AppInstanceArn",
            "AppInstanceRetentionSettings"
        ],
        "PutAppInstanceStreamingConfigurations": [
            "AppInstanceArn",
            "AppInstanceStreamingConfigurations"
        ],
        "PutEventsConfiguration": [
            "AccountId",
            "BotId"
        ],
        "PutRetentionSettings": [
            "AccountId",
            "RetentionSettings"
        ],
        "PutSipMediaApplicationLoggingConfiguration": [
            "SipMediaApplicationId"
        ],
        "PutVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId",
            "EmergencyCallingConfiguration"
        ],
        "PutVoiceConnectorLoggingConfiguration": [
            "VoiceConnectorId",
            "LoggingConfiguration"
        ],
        "PutVoiceConnectorOrigination": [
            "VoiceConnectorId",
            "Origination"
        ],
        "PutVoiceConnectorProxy": [
            "DefaultSessionExpiryMinutes",
            "PhoneNumberPoolCountries",
            "VoiceConnectorId"
        ],
        "PutVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId",
            "StreamingConfiguration"
        ],
        "PutVoiceConnectorTermination": [
            "VoiceConnectorId",
            "Termination"
        ],
        "PutVoiceConnectorTerminationCredentials": [
            "VoiceConnectorId"
        ],
        "RedactChannelMessage": [
            "ChannelArn",
            "MessageId"
        ],
        "RedactConversationMessage": [
            "AccountId",
            "ConversationId",
            "MessageId"
        ],
        "RedactRoomMessage": [
            "AccountId",
            "RoomId",
            "MessageId"
        ],
        "RegenerateSecurityToken": [
            "AccountId",
            "BotId"
        ],
        "ResetPersonalPIN": [
            "AccountId",
            "UserId"
        ],
        "RestorePhoneNumber": [
            "PhoneNumberId"
        ],
        "SearchAvailablePhoneNumbers": "",
        "SendChannelMessage": [
            "ChannelArn",
            "Content",
            "Type",
            "Persistence",
            "ClientRequestToken"
        ],
        "StartMeetingTranscription": [
            "MeetingId",
            "TranscriptionConfiguration"
        ],
        "StopMeetingTranscription": [
            "MeetingId"
        ],
        "TagAttendee": [
            "MeetingId",
            "AttendeeId",
            "Tags"
        ],
        "TagMeeting": [
            "MeetingId",
            "Tags"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagAttendee": [
            "MeetingId",
            "TagKeys",
            "AttendeeId"
        ],
        "UntagMeeting": [
            "MeetingId",
            "TagKeys"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAccount": [
            "AccountId"
        ],
        "UpdateAccountSettings": [
            "AccountId",
            "AccountSettings"
        ],
        "UpdateAppInstance": [
            "AppInstanceArn",
            "Name"
        ],
        "UpdateAppInstanceUser": [
            "AppInstanceUserArn",
            "Name"
        ],
        "UpdateBot": [
            "AccountId",
            "BotId"
        ],
        "UpdateChannel": [
            "ChannelArn",
            "Name",
            "Mode"
        ],
        "UpdateChannelMessage": [
            "ChannelArn",
            "MessageId"
        ],
        "UpdateChannelReadMarker": [
            "ChannelArn"
        ],
        "UpdateGlobalSettings": "",
        "UpdatePhoneNumber": [
            "PhoneNumberId"
        ],
        "UpdatePhoneNumberSettings": [
            "CallingName"
        ],
        "UpdateProxySession": [
            "Capabilities",
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "UpdateRoom": [
            "AccountId",
            "RoomId"
        ],
        "UpdateRoomMembership": [
            "AccountId",
            "RoomId",
            "MemberId"
        ],
        "UpdateSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "UpdateSipMediaApplicationCall": [
            "SipMediaApplicationId",
            "TransactionId",
            "Arguments"
        ],
        "UpdateSipRule": [
            "SipRuleId",
            "Name"
        ],
        "UpdateUser": [
            "AccountId",
            "UserId"
        ],
        "UpdateUserSettings": [
            "AccountId",
            "UserId",
            "UserSettings"
        ],
        "UpdateVoiceConnector": [
            "VoiceConnectorId",
            "Name",
            "RequireEncryption"
        ],
        "UpdateVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "Name",
            "VoiceConnectorItems"
        ],
        "ValidateE911Address": [
            "AwsAccountId",
            "StreetNumber",
            "StreetInfo",
            "City",
            "State",
            "Country",
            "PostalCode"
        ]
    },
    "chime-sdk-identity": {
        "CreateAppInstance": [
            "Name",
            "ClientRequestToken"
        ],
        "CreateAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "CreateAppInstanceBot": [
            "AppInstanceArn",
            "ClientRequestToken",
            "Configuration"
        ],
        "CreateAppInstanceUser": [
            "AppInstanceArn",
            "AppInstanceUserId",
            "Name",
            "ClientRequestToken"
        ],
        "DeleteAppInstance": [
            "AppInstanceArn"
        ],
        "DeleteAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "DeleteAppInstanceBot": [
            "AppInstanceBotArn"
        ],
        "DeleteAppInstanceUser": [
            "AppInstanceUserArn"
        ],
        "DeregisterAppInstanceUserEndpoint": [
            "AppInstanceUserArn",
            "EndpointId"
        ],
        "DescribeAppInstance": [
            "AppInstanceArn"
        ],
        "DescribeAppInstanceAdmin": [
            "AppInstanceAdminArn",
            "AppInstanceArn"
        ],
        "DescribeAppInstanceBot": [
            "AppInstanceBotArn"
        ],
        "DescribeAppInstanceUser": [
            "AppInstanceUserArn"
        ],
        "DescribeAppInstanceUserEndpoint": [
            "AppInstanceUserArn",
            "EndpointId"
        ],
        "GetAppInstanceRetentionSettings": [
            "AppInstanceArn"
        ],
        "ListAppInstanceAdmins": [
            "AppInstanceArn"
        ],
        "ListAppInstanceBots": [
            "AppInstanceArn"
        ],
        "ListAppInstanceUserEndpoints": [
            "AppInstanceUserArn"
        ],
        "ListAppInstanceUsers": [
            "AppInstanceArn"
        ],
        "ListAppInstances": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutAppInstanceRetentionSettings": [
            "AppInstanceArn",
            "AppInstanceRetentionSettings"
        ],
        "PutAppInstanceUserExpirationSettings": [
            "AppInstanceUserArn"
        ],
        "RegisterAppInstanceUserEndpoint": [
            "AppInstanceUserArn",
            "Type",
            "ResourceArn",
            "EndpointAttributes",
            "ClientRequestToken"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAppInstance": [
            "AppInstanceArn",
            "Name",
            "Metadata"
        ],
        "UpdateAppInstanceBot": [
            "AppInstanceBotArn",
            "Name",
            "Metadata"
        ],
        "UpdateAppInstanceUser": [
            "AppInstanceUserArn",
            "Name",
            "Metadata"
        ],
        "UpdateAppInstanceUserEndpoint": [
            "AppInstanceUserArn",
            "EndpointId"
        ]
    },
    "chime-sdk-media-pipelines": {
        "CreateMediaCapturePipeline": [
            "SourceType",
            "SourceArn",
            "SinkType",
            "SinkArn"
        ],
        "CreateMediaConcatenationPipeline": [
            "Sources",
            "Sinks"
        ],
        "CreateMediaInsightsPipeline": [
            "MediaInsightsPipelineConfigurationArn"
        ],
        "CreateMediaInsightsPipelineConfiguration": [
            "MediaInsightsPipelineConfigurationName",
            "ResourceAccessRoleArn",
            "Elements"
        ],
        "CreateMediaLiveConnectorPipeline": [
            "Sources",
            "Sinks"
        ],
        "CreateMediaPipelineKinesisVideoStreamPool": [
            "StreamConfiguration",
            "PoolName"
        ],
        "CreateMediaStreamPipeline": [
            "Sources",
            "Sinks"
        ],
        "DeleteMediaCapturePipeline": [
            "MediaPipelineId"
        ],
        "DeleteMediaInsightsPipelineConfiguration": [
            "Identifier"
        ],
        "DeleteMediaPipeline": [
            "MediaPipelineId"
        ],
        "DeleteMediaPipelineKinesisVideoStreamPool": [
            "Identifier"
        ],
        "GetMediaCapturePipeline": [
            "MediaPipelineId"
        ],
        "GetMediaInsightsPipelineConfiguration": [
            "Identifier"
        ],
        "GetMediaPipeline": [
            "MediaPipelineId"
        ],
        "GetMediaPipelineKinesisVideoStreamPool": [
            "Identifier"
        ],
        "GetSpeakerSearchTask": [
            "Identifier",
            "SpeakerSearchTaskId"
        ],
        "GetVoiceToneAnalysisTask": [
            "Identifier",
            "VoiceToneAnalysisTaskId"
        ],
        "ListMediaCapturePipelines": "",
        "ListMediaInsightsPipelineConfigurations": "",
        "ListMediaPipelineKinesisVideoStreamPools": "",
        "ListMediaPipelines": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "StartSpeakerSearchTask": [
            "Identifier",
            "VoiceProfileDomainArn"
        ],
        "StartVoiceToneAnalysisTask": [
            "Identifier",
            "LanguageCode"
        ],
        "StopSpeakerSearchTask": [
            "Identifier",
            "SpeakerSearchTaskId"
        ],
        "StopVoiceToneAnalysisTask": [
            "Identifier",
            "VoiceToneAnalysisTaskId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateMediaInsightsPipelineConfiguration": [
            "Identifier",
            "ResourceAccessRoleArn",
            "Elements"
        ],
        "UpdateMediaInsightsPipelineStatus": [
            "Identifier",
            "UpdateStatus"
        ],
        "UpdateMediaPipelineKinesisVideoStreamPool": [
            "Identifier"
        ]
    },
    "chime-sdk-meetings": {
        "BatchCreateAttendee": [
            "MeetingId",
            "Attendees"
        ],
        "BatchUpdateAttendeeCapabilitiesExcept": [
            "MeetingId",
            "ExcludedAttendeeIds",
            "Capabilities"
        ],
        "CreateAttendee": [
            "MeetingId",
            "ExternalUserId"
        ],
        "CreateMeeting": [
            "ClientRequestToken",
            "MediaRegion",
            "ExternalMeetingId"
        ],
        "CreateMeetingWithAttendees": [
            "ClientRequestToken",
            "MediaRegion",
            "ExternalMeetingId",
            "Attendees"
        ],
        "DeleteAttendee": [
            "MeetingId",
            "AttendeeId"
        ],
        "DeleteMeeting": [
            "MeetingId"
        ],
        "GetAttendee": [
            "MeetingId",
            "AttendeeId"
        ],
        "GetMeeting": [
            "MeetingId"
        ],
        "ListAttendees": [
            "MeetingId"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "StartMeetingTranscription": [
            "MeetingId",
            "TranscriptionConfiguration"
        ],
        "StopMeetingTranscription": [
            "MeetingId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAttendeeCapabilities": [
            "MeetingId",
            "AttendeeId",
            "Capabilities"
        ]
    },
    "chime-sdk-messaging": {
        "AssociateChannelFlow": [
            "ChannelArn",
            "ChannelFlowArn",
            "ChimeBearer"
        ],
        "BatchCreateChannelMembership": [
            "ChannelArn",
            "MemberArns",
            "ChimeBearer"
        ],
        "ChannelFlowCallback": [
            "CallbackId",
            "ChannelArn",
            "ChannelMessage"
        ],
        "CreateChannel": [
            "AppInstanceArn",
            "Name",
            "ClientRequestToken",
            "ChimeBearer"
        ],
        "CreateChannelBan": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "CreateChannelFlow": [
            "AppInstanceArn",
            "Processors",
            "Name",
            "ClientRequestToken"
        ],
        "CreateChannelMembership": [
            "ChannelArn",
            "MemberArn",
            "Type",
            "ChimeBearer"
        ],
        "CreateChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn",
            "ChimeBearer"
        ],
        "DeleteChannel": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "DeleteChannelBan": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "DeleteChannelFlow": [
            "ChannelFlowArn"
        ],
        "DeleteChannelMembership": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "DeleteChannelMessage": [
            "ChannelArn",
            "MessageId",
            "ChimeBearer"
        ],
        "DeleteChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn",
            "ChimeBearer"
        ],
        "DeleteMessagingStreamingConfigurations": [
            "AppInstanceArn"
        ],
        "DescribeChannel": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "DescribeChannelBan": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "DescribeChannelFlow": [
            "ChannelFlowArn"
        ],
        "DescribeChannelMembership": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "DescribeChannelMembershipForAppInstanceUser": [
            "ChannelArn",
            "AppInstanceUserArn",
            "ChimeBearer"
        ],
        "DescribeChannelModeratedByAppInstanceUser": [
            "ChannelArn",
            "AppInstanceUserArn",
            "ChimeBearer"
        ],
        "DescribeChannelModerator": [
            "ChannelArn",
            "ChannelModeratorArn",
            "ChimeBearer"
        ],
        "DisassociateChannelFlow": [
            "ChannelArn",
            "ChannelFlowArn",
            "ChimeBearer"
        ],
        "GetChannelMembershipPreferences": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer"
        ],
        "GetChannelMessage": [
            "ChannelArn",
            "MessageId",
            "ChimeBearer"
        ],
        "GetChannelMessageStatus": [
            "ChannelArn",
            "MessageId",
            "ChimeBearer"
        ],
        "GetMessagingSessionEndpoint": "",
        "GetMessagingStreamingConfigurations": [
            "AppInstanceArn"
        ],
        "ListChannelBans": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "ListChannelFlows": [
            "AppInstanceArn"
        ],
        "ListChannelMemberships": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "ListChannelMembershipsForAppInstanceUser": [
            "ChimeBearer"
        ],
        "ListChannelMessages": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "ListChannelModerators": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "ListChannels": [
            "AppInstanceArn",
            "ChimeBearer"
        ],
        "ListChannelsAssociatedWithChannelFlow": [
            "ChannelFlowArn"
        ],
        "ListChannelsModeratedByAppInstanceUser": [
            "ChimeBearer"
        ],
        "ListSubChannels": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutChannelExpirationSettings": [
            "ChannelArn"
        ],
        "PutChannelMembershipPreferences": [
            "ChannelArn",
            "MemberArn",
            "ChimeBearer",
            "Preferences"
        ],
        "PutMessagingStreamingConfigurations": [
            "AppInstanceArn",
            "StreamingConfigurations"
        ],
        "RedactChannelMessage": [
            "ChannelArn",
            "MessageId",
            "ChimeBearer"
        ],
        "SearchChannels": [
            "Fields"
        ],
        "SendChannelMessage": [
            "ChannelArn",
            "Content",
            "Type",
            "Persistence",
            "ClientRequestToken",
            "ChimeBearer"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateChannel": [
            "ChannelArn",
            "ChimeBearer"
        ],
        "UpdateChannelFlow": [
            "ChannelFlowArn",
            "Processors",
            "Name"
        ],
        "UpdateChannelMessage": [
            "ChannelArn",
            "MessageId",
            "Content",
            "ChimeBearer"
        ],
        "UpdateChannelReadMarker": [
            "ChannelArn",
            "ChimeBearer"
        ]
    },
    "chime-sdk-voice": {
        "AssociatePhoneNumbersWithVoiceConnector": [
            "VoiceConnectorId",
            "E164PhoneNumbers"
        ],
        "AssociatePhoneNumbersWithVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "E164PhoneNumbers"
        ],
        "BatchDeletePhoneNumber": [
            "PhoneNumberIds"
        ],
        "BatchUpdatePhoneNumber": [
            "UpdatePhoneNumberRequestItems"
        ],
        "CreatePhoneNumberOrder": [
            "ProductType",
            "E164PhoneNumbers"
        ],
        "CreateProxySession": [
            "ParticipantPhoneNumbers",
            "Capabilities",
            "VoiceConnectorId"
        ],
        "CreateSipMediaApplication": [
            "AwsRegion",
            "Name",
            "Endpoints"
        ],
        "CreateSipMediaApplicationCall": [
            "FromPhoneNumber",
            "ToPhoneNumber",
            "SipMediaApplicationId"
        ],
        "CreateSipRule": [
            "Name",
            "TriggerType",
            "TriggerValue"
        ],
        "CreateVoiceConnector": [
            "Name",
            "RequireEncryption"
        ],
        "CreateVoiceConnectorGroup": [
            "Name"
        ],
        "CreateVoiceProfile": [
            "SpeakerSearchTaskId"
        ],
        "CreateVoiceProfileDomain": [
            "Name",
            "ServerSideEncryptionConfiguration"
        ],
        "DeletePhoneNumber": [
            "PhoneNumberId"
        ],
        "DeleteProxySession": [
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "DeleteSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "DeleteSipRule": [
            "SipRuleId"
        ],
        "DeleteVoiceConnector": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorGroup": [
            "VoiceConnectorGroupId"
        ],
        "DeleteVoiceConnectorOrigination": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorProxy": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorTermination": [
            "VoiceConnectorId"
        ],
        "DeleteVoiceConnectorTerminationCredentials": [
            "Usernames",
            "VoiceConnectorId"
        ],
        "DeleteVoiceProfile": [
            "VoiceProfileId"
        ],
        "DeleteVoiceProfileDomain": [
            "VoiceProfileDomainId"
        ],
        "DisassociatePhoneNumbersFromVoiceConnector": [
            "VoiceConnectorId",
            "E164PhoneNumbers"
        ],
        "DisassociatePhoneNumbersFromVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "E164PhoneNumbers"
        ],
        "GetGlobalSettings": "",
        "GetPhoneNumber": [
            "PhoneNumberId"
        ],
        "GetPhoneNumberOrder": [
            "PhoneNumberOrderId"
        ],
        "GetPhoneNumberSettings": "",
        "GetProxySession": [
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "GetSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "GetSipMediaApplicationAlexaSkillConfiguration": [
            "SipMediaApplicationId"
        ],
        "GetSipMediaApplicationLoggingConfiguration": [
            "SipMediaApplicationId"
        ],
        "GetSipRule": [
            "SipRuleId"
        ],
        "GetSpeakerSearchTask": [
            "VoiceConnectorId",
            "SpeakerSearchTaskId"
        ],
        "GetVoiceConnector": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorGroup": [
            "VoiceConnectorGroupId"
        ],
        "GetVoiceConnectorLoggingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorOrigination": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorProxy": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorTermination": [
            "VoiceConnectorId"
        ],
        "GetVoiceConnectorTerminationHealth": [
            "VoiceConnectorId"
        ],
        "GetVoiceProfile": [
            "VoiceProfileId"
        ],
        "GetVoiceProfileDomain": [
            "VoiceProfileDomainId"
        ],
        "GetVoiceToneAnalysisTask": [
            "VoiceConnectorId",
            "VoiceToneAnalysisTaskId",
            "IsCaller"
        ],
        "ListAvailableVoiceConnectorRegions": "",
        "ListPhoneNumberOrders": "",
        "ListPhoneNumbers": "",
        "ListProxySessions": [
            "VoiceConnectorId"
        ],
        "ListSipMediaApplications": "",
        "ListSipRules": "",
        "ListSupportedPhoneNumberCountries": [
            "ProductType"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListVoiceConnectorGroups": "",
        "ListVoiceConnectorTerminationCredentials": [
            "VoiceConnectorId"
        ],
        "ListVoiceConnectors": "",
        "ListVoiceProfileDomains": "",
        "ListVoiceProfiles": [
            "VoiceProfileDomainId"
        ],
        "PutSipMediaApplicationAlexaSkillConfiguration": [
            "SipMediaApplicationId"
        ],
        "PutSipMediaApplicationLoggingConfiguration": [
            "SipMediaApplicationId"
        ],
        "PutVoiceConnectorEmergencyCallingConfiguration": [
            "VoiceConnectorId",
            "EmergencyCallingConfiguration"
        ],
        "PutVoiceConnectorLoggingConfiguration": [
            "VoiceConnectorId",
            "LoggingConfiguration"
        ],
        "PutVoiceConnectorOrigination": [
            "VoiceConnectorId",
            "Origination"
        ],
        "PutVoiceConnectorProxy": [
            "DefaultSessionExpiryMinutes",
            "PhoneNumberPoolCountries",
            "VoiceConnectorId"
        ],
        "PutVoiceConnectorStreamingConfiguration": [
            "VoiceConnectorId",
            "StreamingConfiguration"
        ],
        "PutVoiceConnectorTermination": [
            "VoiceConnectorId",
            "Termination"
        ],
        "PutVoiceConnectorTerminationCredentials": [
            "VoiceConnectorId"
        ],
        "RestorePhoneNumber": [
            "PhoneNumberId"
        ],
        "SearchAvailablePhoneNumbers": "",
        "StartSpeakerSearchTask": [
            "VoiceConnectorId",
            "TransactionId",
            "VoiceProfileDomainId"
        ],
        "StartVoiceToneAnalysisTask": [
            "VoiceConnectorId",
            "TransactionId",
            "LanguageCode"
        ],
        "StopSpeakerSearchTask": [
            "VoiceConnectorId",
            "SpeakerSearchTaskId"
        ],
        "StopVoiceToneAnalysisTask": [
            "VoiceConnectorId",
            "VoiceToneAnalysisTaskId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateGlobalSettings": "",
        "UpdatePhoneNumber": [
            "PhoneNumberId"
        ],
        "UpdatePhoneNumberSettings": [
            "CallingName"
        ],
        "UpdateProxySession": [
            "Capabilities",
            "VoiceConnectorId",
            "ProxySessionId"
        ],
        "UpdateSipMediaApplication": [
            "SipMediaApplicationId"
        ],
        "UpdateSipMediaApplicationCall": [
            "SipMediaApplicationId",
            "TransactionId",
            "Arguments"
        ],
        "UpdateSipRule": [
            "SipRuleId",
            "Name"
        ],
        "UpdateVoiceConnector": [
            "VoiceConnectorId",
            "Name",
            "RequireEncryption"
        ],
        "UpdateVoiceConnectorGroup": [
            "VoiceConnectorGroupId",
            "Name",
            "VoiceConnectorItems"
        ],
        "UpdateVoiceProfile": [
            "VoiceProfileId",
            "SpeakerSearchTaskId"
        ],
        "UpdateVoiceProfileDomain": [
            "VoiceProfileDomainId"
        ],
        "ValidateE911Address": [
            "AwsAccountId",
            "StreetNumber",
            "StreetInfo",
            "City",
            "State",
            "Country",
            "PostalCode"
        ]
    },
    "cleanrooms": {
        "BatchGetCollaborationAnalysisTemplate": [
            "collaborationIdentifier",
            "analysisTemplateArns"
        ],
        "BatchGetSchema": [
            "collaborationIdentifier",
            "names"
        ],
        "CreateAnalysisTemplate": [
            "membershipIdentifier",
            "name",
            "format",
            "source"
        ],
        "CreateCollaboration": [
            "members",
            "name",
            "description",
            "creatorMemberAbilities",
            "creatorDisplayName",
            "queryLogStatus"
        ],
        "CreateConfiguredAudienceModelAssociation": [
            "membershipIdentifier",
            "configuredAudienceModelArn",
            "configuredAudienceModelAssociationName",
            "manageResourcePolicies"
        ],
        "CreateConfiguredTable": [
            "name",
            "tableReference",
            "allowedColumns",
            "analysisMethod"
        ],
        "CreateConfiguredTableAnalysisRule": [
            "configuredTableIdentifier",
            "analysisRuleType",
            "analysisRulePolicy"
        ],
        "CreateConfiguredTableAssociation": [
            "name",
            "membershipIdentifier",
            "configuredTableIdentifier",
            "roleArn"
        ],
        "CreateMembership": [
            "collaborationIdentifier",
            "queryLogStatus"
        ],
        "CreatePrivacyBudgetTemplate": [
            "membershipIdentifier",
            "autoRefresh",
            "privacyBudgetType",
            "parameters"
        ],
        "DeleteAnalysisTemplate": [
            "membershipIdentifier",
            "analysisTemplateIdentifier"
        ],
        "DeleteCollaboration": [
            "collaborationIdentifier"
        ],
        "DeleteConfiguredAudienceModelAssociation": [
            "configuredAudienceModelAssociationIdentifier",
            "membershipIdentifier"
        ],
        "DeleteConfiguredTable": [
            "configuredTableIdentifier"
        ],
        "DeleteConfiguredTableAnalysisRule": [
            "configuredTableIdentifier",
            "analysisRuleType"
        ],
        "DeleteConfiguredTableAssociation": [
            "configuredTableAssociationIdentifier",
            "membershipIdentifier"
        ],
        "DeleteMember": [
            "collaborationIdentifier",
            "accountId"
        ],
        "DeleteMembership": [
            "membershipIdentifier"
        ],
        "DeletePrivacyBudgetTemplate": [
            "membershipIdentifier",
            "privacyBudgetTemplateIdentifier"
        ],
        "GetAnalysisTemplate": [
            "membershipIdentifier",
            "analysisTemplateIdentifier"
        ],
        "GetCollaboration": [
            "collaborationIdentifier"
        ],
        "GetCollaborationAnalysisTemplate": [
            "collaborationIdentifier",
            "analysisTemplateArn"
        ],
        "GetCollaborationConfiguredAudienceModelAssociation": [
            "collaborationIdentifier",
            "configuredAudienceModelAssociationIdentifier"
        ],
        "GetCollaborationPrivacyBudgetTemplate": [
            "collaborationIdentifier",
            "privacyBudgetTemplateIdentifier"
        ],
        "GetConfiguredAudienceModelAssociation": [
            "configuredAudienceModelAssociationIdentifier",
            "membershipIdentifier"
        ],
        "GetConfiguredTable": [
            "configuredTableIdentifier"
        ],
        "GetConfiguredTableAnalysisRule": [
            "configuredTableIdentifier",
            "analysisRuleType"
        ],
        "GetConfiguredTableAssociation": [
            "configuredTableAssociationIdentifier",
            "membershipIdentifier"
        ],
        "GetMembership": [
            "membershipIdentifier"
        ],
        "GetPrivacyBudgetTemplate": [
            "membershipIdentifier",
            "privacyBudgetTemplateIdentifier"
        ],
        "GetProtectedQuery": [
            "membershipIdentifier",
            "protectedQueryIdentifier"
        ],
        "GetSchema": [
            "collaborationIdentifier",
            "name"
        ],
        "GetSchemaAnalysisRule": [
            "collaborationIdentifier",
            "name",
            "type"
        ],
        "ListAnalysisTemplates": [
            "membershipIdentifier"
        ],
        "ListCollaborationAnalysisTemplates": [
            "collaborationIdentifier"
        ],
        "ListCollaborationConfiguredAudienceModelAssociations": [
            "collaborationIdentifier"
        ],
        "ListCollaborationPrivacyBudgetTemplates": [
            "collaborationIdentifier"
        ],
        "ListCollaborationPrivacyBudgets": [
            "collaborationIdentifier",
            "privacyBudgetType"
        ],
        "ListCollaborations": "",
        "ListConfiguredAudienceModelAssociations": [
            "membershipIdentifier"
        ],
        "ListConfiguredTableAssociations": [
            "membershipIdentifier"
        ],
        "ListConfiguredTables": "",
        "ListMembers": [
            "collaborationIdentifier"
        ],
        "ListMemberships": "",
        "ListPrivacyBudgetTemplates": [
            "membershipIdentifier"
        ],
        "ListPrivacyBudgets": [
            "membershipIdentifier",
            "privacyBudgetType"
        ],
        "ListProtectedQueries": [
            "membershipIdentifier"
        ],
        "ListSchemas": [
            "collaborationIdentifier"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PreviewPrivacyImpact": [
            "membershipIdentifier",
            "parameters"
        ],
        "StartProtectedQuery": [
            "type",
            "membershipIdentifier",
            "sqlParameters"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAnalysisTemplate": [
            "membershipIdentifier",
            "analysisTemplateIdentifier"
        ],
        "UpdateCollaboration": [
            "collaborationIdentifier"
        ],
        "UpdateConfiguredAudienceModelAssociation": [
            "configuredAudienceModelAssociationIdentifier",
            "membershipIdentifier"
        ],
        "UpdateConfiguredTable": [
            "configuredTableIdentifier"
        ],
        "UpdateConfiguredTableAnalysisRule": [
            "configuredTableIdentifier",
            "analysisRuleType",
            "analysisRulePolicy"
        ],
        "UpdateConfiguredTableAssociation": [
            "configuredTableAssociationIdentifier",
            "membershipIdentifier"
        ],
        "UpdateMembership": [
            "membershipIdentifier"
        ],
        "UpdatePrivacyBudgetTemplate": [
            "membershipIdentifier",
            "privacyBudgetTemplateIdentifier",
            "privacyBudgetType"
        ],
        "UpdateProtectedQuery": [
            "membershipIdentifier",
            "protectedQueryIdentifier",
            "targetStatus"
        ]
    },
    "cleanroomsml": {
        "CreateAudienceModel": [
            "name",
            "trainingDatasetArn"
        ],
        "CreateConfiguredAudienceModel": [
            "audienceModelArn",
            "name",
            "outputConfig",
            "sharedAudienceMetrics"
        ],
        "CreateTrainingDataset": [
            "name",
            "roleArn",
            "trainingData"
        ],
        "DeleteAudienceGenerationJob": [
            "audienceGenerationJobArn"
        ],
        "DeleteAudienceModel": [
            "audienceModelArn"
        ],
        "DeleteConfiguredAudienceModel": [
            "configuredAudienceModelArn"
        ],
        "DeleteConfiguredAudienceModelPolicy": [
            "configuredAudienceModelArn"
        ],
        "DeleteTrainingDataset": [
            "trainingDatasetArn"
        ],
        "GetAudienceGenerationJob": [
            "audienceGenerationJobArn"
        ],
        "GetAudienceModel": [
            "audienceModelArn"
        ],
        "GetConfiguredAudienceModel": [
            "configuredAudienceModelArn"
        ],
        "GetConfiguredAudienceModelPolicy": [
            "configuredAudienceModelArn"
        ],
        "GetTrainingDataset": [
            "trainingDatasetArn"
        ],
        "ListAudienceExportJobs": "",
        "ListAudienceGenerationJobs": "",
        "ListAudienceModels": "",
        "ListConfiguredAudienceModels": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTrainingDatasets": "",
        "PutConfiguredAudienceModelPolicy": [
            "configuredAudienceModelArn",
            "configuredAudienceModelPolicy"
        ],
        "StartAudienceExportJob": [
            "audienceGenerationJobArn",
            "audienceSize",
            "name"
        ],
        "StartAudienceGenerationJob": [
            "configuredAudienceModelArn",
            "name",
            "seedAudience"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateConfiguredAudienceModel": [
            "configuredAudienceModelArn"
        ]
    },
    "cloud9": {
        "CreateEnvironmentEC2": [
            "name",
            "instanceType",
            "imageId"
        ],
        "CreateEnvironmentMembership": [
            "environmentId",
            "userArn",
            "permissions"
        ],
        "DeleteEnvironment": [
            "environmentId"
        ],
        "DeleteEnvironmentMembership": [
            "environmentId",
            "userArn"
        ],
        "DescribeEnvironmentMemberships": "",
        "DescribeEnvironmentStatus": [
            "environmentId"
        ],
        "DescribeEnvironments": [
            "environmentIds"
        ],
        "ListEnvironments": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateEnvironment": [
            "environmentId"
        ],
        "UpdateEnvironmentMembership": [
            "environmentId",
            "userArn",
            "permissions"
        ]
    },
    "cloudcontrol": {
        "CancelResourceRequest": [
            "RequestToken"
        ],
        "CreateResource": [
            "TypeName",
            "DesiredState"
        ],
        "DeleteResource": [
            "TypeName",
            "Identifier"
        ],
        "GetResource": [
            "TypeName",
            "Identifier"
        ],
        "GetResourceRequestStatus": [
            "RequestToken"
        ],
        "ListResourceRequests": "",
        "ListResources": [
            "TypeName"
        ],
        "UpdateResource": [
            "TypeName",
            "Identifier",
            "PatchDocument"
        ]
    },
    "clouddirectory": {
        "AddFacetToObject": [
            "DirectoryArn",
            "SchemaFacet",
            "ObjectReference"
        ],
        "ApplySchema": [
            "PublishedSchemaArn",
            "DirectoryArn"
        ],
        "AttachObject": [
            "DirectoryArn",
            "ParentReference",
            "ChildReference",
            "LinkName"
        ],
        "AttachPolicy": [
            "DirectoryArn",
            "PolicyReference",
            "ObjectReference"
        ],
        "AttachToIndex": [
            "DirectoryArn",
            "IndexReference",
            "TargetReference"
        ],
        "AttachTypedLink": [
            "DirectoryArn",
            "SourceObjectReference",
            "TargetObjectReference",
            "TypedLinkFacet",
            "Attributes"
        ],
        "BatchRead": [
            "DirectoryArn",
            "Operations"
        ],
        "BatchWrite": [
            "DirectoryArn",
            "Operations"
        ],
        "CreateDirectory": [
            "Name",
            "SchemaArn"
        ],
        "CreateFacet": [
            "SchemaArn",
            "Name"
        ],
        "CreateIndex": [
            "DirectoryArn",
            "OrderedIndexedAttributeList",
            "IsUnique"
        ],
        "CreateObject": [
            "DirectoryArn",
            "SchemaFacets"
        ],
        "CreateSchema": [
            "Name"
        ],
        "CreateTypedLinkFacet": [
            "SchemaArn",
            "Facet"
        ],
        "DeleteDirectory": [
            "DirectoryArn"
        ],
        "DeleteFacet": [
            "SchemaArn",
            "Name"
        ],
        "DeleteObject": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "DeleteSchema": [
            "SchemaArn"
        ],
        "DeleteTypedLinkFacet": [
            "SchemaArn",
            "Name"
        ],
        "DetachFromIndex": [
            "DirectoryArn",
            "IndexReference",
            "TargetReference"
        ],
        "DetachObject": [
            "DirectoryArn",
            "ParentReference",
            "LinkName"
        ],
        "DetachPolicy": [
            "DirectoryArn",
            "PolicyReference",
            "ObjectReference"
        ],
        "DetachTypedLink": [
            "DirectoryArn",
            "TypedLinkSpecifier"
        ],
        "DisableDirectory": [
            "DirectoryArn"
        ],
        "EnableDirectory": [
            "DirectoryArn"
        ],
        "GetAppliedSchemaVersion": [
            "SchemaArn"
        ],
        "GetDirectory": [
            "DirectoryArn"
        ],
        "GetFacet": [
            "SchemaArn",
            "Name"
        ],
        "GetLinkAttributes": [
            "DirectoryArn",
            "TypedLinkSpecifier",
            "AttributeNames"
        ],
        "GetObjectAttributes": [
            "DirectoryArn",
            "ObjectReference",
            "SchemaFacet",
            "AttributeNames"
        ],
        "GetObjectInformation": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "GetSchemaAsJson": [
            "SchemaArn"
        ],
        "GetTypedLinkFacetInformation": [
            "SchemaArn",
            "Name"
        ],
        "ListAppliedSchemaArns": [
            "DirectoryArn"
        ],
        "ListAttachedIndices": [
            "DirectoryArn",
            "TargetReference"
        ],
        "ListDevelopmentSchemaArns": "",
        "ListDirectories": "",
        "ListFacetAttributes": [
            "SchemaArn",
            "Name"
        ],
        "ListFacetNames": [
            "SchemaArn"
        ],
        "ListIncomingTypedLinks": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListIndex": [
            "DirectoryArn",
            "IndexReference"
        ],
        "ListManagedSchemaArns": "",
        "ListObjectAttributes": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListObjectChildren": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListObjectParentPaths": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListObjectParents": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListObjectPolicies": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListOutgoingTypedLinks": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "ListPolicyAttachments": [
            "DirectoryArn",
            "PolicyReference"
        ],
        "ListPublishedSchemaArns": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTypedLinkFacetAttributes": [
            "SchemaArn",
            "Name"
        ],
        "ListTypedLinkFacetNames": [
            "SchemaArn"
        ],
        "LookupPolicy": [
            "DirectoryArn",
            "ObjectReference"
        ],
        "PublishSchema": [
            "DevelopmentSchemaArn",
            "Version"
        ],
        "PutSchemaFromJson": [
            "SchemaArn",
            "Document"
        ],
        "RemoveFacetFromObject": [
            "DirectoryArn",
            "SchemaFacet",
            "ObjectReference"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateFacet": [
            "SchemaArn",
            "Name"
        ],
        "UpdateLinkAttributes": [
            "DirectoryArn",
            "TypedLinkSpecifier",
            "AttributeUpdates"
        ],
        "UpdateObjectAttributes": [
            "DirectoryArn",
            "ObjectReference",
            "AttributeUpdates"
        ],
        "UpdateSchema": [
            "SchemaArn",
            "Name"
        ],
        "UpdateTypedLinkFacet": [
            "SchemaArn",
            "Name",
            "AttributeUpdates",
            "IdentityAttributeOrder"
        ],
        "UpgradeAppliedSchema": [
            "PublishedSchemaArn",
            "DirectoryArn"
        ],
        "UpgradePublishedSchema": [
            "DevelopmentSchemaArn",
            "PublishedSchemaArn",
            "MinorVersion"
        ]
    },
    "cloudformation": {
        "ActivateOrganizationsAccess": "",
        "ActivateType": "",
        "BatchDescribeTypeConfigurations": [
            "TypeConfigurationIdentifiers"
        ],
        "CancelUpdateStack": [
            "StackName"
        ],
        "ContinueUpdateRollback": [
            "StackName"
        ],
        "CreateChangeSet": [
            "StackName",
            "ChangeSetName"
        ],
        "CreateGeneratedTemplate": [
            "GeneratedTemplateName"
        ],
        "CreateStack": [
            "StackName"
        ],
        "CreateStackInstances": [
            "StackSetName",
            "Regions"
        ],
        "CreateStackSet": [
            "StackSetName"
        ],
        "DeactivateOrganizationsAccess": "",
        "DeactivateType": "",
        "DeleteChangeSet": [
            "ChangeSetName"
        ],
        "DeleteGeneratedTemplate": [
            "GeneratedTemplateName"
        ],
        "DeleteStack": [
            "StackName"
        ],
        "DeleteStackInstances": [
            "StackSetName",
            "Regions",
            "RetainStacks"
        ],
        "DeleteStackSet": [
            "StackSetName"
        ],
        "DeregisterType": "",
        "DescribeAccountLimits": "",
        "DescribeChangeSet": [
            "ChangeSetName"
        ],
        "DescribeChangeSetHooks": [
            "ChangeSetName"
        ],
        "DescribeGeneratedTemplate": [
            "GeneratedTemplateName"
        ],
        "DescribeOrganizationsAccess": "",
        "DescribePublisher": "",
        "DescribeResourceScan": [
            "ResourceScanId"
        ],
        "DescribeStackDriftDetectionStatus": [
            "StackDriftDetectionId"
        ],
        "DescribeStackEvents": "",
        "DescribeStackInstance": [
            "StackSetName",
            "StackInstanceAccount",
            "StackInstanceRegion"
        ],
        "DescribeStackResource": [
            "StackName",
            "LogicalResourceId"
        ],
        "DescribeStackResourceDrifts": [
            "StackName"
        ],
        "DescribeStackResources": "",
        "DescribeStackSet": [
            "StackSetName"
        ],
        "DescribeStackSetOperation": [
            "StackSetName",
            "OperationId"
        ],
        "DescribeStacks": "",
        "DescribeType": "",
        "DescribeTypeRegistration": [
            "RegistrationToken"
        ],
        "DetectStackDrift": [
            "StackName"
        ],
        "DetectStackResourceDrift": [
            "StackName",
            "LogicalResourceId"
        ],
        "DetectStackSetDrift": [
            "StackSetName"
        ],
        "EstimateTemplateCost": "",
        "ExecuteChangeSet": [
            "ChangeSetName"
        ],
        "GetGeneratedTemplate": [
            "GeneratedTemplateName"
        ],
        "GetStackPolicy": [
            "StackName"
        ],
        "GetTemplate": "",
        "GetTemplateSummary": "",
        "ImportStacksToStackSet": [
            "StackSetName"
        ],
        "ListChangeSets": [
            "StackName"
        ],
        "ListExports": "",
        "ListGeneratedTemplates": "",
        "ListImports": [
            "ExportName"
        ],
        "ListResourceScanRelatedResources": [
            "ResourceScanId",
            "Resources"
        ],
        "ListResourceScanResources": [
            "ResourceScanId"
        ],
        "ListResourceScans": "",
        "ListStackInstanceResourceDrifts": [
            "StackSetName",
            "StackInstanceAccount",
            "StackInstanceRegion",
            "OperationId"
        ],
        "ListStackInstances": [
            "StackSetName"
        ],
        "ListStackResources": [
            "StackName"
        ],
        "ListStackSetAutoDeploymentTargets": [
            "StackSetName"
        ],
        "ListStackSetOperationResults": [
            "StackSetName",
            "OperationId"
        ],
        "ListStackSetOperations": [
            "StackSetName"
        ],
        "ListStackSets": "",
        "ListStacks": "",
        "ListTypeRegistrations": "",
        "ListTypeVersions": "",
        "ListTypes": "",
        "PublishType": "",
        "RecordHandlerProgress": [
            "BearerToken",
            "OperationStatus"
        ],
        "RegisterPublisher": "",
        "RegisterType": [
            "TypeName",
            "SchemaHandlerPackage"
        ],
        "RollbackStack": [
            "StackName"
        ],
        "SetStackPolicy": [
            "StackName"
        ],
        "SetTypeConfiguration": [
            "Configuration"
        ],
        "SetTypeDefaultVersion": "",
        "SignalResource": [
            "StackName",
            "LogicalResourceId",
            "UniqueId",
            "Status"
        ],
        "StartResourceScan": "",
        "StopStackSetOperation": [
            "StackSetName",
            "OperationId"
        ],
        "TestType": "",
        "UpdateGeneratedTemplate": [
            "GeneratedTemplateName"
        ],
        "UpdateStack": [
            "StackName"
        ],
        "UpdateStackInstances": [
            "StackSetName",
            "Regions"
        ],
        "UpdateStackSet": [
            "StackSetName"
        ],
        "UpdateTerminationProtection": [
            "EnableTerminationProtection",
            "StackName"
        ],
        "ValidateTemplate": ""
    },
    "cloudfront": {
        "AssociateAlias": [
            "TargetDistributionId",
            "Alias"
        ],
        "CopyDistribution": [
            "PrimaryDistributionId",
            "CallerReference"
        ],
        "CreateCachePolicy": [
            "CachePolicyConfig"
        ],
        "CreateCloudFrontOriginAccessIdentity": [
            "CloudFrontOriginAccessIdentityConfig"
        ],
        "CreateContinuousDeploymentPolicy": [
            "ContinuousDeploymentPolicyConfig"
        ],
        "CreateDistribution": [
            "DistributionConfig"
        ],
        "CreateDistributionWithTags": [
            "DistributionConfigWithTags"
        ],
        "CreateFieldLevelEncryptionConfig": [
            "FieldLevelEncryptionConfig"
        ],
        "CreateFieldLevelEncryptionProfile": [
            "FieldLevelEncryptionProfileConfig"
        ],
        "CreateFunction": [
            "Name",
            "FunctionConfig",
            "FunctionCode"
        ],
        "CreateInvalidation": [
            "DistributionId",
            "InvalidationBatch"
        ],
        "CreateKeyGroup": [
            "KeyGroupConfig"
        ],
        "CreateKeyValueStore": [
            "Name"
        ],
        "CreateMonitoringSubscription": [
            "MonitoringSubscription",
            "DistributionId"
        ],
        "CreateOriginAccessControl": [
            "OriginAccessControlConfig"
        ],
        "CreateOriginRequestPolicy": [
            "OriginRequestPolicyConfig"
        ],
        "CreatePublicKey": [
            "PublicKeyConfig"
        ],
        "CreateRealtimeLogConfig": [
            "EndPoints",
            "Fields",
            "Name",
            "SamplingRate"
        ],
        "CreateResponseHeadersPolicy": [
            "ResponseHeadersPolicyConfig"
        ],
        "CreateStreamingDistribution": [
            "StreamingDistributionConfig"
        ],
        "CreateStreamingDistributionWithTags": [
            "StreamingDistributionConfigWithTags"
        ],
        "DeleteCachePolicy": [
            "Id"
        ],
        "DeleteCloudFrontOriginAccessIdentity": [
            "Id"
        ],
        "DeleteContinuousDeploymentPolicy": [
            "Id"
        ],
        "DeleteDistribution": [
            "Id"
        ],
        "DeleteFieldLevelEncryptionConfig": [
            "Id"
        ],
        "DeleteFieldLevelEncryptionProfile": [
            "Id"
        ],
        "DeleteFunction": [
            "IfMatch",
            "Name"
        ],
        "DeleteKeyGroup": [
            "Id"
        ],
        "DeleteKeyValueStore": [
            "IfMatch",
            "Name"
        ],
        "DeleteMonitoringSubscription": [
            "DistributionId"
        ],
        "DeleteOriginAccessControl": [
            "Id"
        ],
        "DeleteOriginRequestPolicy": [
            "Id"
        ],
        "DeletePublicKey": [
            "Id"
        ],
        "DeleteRealtimeLogConfig": "",
        "DeleteResponseHeadersPolicy": [
            "Id"
        ],
        "DeleteStreamingDistribution": [
            "Id"
        ],
        "DescribeFunction": [
            "Name"
        ],
        "DescribeKeyValueStore": [
            "Name"
        ],
        "GetCachePolicy": [
            "Id"
        ],
        "GetCachePolicyConfig": [
            "Id"
        ],
        "GetCloudFrontOriginAccessIdentity": [
            "Id"
        ],
        "GetCloudFrontOriginAccessIdentityConfig": [
            "Id"
        ],
        "GetContinuousDeploymentPolicy": [
            "Id"
        ],
        "GetContinuousDeploymentPolicyConfig": [
            "Id"
        ],
        "GetDistribution": [
            "Id"
        ],
        "GetDistributionConfig": [
            "Id"
        ],
        "GetFieldLevelEncryption": [
            "Id"
        ],
        "GetFieldLevelEncryptionConfig": [
            "Id"
        ],
        "GetFieldLevelEncryptionProfile": [
            "Id"
        ],
        "GetFieldLevelEncryptionProfileConfig": [
            "Id"
        ],
        "GetFunction": [
            "Name"
        ],
        "GetInvalidation": [
            "DistributionId",
            "Id"
        ],
        "GetKeyGroup": [
            "Id"
        ],
        "GetKeyGroupConfig": [
            "Id"
        ],
        "GetMonitoringSubscription": [
            "DistributionId"
        ],
        "GetOriginAccessControl": [
            "Id"
        ],
        "GetOriginAccessControlConfig": [
            "Id"
        ],
        "GetOriginRequestPolicy": [
            "Id"
        ],
        "GetOriginRequestPolicyConfig": [
            "Id"
        ],
        "GetPublicKey": [
            "Id"
        ],
        "GetPublicKeyConfig": [
            "Id"
        ],
        "GetRealtimeLogConfig": "",
        "GetResponseHeadersPolicy": [
            "Id"
        ],
        "GetResponseHeadersPolicyConfig": [
            "Id"
        ],
        "GetStreamingDistribution": [
            "Id"
        ],
        "GetStreamingDistributionConfig": [
            "Id"
        ],
        "ListCachePolicies": "",
        "ListCloudFrontOriginAccessIdentities": "",
        "ListConflictingAliases": [
            "DistributionId",
            "Alias"
        ],
        "ListContinuousDeploymentPolicies": "",
        "ListDistributions": "",
        "ListDistributionsByCachePolicyId": [
            "CachePolicyId"
        ],
        "ListDistributionsByKeyGroup": [
            "KeyGroupId"
        ],
        "ListDistributionsByOriginRequestPolicyId": [
            "OriginRequestPolicyId"
        ],
        "ListDistributionsByRealtimeLogConfig": "",
        "ListDistributionsByResponseHeadersPolicyId": [
            "ResponseHeadersPolicyId"
        ],
        "ListDistributionsByWebACLId": [
            "WebACLId"
        ],
        "ListFieldLevelEncryptionConfigs": "",
        "ListFieldLevelEncryptionProfiles": "",
        "ListFunctions": "",
        "ListInvalidations": [
            "DistributionId"
        ],
        "ListKeyGroups": "",
        "ListKeyValueStores": "",
        "ListOriginAccessControls": "",
        "ListOriginRequestPolicies": "",
        "ListPublicKeys": "",
        "ListRealtimeLogConfigs": "",
        "ListResponseHeadersPolicies": "",
        "ListStreamingDistributions": "",
        "ListTagsForResource": [
            "Resource"
        ],
        "PublishFunction": [
            "Name",
            "IfMatch"
        ],
        "TagResource": [
            "Resource",
            "Tags"
        ],
        "TestFunction": [
            "Name",
            "IfMatch",
            "EventObject"
        ],
        "UntagResource": [
            "Resource",
            "TagKeys"
        ],
        "UpdateCachePolicy": [
            "CachePolicyConfig",
            "Id"
        ],
        "UpdateCloudFrontOriginAccessIdentity": [
            "CloudFrontOriginAccessIdentityConfig",
            "Id"
        ],
        "UpdateContinuousDeploymentPolicy": [
            "ContinuousDeploymentPolicyConfig",
            "Id"
        ],
        "UpdateDistribution": [
            "DistributionConfig",
            "Id"
        ],
        "UpdateDistributionWithStagingConfig": [
            "Id"
        ],
        "UpdateFieldLevelEncryptionConfig": [
            "FieldLevelEncryptionConfig",
            "Id"
        ],
        "UpdateFieldLevelEncryptionProfile": [
            "FieldLevelEncryptionProfileConfig",
            "Id"
        ],
        "UpdateFunction": [
            "IfMatch",
            "FunctionConfig",
            "FunctionCode",
            "Name"
        ],
        "UpdateKeyGroup": [
            "KeyGroupConfig",
            "Id"
        ],
        "UpdateKeyValueStore": [
            "Name",
            "Comment",
            "IfMatch"
        ],
        "UpdateOriginAccessControl": [
            "OriginAccessControlConfig",
            "Id"
        ],
        "UpdateOriginRequestPolicy": [
            "OriginRequestPolicyConfig",
            "Id"
        ],
        "UpdatePublicKey": [
            "PublicKeyConfig",
            "Id"
        ],
        "UpdateRealtimeLogConfig": "",
        "UpdateResponseHeadersPolicy": [
            "ResponseHeadersPolicyConfig",
            "Id"
        ],
        "UpdateStreamingDistribution": [
            "StreamingDistributionConfig",
            "Id"
        ]
    },
    "cloudhsm": {
        "AddTagsToResource": [
            "ResourceArn",
            "TagList"
        ],
        "CreateHapg": [
            "Label"
        ],
        "CreateHsm": [
            "SubnetId",
            "SshKey",
            "IamRoleArn",
            "SubscriptionType"
        ],
        "CreateLunaClient": [
            "Certificate"
        ],
        "DeleteHapg": [
            "HapgArn"
        ],
        "DeleteHsm": [
            "HsmArn"
        ],
        "DeleteLunaClient": [
            "ClientArn"
        ],
        "DescribeHapg": [
            "HapgArn"
        ],
        "DescribeHsm": "",
        "DescribeLunaClient": "",
        "GetConfig": [
            "ClientArn",
            "ClientVersion",
            "HapgList"
        ],
        "ListAvailableZones": "",
        "ListHapgs": "",
        "ListHsms": "",
        "ListLunaClients": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ModifyHapg": [
            "HapgArn"
        ],
        "ModifyHsm": [
            "HsmArn"
        ],
        "ModifyLunaClient": [
            "ClientArn",
            "Certificate"
        ],
        "RemoveTagsFromResource": [
            "ResourceArn",
            "TagKeyList"
        ]
    },
    "cloudhsmv2": {
        "CopyBackupToRegion": [
            "DestinationRegion",
            "BackupId"
        ],
        "CreateCluster": [
            "HsmType",
            "SubnetIds"
        ],
        "CreateHsm": [
            "ClusterId",
            "AvailabilityZone"
        ],
        "DeleteBackup": [
            "BackupId"
        ],
        "DeleteCluster": [
            "ClusterId"
        ],
        "DeleteHsm": [
            "ClusterId"
        ],
        "DescribeBackups": "",
        "DescribeClusters": "",
        "InitializeCluster": [
            "ClusterId",
            "SignedCert",
            "TrustAnchor"
        ],
        "ListTags": [
            "ResourceId"
        ],
        "ModifyBackupAttributes": [
            "BackupId",
            "NeverExpires"
        ],
        "ModifyCluster": [
            "BackupRetentionPolicy",
            "ClusterId"
        ],
        "RestoreBackup": [
            "BackupId"
        ],
        "TagResource": [
            "ResourceId",
            "TagList"
        ],
        "UntagResource": [
            "ResourceId",
            "TagKeyList"
        ]
    },
    "cloudsearch": {
        "BuildSuggesters": [
            "DomainName"
        ],
        "CreateDomain": [
            "DomainName"
        ],
        "DefineAnalysisScheme": [
            "DomainName",
            "AnalysisScheme"
        ],
        "DefineExpression": [
            "DomainName",
            "Expression"
        ],
        "DefineIndexField": [
            "DomainName",
            "IndexField"
        ],
        "DefineSuggester": [
            "DomainName",
            "Suggester"
        ],
        "DeleteAnalysisScheme": [
            "DomainName",
            "AnalysisSchemeName"
        ],
        "DeleteDomain": [
            "DomainName"
        ],
        "DeleteExpression": [
            "DomainName",
            "ExpressionName"
        ],
        "DeleteIndexField": [
            "DomainName",
            "IndexFieldName"
        ],
        "DeleteSuggester": [
            "DomainName",
            "SuggesterName"
        ],
        "DescribeAnalysisSchemes": [
            "DomainName"
        ],
        "DescribeAvailabilityOptions": [
            "DomainName"
        ],
        "DescribeDomainEndpointOptions": [
            "DomainName"
        ],
        "DescribeDomains": "",
        "DescribeExpressions": [
            "DomainName"
        ],
        "DescribeIndexFields": [
            "DomainName"
        ],
        "DescribeScalingParameters": [
            "DomainName"
        ],
        "DescribeServiceAccessPolicies": [
            "DomainName"
        ],
        "DescribeSuggesters": [
            "DomainName"
        ],
        "IndexDocuments": [
            "DomainName"
        ],
        "ListDomainNames": "",
        "UpdateAvailabilityOptions": [
            "DomainName",
            "MultiAZ"
        ],
        "UpdateDomainEndpointOptions": [
            "DomainName",
            "DomainEndpointOptions"
        ],
        "UpdateScalingParameters": [
            "DomainName",
            "ScalingParameters"
        ],
        "UpdateServiceAccessPolicies": [
            "DomainName",
            "AccessPolicies"
        ]
    },
    "cloudsearchdomain": {
        "Search": [
            "query"
        ],
        "Suggest": [
            "query",
            "suggester"
        ],
        "UploadDocuments": [
            "documents",
            "contentType"
        ]
    },
    "cloudtrail": {
        "AddTags": [
            "ResourceId",
            "TagsList"
        ],
        "CancelQuery": [
            "QueryId"
        ],
        "CreateChannel": [
            "Name",
            "Source",
            "Destinations"
        ],
        "CreateEventDataStore": [
            "Name"
        ],
        "CreateTrail": [
            "Name",
            "S3BucketName"
        ],
        "DeleteChannel": [
            "Channel"
        ],
        "DeleteEventDataStore": [
            "EventDataStore"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteTrail": [
            "Name"
        ],
        "DeregisterOrganizationDelegatedAdmin": [
            "DelegatedAdminAccountId"
        ],
        "DescribeQuery": "",
        "DescribeTrails": "",
        "DisableFederation": [
            "EventDataStore"
        ],
        "EnableFederation": [
            "EventDataStore",
            "FederationRoleArn"
        ],
        "GetChannel": [
            "Channel"
        ],
        "GetEventDataStore": [
            "EventDataStore"
        ],
        "GetEventSelectors": [
            "TrailName"
        ],
        "GetImport": [
            "ImportId"
        ],
        "GetInsightSelectors": "",
        "GetQueryResults": [
            "QueryId"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "GetTrail": [
            "Name"
        ],
        "GetTrailStatus": [
            "Name"
        ],
        "ListChannels": "",
        "ListEventDataStores": "",
        "ListImportFailures": [
            "ImportId"
        ],
        "ListImports": "",
        "ListInsightsMetricData": [
            "EventSource",
            "EventName",
            "InsightType"
        ],
        "ListPublicKeys": "",
        "ListQueries": [
            "EventDataStore"
        ],
        "ListTags": [
            "ResourceIdList"
        ],
        "ListTrails": "",
        "LookupEvents": "",
        "PutEventSelectors": [
            "TrailName"
        ],
        "PutInsightSelectors": [
            "InsightSelectors"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "ResourcePolicy"
        ],
        "RegisterOrganizationDelegatedAdmin": [
            "MemberAccountId"
        ],
        "RemoveTags": [
            "ResourceId",
            "TagsList"
        ],
        "RestoreEventDataStore": [
            "EventDataStore"
        ],
        "StartEventDataStoreIngestion": [
            "EventDataStore"
        ],
        "StartImport": "",
        "StartLogging": [
            "Name"
        ],
        "StartQuery": "",
        "StopEventDataStoreIngestion": [
            "EventDataStore"
        ],
        "StopImport": [
            "ImportId"
        ],
        "StopLogging": [
            "Name"
        ],
        "UpdateChannel": [
            "Channel"
        ],
        "UpdateEventDataStore": [
            "EventDataStore"
        ],
        "UpdateTrail": [
            "Name"
        ]
    },
    "cloudtrail-data": {
        "PutAuditEvents": [
            "auditEvents",
            "channelArn"
        ]
    },
    "codeartifact": {
        "AssociateExternalConnection": [
            "domain",
            "repository",
            "externalConnection"
        ],
        "CopyPackageVersions": [
            "domain",
            "sourceRepository",
            "destinationRepository",
            "format",
            "package"
        ],
        "CreateDomain": [
            "domain"
        ],
        "CreatePackageGroup": [
            "domain",
            "packageGroup"
        ],
        "CreateRepository": [
            "domain",
            "repository"
        ],
        "DeleteDomain": [
            "domain"
        ],
        "DeleteDomainPermissionsPolicy": [
            "domain"
        ],
        "DeletePackage": [
            "domain",
            "repository",
            "format",
            "package"
        ],
        "DeletePackageGroup": [
            "domain",
            "packageGroup"
        ],
        "DeletePackageVersions": [
            "domain",
            "repository",
            "format",
            "package",
            "versions"
        ],
        "DeleteRepository": [
            "domain",
            "repository"
        ],
        "DeleteRepositoryPermissionsPolicy": [
            "domain",
            "repository"
        ],
        "DescribeDomain": [
            "domain"
        ],
        "DescribePackage": [
            "domain",
            "repository",
            "format",
            "package"
        ],
        "DescribePackageGroup": [
            "domain",
            "packageGroup"
        ],
        "DescribePackageVersion": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion"
        ],
        "DescribeRepository": [
            "domain",
            "repository"
        ],
        "DisassociateExternalConnection": [
            "domain",
            "repository",
            "externalConnection"
        ],
        "DisposePackageVersions": [
            "domain",
            "repository",
            "format",
            "package",
            "versions"
        ],
        "GetAssociatedPackageGroup": [
            "domain",
            "format",
            "package"
        ],
        "GetAuthorizationToken": [
            "domain"
        ],
        "GetDomainPermissionsPolicy": [
            "domain"
        ],
        "GetPackageVersionAsset": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion",
            "asset"
        ],
        "GetPackageVersionReadme": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion"
        ],
        "GetRepositoryEndpoint": [
            "domain",
            "repository",
            "format"
        ],
        "GetRepositoryPermissionsPolicy": [
            "domain",
            "repository"
        ],
        "ListAllowedRepositoriesForGroup": [
            "domain",
            "packageGroup",
            "originRestrictionType"
        ],
        "ListAssociatedPackages": [
            "domain",
            "packageGroup"
        ],
        "ListDomains": "",
        "ListPackageGroups": [
            "domain"
        ],
        "ListPackageVersionAssets": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion"
        ],
        "ListPackageVersionDependencies": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion"
        ],
        "ListPackageVersions": [
            "domain",
            "repository",
            "format",
            "package"
        ],
        "ListPackages": [
            "domain",
            "repository"
        ],
        "ListRepositories": "",
        "ListRepositoriesInDomain": [
            "domain"
        ],
        "ListSubPackageGroups": [
            "domain",
            "packageGroup"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PublishPackageVersion": [
            "domain",
            "repository",
            "format",
            "package",
            "packageVersion",
            "assetContent",
            "assetName",
            "assetSHA256"
        ],
        "PutDomainPermissionsPolicy": [
            "domain",
            "policyDocument"
        ],
        "PutPackageOriginConfiguration": [
            "domain",
            "repository",
            "format",
            "package",
            "restrictions"
        ],
        "PutRepositoryPermissionsPolicy": [
            "domain",
            "repository",
            "policyDocument"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdatePackageGroup": [
            "domain",
            "packageGroup"
        ],
        "UpdatePackageGroupOriginConfiguration": [
            "domain",
            "packageGroup"
        ],
        "UpdatePackageVersionsStatus": [
            "domain",
            "repository",
            "format",
            "package",
            "versions",
            "targetStatus"
        ],
        "UpdateRepository": [
            "domain",
            "repository"
        ]
    },
    "codebuild": {
        "BatchDeleteBuilds": [
            "ids"
        ],
        "BatchGetBuildBatches": [
            "ids"
        ],
        "BatchGetBuilds": [
            "ids"
        ],
        "BatchGetFleets": [
            "names"
        ],
        "BatchGetProjects": [
            "names"
        ],
        "BatchGetReportGroups": [
            "reportGroupArns"
        ],
        "BatchGetReports": [
            "reportArns"
        ],
        "CreateFleet": [
            "name",
            "baseCapacity",
            "environmentType",
            "computeType"
        ],
        "CreateProject": [
            "name",
            "source",
            "artifacts",
            "environment",
            "serviceRole"
        ],
        "CreateReportGroup": [
            "name",
            "type",
            "exportConfig"
        ],
        "CreateWebhook": [
            "projectName"
        ],
        "DeleteBuildBatch": [
            "id"
        ],
        "DeleteFleet": [
            "arn"
        ],
        "DeleteProject": [
            "name"
        ],
        "DeleteReport": [
            "arn"
        ],
        "DeleteReportGroup": [
            "arn"
        ],
        "DeleteResourcePolicy": [
            "resourceArn"
        ],
        "DeleteSourceCredentials": [
            "arn"
        ],
        "DeleteWebhook": [
            "projectName"
        ],
        "DescribeCodeCoverages": [
            "reportArn"
        ],
        "DescribeTestCases": [
            "reportArn"
        ],
        "GetReportGroupTrend": [
            "reportGroupArn",
            "trendField"
        ],
        "GetResourcePolicy": [
            "resourceArn"
        ],
        "ImportSourceCredentials": [
            "token",
            "serverType",
            "authType"
        ],
        "InvalidateProjectCache": [
            "projectName"
        ],
        "ListBuildBatches": "",
        "ListBuildBatchesForProject": "",
        "ListBuilds": "",
        "ListBuildsForProject": [
            "projectName"
        ],
        "ListCuratedEnvironmentImages": "",
        "ListFleets": "",
        "ListProjects": "",
        "ListReportGroups": "",
        "ListReports": "",
        "ListReportsForReportGroup": [
            "reportGroupArn"
        ],
        "ListSharedProjects": "",
        "ListSharedReportGroups": "",
        "ListSourceCredentials": "",
        "PutResourcePolicy": [
            "policy",
            "resourceArn"
        ],
        "RetryBuild": "",
        "RetryBuildBatch": "",
        "StartBuild": [
            "projectName"
        ],
        "StartBuildBatch": [
            "projectName"
        ],
        "StopBuild": [
            "id"
        ],
        "StopBuildBatch": [
            "id"
        ],
        "UpdateFleet": [
            "arn"
        ],
        "UpdateProject": [
            "name"
        ],
        "UpdateProjectVisibility": [
            "projectArn",
            "projectVisibility"
        ],
        "UpdateReportGroup": [
            "arn"
        ],
        "UpdateWebhook": [
            "projectName"
        ]
    },
    "codecatalyst": {
        "CreateAccessToken": [
            "name"
        ],
        "CreateDevEnvironment": [
            "spaceName",
            "projectName",
            "instanceType",
            "persistentStorage"
        ],
        "CreateProject": [
            "spaceName",
            "displayName"
        ],
        "CreateSourceRepository": [
            "spaceName",
            "projectName",
            "name"
        ],
        "CreateSourceRepositoryBranch": [
            "spaceName",
            "projectName",
            "sourceRepositoryName",
            "name"
        ],
        "DeleteAccessToken": [
            "id"
        ],
        "DeleteDevEnvironment": [
            "spaceName",
            "projectName",
            "id"
        ],
        "DeleteProject": [
            "spaceName",
            "name"
        ],
        "DeleteSourceRepository": [
            "spaceName",
            "projectName",
            "name"
        ],
        "DeleteSpace": [
            "name"
        ],
        "GetDevEnvironment": [
            "spaceName",
            "projectName",
            "id"
        ],
        "GetProject": [
            "spaceName",
            "name"
        ],
        "GetSourceRepository": [
            "spaceName",
            "projectName",
            "name"
        ],
        "GetSourceRepositoryCloneUrls": [
            "spaceName",
            "projectName",
            "sourceRepositoryName"
        ],
        "GetSpace": [
            "name"
        ],
        "GetSubscription": [
            "spaceName"
        ],
        "GetUserDetails": "",
        "GetWorkflow": [
            "spaceName",
            "id",
            "projectName"
        ],
        "GetWorkflowRun": [
            "spaceName",
            "id",
            "projectName"
        ],
        "ListAccessTokens": "",
        "ListDevEnvironmentSessions": [
            "spaceName",
            "projectName",
            "devEnvironmentId"
        ],
        "ListDevEnvironments": [
            "spaceName"
        ],
        "ListEventLogs": [
            "spaceName",
            "startTime",
            "endTime"
        ],
        "ListProjects": [
            "spaceName"
        ],
        "ListSourceRepositories": [
            "spaceName",
            "projectName"
        ],
        "ListSourceRepositoryBranches": [
            "spaceName",
            "projectName",
            "sourceRepositoryName"
        ],
        "ListSpaces": "",
        "ListWorkflowRuns": [
            "spaceName",
            "projectName"
        ],
        "ListWorkflows": [
            "spaceName",
            "projectName"
        ],
        "StartDevEnvironment": [
            "spaceName",
            "projectName",
            "id"
        ],
        "StartDevEnvironmentSession": [
            "spaceName",
            "projectName",
            "id",
            "sessionConfiguration"
        ],
        "StartWorkflowRun": [
            "spaceName",
            "projectName",
            "workflowId"
        ],
        "StopDevEnvironment": [
            "spaceName",
            "projectName",
            "id"
        ],
        "StopDevEnvironmentSession": [
            "spaceName",
            "projectName",
            "id",
            "sessionId"
        ],
        "UpdateDevEnvironment": [
            "spaceName",
            "projectName",
            "id"
        ],
        "UpdateProject": [
            "spaceName",
            "name"
        ],
        "UpdateSpace": [
            "name"
        ],
        "VerifySession": ""
    },
    "codecommit": {
        "AssociateApprovalRuleTemplateWithRepository": [
            "approvalRuleTemplateName",
            "repositoryName"
        ],
        "BatchAssociateApprovalRuleTemplateWithRepositories": [
            "approvalRuleTemplateName",
            "repositoryNames"
        ],
        "BatchDescribeMergeConflicts": [
            "repositoryName",
            "destinationCommitSpecifier",
            "sourceCommitSpecifier",
            "mergeOption"
        ],
        "BatchDisassociateApprovalRuleTemplateFromRepositories": [
            "approvalRuleTemplateName",
            "repositoryNames"
        ],
        "BatchGetCommits": [
            "commitIds",
            "repositoryName"
        ],
        "BatchGetRepositories": [
            "repositoryNames"
        ],
        "CreateApprovalRuleTemplate": [
            "approvalRuleTemplateName",
            "approvalRuleTemplateContent"
        ],
        "CreateBranch": [
            "repositoryName",
            "branchName",
            "commitId"
        ],
        "CreateCommit": [
            "repositoryName",
            "branchName"
        ],
        "CreatePullRequest": [
            "title",
            "targets"
        ],
        "CreatePullRequestApprovalRule": [
            "pullRequestId",
            "approvalRuleName",
            "approvalRuleContent"
        ],
        "CreateRepository": [
            "repositoryName"
        ],
        "CreateUnreferencedMergeCommit": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier",
            "mergeOption"
        ],
        "DeleteApprovalRuleTemplate": [
            "approvalRuleTemplateName"
        ],
        "DeleteBranch": [
            "repositoryName",
            "branchName"
        ],
        "DeleteCommentContent": [
            "commentId"
        ],
        "DeleteFile": [
            "repositoryName",
            "branchName",
            "filePath",
            "parentCommitId"
        ],
        "DeletePullRequestApprovalRule": [
            "pullRequestId",
            "approvalRuleName"
        ],
        "DeleteRepository": [
            "repositoryName"
        ],
        "DescribeMergeConflicts": [
            "repositoryName",
            "destinationCommitSpecifier",
            "sourceCommitSpecifier",
            "mergeOption",
            "filePath"
        ],
        "DescribePullRequestEvents": [
            "pullRequestId"
        ],
        "DisassociateApprovalRuleTemplateFromRepository": [
            "approvalRuleTemplateName",
            "repositoryName"
        ],
        "EvaluatePullRequestApprovalRules": [
            "pullRequestId",
            "revisionId"
        ],
        "GetApprovalRuleTemplate": [
            "approvalRuleTemplateName"
        ],
        "GetBlob": [
            "repositoryName",
            "blobId"
        ],
        "GetBranch": "",
        "GetComment": [
            "commentId"
        ],
        "GetCommentReactions": [
            "commentId"
        ],
        "GetCommentsForComparedCommit": [
            "repositoryName",
            "afterCommitId"
        ],
        "GetCommentsForPullRequest": [
            "pullRequestId"
        ],
        "GetCommit": [
            "repositoryName",
            "commitId"
        ],
        "GetDifferences": [
            "repositoryName",
            "afterCommitSpecifier"
        ],
        "GetFile": [
            "repositoryName",
            "filePath"
        ],
        "GetFolder": [
            "repositoryName",
            "folderPath"
        ],
        "GetMergeCommit": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier"
        ],
        "GetMergeConflicts": [
            "repositoryName",
            "destinationCommitSpecifier",
            "sourceCommitSpecifier",
            "mergeOption"
        ],
        "GetMergeOptions": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier"
        ],
        "GetPullRequest": [
            "pullRequestId"
        ],
        "GetPullRequestApprovalStates": [
            "pullRequestId",
            "revisionId"
        ],
        "GetPullRequestOverrideState": [
            "pullRequestId",
            "revisionId"
        ],
        "GetRepository": [
            "repositoryName"
        ],
        "GetRepositoryTriggers": [
            "repositoryName"
        ],
        "ListApprovalRuleTemplates": "",
        "ListAssociatedApprovalRuleTemplatesForRepository": [
            "repositoryName"
        ],
        "ListBranches": [
            "repositoryName"
        ],
        "ListFileCommitHistory": [
            "repositoryName",
            "filePath"
        ],
        "ListPullRequests": [
            "repositoryName"
        ],
        "ListRepositories": "",
        "ListRepositoriesForApprovalRuleTemplate": [
            "approvalRuleTemplateName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "MergeBranchesByFastForward": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier"
        ],
        "MergeBranchesBySquash": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier"
        ],
        "MergeBranchesByThreeWay": [
            "repositoryName",
            "sourceCommitSpecifier",
            "destinationCommitSpecifier"
        ],
        "MergePullRequestByFastForward": [
            "pullRequestId",
            "repositoryName"
        ],
        "MergePullRequestBySquash": [
            "pullRequestId",
            "repositoryName"
        ],
        "MergePullRequestByThreeWay": [
            "pullRequestId",
            "repositoryName"
        ],
        "OverridePullRequestApprovalRules": [
            "pullRequestId",
            "revisionId",
            "overrideStatus"
        ],
        "PostCommentForComparedCommit": [
            "repositoryName",
            "afterCommitId",
            "content"
        ],
        "PostCommentForPullRequest": [
            "pullRequestId",
            "repositoryName",
            "beforeCommitId",
            "afterCommitId",
            "content"
        ],
        "PostCommentReply": [
            "inReplyTo",
            "content"
        ],
        "PutCommentReaction": [
            "commentId",
            "reactionValue"
        ],
        "PutFile": [
            "repositoryName",
            "branchName",
            "fileContent",
            "filePath"
        ],
        "PutRepositoryTriggers": [
            "repositoryName",
            "triggers"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestRepositoryTriggers": [
            "repositoryName",
            "triggers"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApprovalRuleTemplateContent": [
            "approvalRuleTemplateName",
            "newRuleContent"
        ],
        "UpdateApprovalRuleTemplateDescription": [
            "approvalRuleTemplateName",
            "approvalRuleTemplateDescription"
        ],
        "UpdateApprovalRuleTemplateName": [
            "oldApprovalRuleTemplateName",
            "newApprovalRuleTemplateName"
        ],
        "UpdateComment": [
            "commentId",
            "content"
        ],
        "UpdateDefaultBranch": [
            "repositoryName",
            "defaultBranchName"
        ],
        "UpdatePullRequestApprovalRuleContent": [
            "pullRequestId",
            "approvalRuleName",
            "newRuleContent"
        ],
        "UpdatePullRequestApprovalState": [
            "pullRequestId",
            "revisionId",
            "approvalState"
        ],
        "UpdatePullRequestDescription": [
            "pullRequestId",
            "description"
        ],
        "UpdatePullRequestStatus": [
            "pullRequestId",
            "pullRequestStatus"
        ],
        "UpdatePullRequestTitle": [
            "pullRequestId",
            "title"
        ],
        "UpdateRepositoryDescription": [
            "repositoryName"
        ],
        "UpdateRepositoryEncryptionKey": [
            "repositoryName",
            "kmsKeyId"
        ],
        "UpdateRepositoryName": [
            "oldName",
            "newName"
        ]
    },
    "codedeploy": {
        "AddTagsToOnPremisesInstances": [
            "tags",
            "instanceNames"
        ],
        "BatchGetApplicationRevisions": [
            "applicationName",
            "revisions"
        ],
        "BatchGetApplications": [
            "applicationNames"
        ],
        "BatchGetDeploymentGroups": [
            "applicationName",
            "deploymentGroupNames"
        ],
        "BatchGetDeploymentInstances": [
            "deploymentId",
            "instanceIds"
        ],
        "BatchGetDeploymentTargets": [
            "deploymentId",
            "targetIds"
        ],
        "BatchGetDeployments": [
            "deploymentIds"
        ],
        "BatchGetOnPremisesInstances": [
            "instanceNames"
        ],
        "ContinueDeployment": "",
        "CreateApplication": [
            "applicationName"
        ],
        "CreateDeployment": [
            "applicationName"
        ],
        "CreateDeploymentConfig": [
            "deploymentConfigName"
        ],
        "CreateDeploymentGroup": [
            "applicationName",
            "deploymentGroupName",
            "serviceRoleArn"
        ],
        "DeleteApplication": [
            "applicationName"
        ],
        "DeleteDeploymentConfig": [
            "deploymentConfigName"
        ],
        "DeleteDeploymentGroup": [
            "applicationName",
            "deploymentGroupName"
        ],
        "DeleteGitHubAccountToken": "",
        "DeleteResourcesByExternalId": "",
        "DeregisterOnPremisesInstance": [
            "instanceName"
        ],
        "GetApplication": [
            "applicationName"
        ],
        "GetApplicationRevision": [
            "applicationName",
            "revision"
        ],
        "GetDeployment": [
            "deploymentId"
        ],
        "GetDeploymentConfig": [
            "deploymentConfigName"
        ],
        "GetDeploymentGroup": [
            "applicationName",
            "deploymentGroupName"
        ],
        "GetDeploymentInstance": [
            "deploymentId",
            "instanceId"
        ],
        "GetDeploymentTarget": [
            "deploymentId",
            "targetId"
        ],
        "GetOnPremisesInstance": [
            "instanceName"
        ],
        "ListApplicationRevisions": [
            "applicationName"
        ],
        "ListApplications": "",
        "ListDeploymentConfigs": "",
        "ListDeploymentGroups": [
            "applicationName"
        ],
        "ListDeploymentInstances": [
            "deploymentId"
        ],
        "ListDeploymentTargets": [
            "deploymentId"
        ],
        "ListDeployments": "",
        "ListGitHubAccountTokenNames": "",
        "ListOnPremisesInstances": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutLifecycleEventHookExecutionStatus": "",
        "RegisterApplicationRevision": [
            "applicationName",
            "revision"
        ],
        "RegisterOnPremisesInstance": [
            "instanceName"
        ],
        "RemoveTagsFromOnPremisesInstances": [
            "tags",
            "instanceNames"
        ],
        "SkipWaitTimeForInstanceTermination": "",
        "StopDeployment": [
            "deploymentId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateApplication": "",
        "UpdateDeploymentGroup": [
            "applicationName",
            "currentDeploymentGroupName"
        ]
    },
    "codeguru-reviewer": {
        "AssociateRepository": [
            "Repository"
        ],
        "CreateCodeReview": [
            "Name",
            "RepositoryAssociationArn",
            "Type"
        ],
        "DescribeCodeReview": [
            "CodeReviewArn"
        ],
        "DescribeRecommendationFeedback": [
            "CodeReviewArn",
            "RecommendationId"
        ],
        "DescribeRepositoryAssociation": [
            "AssociationArn"
        ],
        "DisassociateRepository": [
            "AssociationArn"
        ],
        "ListCodeReviews": [
            "Type"
        ],
        "ListRecommendationFeedback": [
            "CodeReviewArn"
        ],
        "ListRecommendations": [
            "CodeReviewArn"
        ],
        "ListRepositoryAssociations": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutRecommendationFeedback": [
            "CodeReviewArn",
            "RecommendationId",
            "Reactions"
        ],
        "TagResource": [
            "resourceArn",
            "Tags"
        ],
        "UntagResource": [
            "resourceArn",
            "TagKeys"
        ]
    },
    "codeguru-security": {
        "BatchGetFindings": [
            "findingIdentifiers"
        ],
        "CreateScan": [
            "resourceId",
            "scanName"
        ],
        "CreateUploadUrl": [
            "scanName"
        ],
        "GetAccountConfiguration": "",
        "GetFindings": [
            "scanName"
        ],
        "GetMetricsSummary": [
            "date"
        ],
        "GetScan": [
            "scanName"
        ],
        "ListFindingsMetrics": [
            "endDate",
            "startDate"
        ],
        "ListScans": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccountConfiguration": [
            "encryptionConfig"
        ]
    },
    "codeguruprofiler": {
        "AddNotificationChannels": [
            "channels",
            "profilingGroupName"
        ],
        "BatchGetFrameMetricData": [
            "profilingGroupName"
        ],
        "ConfigureAgent": [
            "profilingGroupName"
        ],
        "CreateProfilingGroup": [
            "clientToken",
            "profilingGroupName"
        ],
        "DeleteProfilingGroup": [
            "profilingGroupName"
        ],
        "DescribeProfilingGroup": [
            "profilingGroupName"
        ],
        "GetFindingsReportAccountSummary": "",
        "GetNotificationConfiguration": [
            "profilingGroupName"
        ],
        "GetPolicy": [
            "profilingGroupName"
        ],
        "GetProfile": [
            "profilingGroupName"
        ],
        "GetRecommendations": [
            "endTime",
            "profilingGroupName",
            "startTime"
        ],
        "ListFindingsReports": [
            "endTime",
            "profilingGroupName",
            "startTime"
        ],
        "ListProfileTimes": [
            "endTime",
            "period",
            "profilingGroupName",
            "startTime"
        ],
        "ListProfilingGroups": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PostAgentProfile": [
            "agentProfile",
            "contentType",
            "profilingGroupName"
        ],
        "PutPermission": [
            "actionGroup",
            "principals",
            "profilingGroupName"
        ],
        "RemoveNotificationChannel": [
            "channelId",
            "profilingGroupName"
        ],
        "RemovePermission": [
            "actionGroup",
            "profilingGroupName",
            "revisionId"
        ],
        "SubmitFeedback": [
            "anomalyInstanceId",
            "profilingGroupName",
            "type"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateProfilingGroup": [
            "agentOrchestrationConfig",
            "profilingGroupName"
        ]
    },
    "codepipeline": {
        "AcknowledgeJob": [
            "jobId",
            "nonce"
        ],
        "AcknowledgeThirdPartyJob": [
            "jobId",
            "nonce",
            "clientToken"
        ],
        "CreateCustomActionType": [
            "category",
            "provider",
            "version",
            "inputArtifactDetails",
            "outputArtifactDetails"
        ],
        "CreatePipeline": [
            "pipeline"
        ],
        "DeleteCustomActionType": [
            "category",
            "provider",
            "version"
        ],
        "DeletePipeline": [
            "name"
        ],
        "DeleteWebhook": [
            "name"
        ],
        "DeregisterWebhookWithThirdParty": "",
        "DisableStageTransition": [
            "pipelineName",
            "stageName",
            "transitionType",
            "reason"
        ],
        "EnableStageTransition": [
            "pipelineName",
            "stageName",
            "transitionType"
        ],
        "GetActionType": [
            "category",
            "owner",
            "provider",
            "version"
        ],
        "GetJobDetails": [
            "jobId"
        ],
        "GetPipeline": [
            "name"
        ],
        "GetPipelineExecution": [
            "pipelineName",
            "pipelineExecutionId"
        ],
        "GetPipelineState": [
            "name"
        ],
        "GetThirdPartyJobDetails": [
            "jobId",
            "clientToken"
        ],
        "ListActionExecutions": [
            "pipelineName"
        ],
        "ListActionTypes": "",
        "ListPipelineExecutions": [
            "pipelineName"
        ],
        "ListPipelines": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWebhooks": "",
        "PollForJobs": [
            "actionTypeId"
        ],
        "PollForThirdPartyJobs": [
            "actionTypeId"
        ],
        "PutActionRevision": [
            "pipelineName",
            "stageName",
            "actionName",
            "actionRevision"
        ],
        "PutApprovalResult": [
            "pipelineName",
            "stageName",
            "actionName",
            "result",
            "token"
        ],
        "PutJobFailureResult": [
            "jobId",
            "failureDetails"
        ],
        "PutJobSuccessResult": [
            "jobId"
        ],
        "PutThirdPartyJobFailureResult": [
            "jobId",
            "clientToken",
            "failureDetails"
        ],
        "PutThirdPartyJobSuccessResult": [
            "jobId",
            "clientToken"
        ],
        "PutWebhook": [
            "webhook"
        ],
        "RegisterWebhookWithThirdParty": "",
        "RetryStageExecution": [
            "pipelineName",
            "stageName",
            "pipelineExecutionId",
            "retryMode"
        ],
        "StartPipelineExecution": [
            "name"
        ],
        "StopPipelineExecution": [
            "pipelineName",
            "pipelineExecutionId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateActionType": [
            "actionType"
        ],
        "UpdatePipeline": [
            "pipeline"
        ]
    },
    "codestar": {
        "AssociateTeamMember": [
            "projectId",
            "userArn",
            "projectRole"
        ],
        "CreateProject": [
            "name",
            "id"
        ],
        "CreateUserProfile": [
            "userArn",
            "displayName",
            "emailAddress"
        ],
        "DeleteProject": [
            "id"
        ],
        "DeleteUserProfile": [
            "userArn"
        ],
        "DescribeProject": [
            "id"
        ],
        "DescribeUserProfile": [
            "userArn"
        ],
        "DisassociateTeamMember": [
            "projectId",
            "userArn"
        ],
        "ListProjects": "",
        "ListResources": [
            "projectId"
        ],
        "ListTagsForProject": [
            "id"
        ],
        "ListTeamMembers": [
            "projectId"
        ],
        "ListUserProfiles": "",
        "TagProject": [
            "id",
            "tags"
        ],
        "UntagProject": [
            "id",
            "tags"
        ],
        "UpdateProject": [
            "id"
        ],
        "UpdateTeamMember": [
            "projectId",
            "userArn"
        ],
        "UpdateUserProfile": [
            "userArn"
        ]
    },
    "codestar-connections": {
        "CreateConnection": [
            "ConnectionName"
        ],
        "CreateHost": [
            "Name",
            "ProviderType",
            "ProviderEndpoint"
        ],
        "CreateRepositoryLink": [
            "ConnectionArn",
            "OwnerId",
            "RepositoryName"
        ],
        "CreateSyncConfiguration": [
            "Branch",
            "ConfigFile",
            "RepositoryLinkId",
            "ResourceName",
            "RoleArn",
            "SyncType"
        ],
        "DeleteConnection": [
            "ConnectionArn"
        ],
        "DeleteHost": [
            "HostArn"
        ],
        "DeleteRepositoryLink": [
            "RepositoryLinkId"
        ],
        "DeleteSyncConfiguration": [
            "SyncType",
            "ResourceName"
        ],
        "GetConnection": [
            "ConnectionArn"
        ],
        "GetHost": [
            "HostArn"
        ],
        "GetRepositoryLink": [
            "RepositoryLinkId"
        ],
        "GetRepositorySyncStatus": [
            "Branch",
            "RepositoryLinkId",
            "SyncType"
        ],
        "GetResourceSyncStatus": [
            "ResourceName",
            "SyncType"
        ],
        "GetSyncBlockerSummary": [
            "SyncType",
            "ResourceName"
        ],
        "GetSyncConfiguration": [
            "SyncType",
            "ResourceName"
        ],
        "ListConnections": "",
        "ListHosts": "",
        "ListRepositoryLinks": "",
        "ListRepositorySyncDefinitions": [
            "RepositoryLinkId",
            "SyncType"
        ],
        "ListSyncConfigurations": [
            "RepositoryLinkId",
            "SyncType"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateHost": [
            "HostArn"
        ],
        "UpdateRepositoryLink": [
            "RepositoryLinkId"
        ],
        "UpdateSyncBlocker": [
            "Id",
            "SyncType",
            "ResourceName",
            "ResolvedReason"
        ],
        "UpdateSyncConfiguration": [
            "ResourceName",
            "SyncType"
        ]
    },
    "codestar-notifications": {
        "CreateNotificationRule": [
            "Name",
            "EventTypeIds",
            "Resource",
            "Targets",
            "DetailType"
        ],
        "DeleteNotificationRule": [
            "Arn"
        ],
        "DeleteTarget": [
            "TargetAddress"
        ],
        "DescribeNotificationRule": [
            "Arn"
        ],
        "ListEventTypes": "",
        "ListNotificationRules": "",
        "ListTagsForResource": [
            "Arn"
        ],
        "ListTargets": "",
        "Subscribe": [
            "Arn",
            "Target"
        ],
        "TagResource": [
            "Arn",
            "Tags"
        ],
        "Unsubscribe": [
            "Arn",
            "TargetAddress"
        ],
        "UntagResource": [
            "Arn",
            "TagKeys"
        ],
        "UpdateNotificationRule": [
            "Arn"
        ]
    },
    "cognito-identity": {
        "CreateIdentityPool": [
            "IdentityPoolName",
            "AllowUnauthenticatedIdentities"
        ],
        "DeleteIdentities": [
            "IdentityIdsToDelete"
        ],
        "DeleteIdentityPool": [
            "IdentityPoolId"
        ],
        "DescribeIdentity": [
            "IdentityId"
        ],
        "DescribeIdentityPool": [
            "IdentityPoolId"
        ],
        "GetCredentialsForIdentity": [
            "IdentityId"
        ],
        "GetId": [
            "IdentityPoolId"
        ],
        "GetIdentityPoolRoles": [
            "IdentityPoolId"
        ],
        "GetOpenIdToken": [
            "IdentityId"
        ],
        "GetOpenIdTokenForDeveloperIdentity": [
            "IdentityPoolId",
            "Logins"
        ],
        "GetPrincipalTagAttributeMap": [
            "IdentityPoolId",
            "IdentityProviderName"
        ],
        "ListIdentities": [
            "IdentityPoolId",
            "MaxResults"
        ],
        "ListIdentityPools": [
            "MaxResults"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "LookupDeveloperIdentity": [
            "IdentityPoolId"
        ],
        "MergeDeveloperIdentities": [
            "SourceUserIdentifier",
            "DestinationUserIdentifier",
            "DeveloperProviderName",
            "IdentityPoolId"
        ],
        "SetIdentityPoolRoles": [
            "IdentityPoolId",
            "Roles"
        ],
        "SetPrincipalTagAttributeMap": [
            "IdentityPoolId",
            "IdentityProviderName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UnlinkDeveloperIdentity": [
            "IdentityId",
            "IdentityPoolId",
            "DeveloperProviderName",
            "DeveloperUserIdentifier"
        ],
        "UnlinkIdentity": [
            "IdentityId",
            "Logins",
            "LoginsToRemove"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateIdentityPool": ""
    },
    "cognito-idp": {
        "AddCustomAttributes": [
            "UserPoolId",
            "CustomAttributes"
        ],
        "AdminAddUserToGroup": [
            "UserPoolId",
            "Username",
            "GroupName"
        ],
        "AdminConfirmSignUp": [
            "UserPoolId",
            "Username"
        ],
        "AdminCreateUser": [
            "UserPoolId",
            "Username"
        ],
        "AdminDeleteUser": [
            "UserPoolId",
            "Username"
        ],
        "AdminDeleteUserAttributes": [
            "UserPoolId",
            "Username",
            "UserAttributeNames"
        ],
        "AdminDisableProviderForUser": [
            "UserPoolId",
            "User"
        ],
        "AdminDisableUser": [
            "UserPoolId",
            "Username"
        ],
        "AdminEnableUser": [
            "UserPoolId",
            "Username"
        ],
        "AdminForgetDevice": [
            "UserPoolId",
            "Username",
            "DeviceKey"
        ],
        "AdminGetDevice": [
            "DeviceKey",
            "UserPoolId",
            "Username"
        ],
        "AdminGetUser": [
            "UserPoolId",
            "Username"
        ],
        "AdminInitiateAuth": [
            "UserPoolId",
            "ClientId",
            "AuthFlow"
        ],
        "AdminLinkProviderForUser": [
            "UserPoolId",
            "DestinationUser",
            "SourceUser"
        ],
        "AdminListDevices": [
            "UserPoolId",
            "Username"
        ],
        "AdminListGroupsForUser": [
            "Username",
            "UserPoolId"
        ],
        "AdminListUserAuthEvents": [
            "UserPoolId",
            "Username"
        ],
        "AdminRemoveUserFromGroup": [
            "UserPoolId",
            "Username",
            "GroupName"
        ],
        "AdminResetUserPassword": [
            "UserPoolId",
            "Username"
        ],
        "AdminRespondToAuthChallenge": [
            "UserPoolId",
            "ClientId",
            "ChallengeName"
        ],
        "AdminSetUserMFAPreference": [
            "Username",
            "UserPoolId"
        ],
        "AdminSetUserPassword": [
            "UserPoolId",
            "Username",
            "Password"
        ],
        "AdminSetUserSettings": [
            "UserPoolId",
            "Username",
            "MFAOptions"
        ],
        "AdminUpdateAuthEventFeedback": [
            "UserPoolId",
            "Username",
            "EventId",
            "FeedbackValue"
        ],
        "AdminUpdateDeviceStatus": [
            "UserPoolId",
            "Username",
            "DeviceKey"
        ],
        "AdminUpdateUserAttributes": [
            "UserPoolId",
            "Username",
            "UserAttributes"
        ],
        "AdminUserGlobalSignOut": [
            "UserPoolId",
            "Username"
        ],
        "AssociateSoftwareToken": "",
        "ChangePassword": [
            "PreviousPassword",
            "ProposedPassword",
            "AccessToken"
        ],
        "ConfirmDevice": [
            "AccessToken",
            "DeviceKey"
        ],
        "ConfirmForgotPassword": [
            "ClientId",
            "Username",
            "ConfirmationCode",
            "Password"
        ],
        "ConfirmSignUp": [
            "ClientId",
            "Username",
            "ConfirmationCode"
        ],
        "CreateGroup": [
            "GroupName",
            "UserPoolId"
        ],
        "CreateIdentityProvider": [
            "UserPoolId",
            "ProviderName",
            "ProviderType",
            "ProviderDetails"
        ],
        "CreateResourceServer": [
            "UserPoolId",
            "Identifier",
            "Name"
        ],
        "CreateUserImportJob": [
            "JobName",
            "UserPoolId",
            "CloudWatchLogsRoleArn"
        ],
        "CreateUserPool": [
            "PoolName"
        ],
        "CreateUserPoolClient": [
            "UserPoolId",
            "ClientName"
        ],
        "CreateUserPoolDomain": [
            "Domain",
            "UserPoolId"
        ],
        "DeleteGroup": [
            "GroupName",
            "UserPoolId"
        ],
        "DeleteIdentityProvider": [
            "UserPoolId",
            "ProviderName"
        ],
        "DeleteResourceServer": [
            "UserPoolId",
            "Identifier"
        ],
        "DeleteUser": [
            "AccessToken"
        ],
        "DeleteUserAttributes": [
            "UserAttributeNames",
            "AccessToken"
        ],
        "DeleteUserPool": [
            "UserPoolId"
        ],
        "DeleteUserPoolClient": [
            "UserPoolId",
            "ClientId"
        ],
        "DeleteUserPoolDomain": [
            "Domain",
            "UserPoolId"
        ],
        "DescribeIdentityProvider": [
            "UserPoolId",
            "ProviderName"
        ],
        "DescribeResourceServer": [
            "UserPoolId",
            "Identifier"
        ],
        "DescribeRiskConfiguration": [
            "UserPoolId"
        ],
        "DescribeUserImportJob": [
            "UserPoolId",
            "JobId"
        ],
        "DescribeUserPool": [
            "UserPoolId"
        ],
        "DescribeUserPoolClient": [
            "UserPoolId",
            "ClientId"
        ],
        "DescribeUserPoolDomain": [
            "Domain"
        ],
        "ForgetDevice": [
            "DeviceKey"
        ],
        "ForgotPassword": [
            "ClientId",
            "Username"
        ],
        "GetCSVHeader": [
            "UserPoolId"
        ],
        "GetDevice": [
            "DeviceKey"
        ],
        "GetGroup": [
            "GroupName",
            "UserPoolId"
        ],
        "GetIdentityProviderByIdentifier": [
            "UserPoolId",
            "IdpIdentifier"
        ],
        "GetLogDeliveryConfiguration": [
            "UserPoolId"
        ],
        "GetSigningCertificate": [
            "UserPoolId"
        ],
        "GetUICustomization": [
            "UserPoolId"
        ],
        "GetUser": [
            "AccessToken"
        ],
        "GetUserAttributeVerificationCode": [
            "AccessToken",
            "AttributeName"
        ],
        "GetUserPoolMfaConfig": [
            "UserPoolId"
        ],
        "GlobalSignOut": [
            "AccessToken"
        ],
        "InitiateAuth": [
            "AuthFlow",
            "ClientId"
        ],
        "ListDevices": [
            "AccessToken"
        ],
        "ListGroups": [
            "UserPoolId"
        ],
        "ListIdentityProviders": [
            "UserPoolId"
        ],
        "ListResourceServers": [
            "UserPoolId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListUserImportJobs": [
            "UserPoolId",
            "MaxResults"
        ],
        "ListUserPoolClients": [
            "UserPoolId"
        ],
        "ListUserPools": [
            "MaxResults"
        ],
        "ListUsers": [
            "UserPoolId"
        ],
        "ListUsersInGroup": [
            "UserPoolId",
            "GroupName"
        ],
        "ResendConfirmationCode": [
            "ClientId",
            "Username"
        ],
        "RespondToAuthChallenge": [
            "ClientId",
            "ChallengeName"
        ],
        "RevokeToken": [
            "Token",
            "ClientId"
        ],
        "SetLogDeliveryConfiguration": [
            "UserPoolId",
            "LogConfigurations"
        ],
        "SetRiskConfiguration": [
            "UserPoolId"
        ],
        "SetUICustomization": [
            "UserPoolId"
        ],
        "SetUserMFAPreference": [
            "AccessToken"
        ],
        "SetUserPoolMfaConfig": [
            "UserPoolId"
        ],
        "SetUserSettings": [
            "AccessToken",
            "MFAOptions"
        ],
        "SignUp": [
            "ClientId",
            "Username",
            "Password"
        ],
        "StartUserImportJob": [
            "UserPoolId",
            "JobId"
        ],
        "StopUserImportJob": [
            "UserPoolId",
            "JobId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAuthEventFeedback": [
            "UserPoolId",
            "Username",
            "EventId",
            "FeedbackToken",
            "FeedbackValue"
        ],
        "UpdateDeviceStatus": [
            "AccessToken",
            "DeviceKey"
        ],
        "UpdateGroup": [
            "GroupName",
            "UserPoolId"
        ],
        "UpdateIdentityProvider": [
            "UserPoolId",
            "ProviderName"
        ],
        "UpdateResourceServer": [
            "UserPoolId",
            "Identifier",
            "Name"
        ],
        "UpdateUserAttributes": [
            "UserAttributes",
            "AccessToken"
        ],
        "UpdateUserPool": [
            "UserPoolId"
        ],
        "UpdateUserPoolClient": [
            "UserPoolId",
            "ClientId"
        ],
        "UpdateUserPoolDomain": [
            "Domain",
            "UserPoolId",
            "CustomDomainConfig"
        ],
        "VerifySoftwareToken": [
            "UserCode"
        ],
        "VerifyUserAttribute": [
            "AccessToken",
            "AttributeName",
            "Code"
        ]
    },
    "cognito-sync": {
        "BulkPublish": [
            "IdentityPoolId"
        ],
        "DeleteDataset": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName"
        ],
        "DescribeDataset": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName"
        ],
        "DescribeIdentityPoolUsage": [
            "IdentityPoolId"
        ],
        "DescribeIdentityUsage": [
            "IdentityPoolId",
            "IdentityId"
        ],
        "GetBulkPublishDetails": [
            "IdentityPoolId"
        ],
        "GetCognitoEvents": [
            "IdentityPoolId"
        ],
        "GetIdentityPoolConfiguration": [
            "IdentityPoolId"
        ],
        "ListDatasets": [
            "IdentityId",
            "IdentityPoolId"
        ],
        "ListIdentityPoolUsage": "",
        "ListRecords": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName"
        ],
        "RegisterDevice": [
            "IdentityPoolId",
            "IdentityId",
            "Platform",
            "Token"
        ],
        "SetCognitoEvents": [
            "IdentityPoolId",
            "Events"
        ],
        "SetIdentityPoolConfiguration": [
            "IdentityPoolId"
        ],
        "SubscribeToDataset": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName",
            "DeviceId"
        ],
        "UnsubscribeFromDataset": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName",
            "DeviceId"
        ],
        "UpdateRecords": [
            "IdentityPoolId",
            "IdentityId",
            "DatasetName",
            "SyncSessionToken"
        ]
    },
    "comprehend": {
        "BatchDetectDominantLanguage": [
            "TextList"
        ],
        "BatchDetectEntities": [
            "TextList",
            "LanguageCode"
        ],
        "BatchDetectKeyPhrases": [
            "TextList",
            "LanguageCode"
        ],
        "BatchDetectSentiment": [
            "TextList",
            "LanguageCode"
        ],
        "BatchDetectSyntax": [
            "TextList",
            "LanguageCode"
        ],
        "BatchDetectTargetedSentiment": [
            "TextList",
            "LanguageCode"
        ],
        "ClassifyDocument": [
            "EndpointArn"
        ],
        "ContainsPiiEntities": [
            "Text",
            "LanguageCode"
        ],
        "CreateDataset": [
            "FlywheelArn",
            "DatasetName",
            "InputDataConfig"
        ],
        "CreateDocumentClassifier": [
            "DocumentClassifierName",
            "DataAccessRoleArn",
            "InputDataConfig",
            "LanguageCode"
        ],
        "CreateEndpoint": [
            "EndpointName",
            "DesiredInferenceUnits"
        ],
        "CreateEntityRecognizer": [
            "RecognizerName",
            "DataAccessRoleArn",
            "InputDataConfig",
            "LanguageCode"
        ],
        "CreateFlywheel": [
            "FlywheelName",
            "DataAccessRoleArn",
            "DataLakeS3Uri"
        ],
        "DeleteDocumentClassifier": [
            "DocumentClassifierArn"
        ],
        "DeleteEndpoint": [
            "EndpointArn"
        ],
        "DeleteEntityRecognizer": [
            "EntityRecognizerArn"
        ],
        "DeleteFlywheel": [
            "FlywheelArn"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DescribeDataset": [
            "DatasetArn"
        ],
        "DescribeDocumentClassificationJob": [
            "JobId"
        ],
        "DescribeDocumentClassifier": [
            "DocumentClassifierArn"
        ],
        "DescribeDominantLanguageDetectionJob": [
            "JobId"
        ],
        "DescribeEndpoint": [
            "EndpointArn"
        ],
        "DescribeEntitiesDetectionJob": [
            "JobId"
        ],
        "DescribeEntityRecognizer": [
            "EntityRecognizerArn"
        ],
        "DescribeEventsDetectionJob": [
            "JobId"
        ],
        "DescribeFlywheel": [
            "FlywheelArn"
        ],
        "DescribeFlywheelIteration": [
            "FlywheelArn",
            "FlywheelIterationId"
        ],
        "DescribeKeyPhrasesDetectionJob": [
            "JobId"
        ],
        "DescribePiiEntitiesDetectionJob": [
            "JobId"
        ],
        "DescribeResourcePolicy": [
            "ResourceArn"
        ],
        "DescribeSentimentDetectionJob": [
            "JobId"
        ],
        "DescribeTargetedSentimentDetectionJob": [
            "JobId"
        ],
        "DescribeTopicsDetectionJob": [
            "JobId"
        ],
        "DetectDominantLanguage": [
            "Text"
        ],
        "DetectEntities": "",
        "DetectKeyPhrases": [
            "Text",
            "LanguageCode"
        ],
        "DetectPiiEntities": [
            "Text",
            "LanguageCode"
        ],
        "DetectSentiment": [
            "Text",
            "LanguageCode"
        ],
        "DetectSyntax": [
            "Text",
            "LanguageCode"
        ],
        "DetectTargetedSentiment": [
            "Text",
            "LanguageCode"
        ],
        "DetectToxicContent": [
            "TextSegments",
            "LanguageCode"
        ],
        "ImportModel": [
            "SourceModelArn"
        ],
        "ListDatasets": "",
        "ListDocumentClassificationJobs": "",
        "ListDocumentClassifierSummaries": "",
        "ListDocumentClassifiers": "",
        "ListDominantLanguageDetectionJobs": "",
        "ListEndpoints": "",
        "ListEntitiesDetectionJobs": "",
        "ListEntityRecognizerSummaries": "",
        "ListEntityRecognizers": "",
        "ListEventsDetectionJobs": "",
        "ListFlywheelIterationHistory": [
            "FlywheelArn"
        ],
        "ListFlywheels": "",
        "ListKeyPhrasesDetectionJobs": "",
        "ListPiiEntitiesDetectionJobs": "",
        "ListSentimentDetectionJobs": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTargetedSentimentDetectionJobs": "",
        "ListTopicsDetectionJobs": "",
        "PutResourcePolicy": [
            "ResourceArn",
            "ResourcePolicy"
        ],
        "StartDocumentClassificationJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn"
        ],
        "StartDominantLanguageDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn"
        ],
        "StartEntitiesDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartEventsDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode",
            "TargetEventTypes"
        ],
        "StartFlywheelIteration": [
            "FlywheelArn"
        ],
        "StartKeyPhrasesDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartPiiEntitiesDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "Mode",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartSentimentDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartTargetedSentimentDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartTopicsDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn"
        ],
        "StopDominantLanguageDetectionJob": [
            "JobId"
        ],
        "StopEntitiesDetectionJob": [
            "JobId"
        ],
        "StopEventsDetectionJob": [
            "JobId"
        ],
        "StopKeyPhrasesDetectionJob": [
            "JobId"
        ],
        "StopPiiEntitiesDetectionJob": [
            "JobId"
        ],
        "StopSentimentDetectionJob": [
            "JobId"
        ],
        "StopTargetedSentimentDetectionJob": [
            "JobId"
        ],
        "StopTrainingDocumentClassifier": [
            "DocumentClassifierArn"
        ],
        "StopTrainingEntityRecognizer": [
            "EntityRecognizerArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateEndpoint": [
            "EndpointArn"
        ],
        "UpdateFlywheel": [
            "FlywheelArn"
        ]
    },
    "comprehendmedical": {
        "DescribeEntitiesDetectionV2Job": [
            "JobId"
        ],
        "DescribeICD10CMInferenceJob": [
            "JobId"
        ],
        "DescribePHIDetectionJob": [
            "JobId"
        ],
        "DescribeRxNormInferenceJob": [
            "JobId"
        ],
        "DescribeSNOMEDCTInferenceJob": [
            "JobId"
        ],
        "DetectEntities": [
            "Text"
        ],
        "DetectEntitiesV2": [
            "Text"
        ],
        "DetectPHI": [
            "Text"
        ],
        "InferICD10CM": [
            "Text"
        ],
        "InferRxNorm": [
            "Text"
        ],
        "InferSNOMEDCT": [
            "Text"
        ],
        "ListEntitiesDetectionV2Jobs": "",
        "ListICD10CMInferenceJobs": "",
        "ListPHIDetectionJobs": "",
        "ListRxNormInferenceJobs": "",
        "ListSNOMEDCTInferenceJobs": "",
        "StartEntitiesDetectionV2Job": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartICD10CMInferenceJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartPHIDetectionJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartRxNormInferenceJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StartSNOMEDCTInferenceJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "LanguageCode"
        ],
        "StopEntitiesDetectionV2Job": [
            "JobId"
        ],
        "StopICD10CMInferenceJob": [
            "JobId"
        ],
        "StopPHIDetectionJob": [
            "JobId"
        ],
        "StopRxNormInferenceJob": [
            "JobId"
        ],
        "StopSNOMEDCTInferenceJob": [
            "JobId"
        ]
    },
    "compute-optimizer": {
        "DeleteRecommendationPreferences": [
            "resourceType",
            "recommendationPreferenceNames"
        ],
        "DescribeRecommendationExportJobs": "",
        "ExportAutoScalingGroupRecommendations": [
            "s3DestinationConfig"
        ],
        "ExportEBSVolumeRecommendations": [
            "s3DestinationConfig"
        ],
        "ExportEC2InstanceRecommendations": [
            "s3DestinationConfig"
        ],
        "ExportECSServiceRecommendations": [
            "s3DestinationConfig"
        ],
        "ExportLambdaFunctionRecommendations": [
            "s3DestinationConfig"
        ],
        "ExportLicenseRecommendations": [
            "s3DestinationConfig"
        ],
        "GetAutoScalingGroupRecommendations": "",
        "GetEBSVolumeRecommendations": "",
        "GetEC2InstanceRecommendations": "",
        "GetEC2RecommendationProjectedMetrics": [
            "instanceArn",
            "stat",
            "period",
            "startTime",
            "endTime"
        ],
        "GetECSServiceRecommendationProjectedMetrics": [
            "serviceArn",
            "stat",
            "period",
            "startTime",
            "endTime"
        ],
        "GetECSServiceRecommendations": "",
        "GetEffectiveRecommendationPreferences": [
            "resourceArn"
        ],
        "GetEnrollmentStatus": "",
        "GetEnrollmentStatusesForOrganization": "",
        "GetLambdaFunctionRecommendations": "",
        "GetLicenseRecommendations": "",
        "GetRecommendationPreferences": [
            "resourceType"
        ],
        "GetRecommendationSummaries": "",
        "PutRecommendationPreferences": [
            "resourceType"
        ],
        "UpdateEnrollmentStatus": [
            "status"
        ]
    },
    "config": {
        "BatchGetAggregateResourceConfig": [
            "ConfigurationAggregatorName",
            "ResourceIdentifiers"
        ],
        "BatchGetResourceConfig": [
            "resourceKeys"
        ],
        "DeleteAggregationAuthorization": [
            "AuthorizedAccountId",
            "AuthorizedAwsRegion"
        ],
        "DeleteConfigRule": [
            "ConfigRuleName"
        ],
        "DeleteConfigurationAggregator": [
            "ConfigurationAggregatorName"
        ],
        "DeleteConfigurationRecorder": [
            "ConfigurationRecorderName"
        ],
        "DeleteConformancePack": [
            "ConformancePackName"
        ],
        "DeleteDeliveryChannel": [
            "DeliveryChannelName"
        ],
        "DeleteEvaluationResults": [
            "ConfigRuleName"
        ],
        "DeleteOrganizationConfigRule": [
            "OrganizationConfigRuleName"
        ],
        "DeleteOrganizationConformancePack": [
            "OrganizationConformancePackName"
        ],
        "DeletePendingAggregationRequest": [
            "RequesterAccountId",
            "RequesterAwsRegion"
        ],
        "DeleteRemediationConfiguration": [
            "ConfigRuleName"
        ],
        "DeleteRemediationExceptions": [
            "ConfigRuleName",
            "ResourceKeys"
        ],
        "DeleteResourceConfig": [
            "ResourceType",
            "ResourceId"
        ],
        "DeleteRetentionConfiguration": [
            "RetentionConfigurationName"
        ],
        "DeleteStoredQuery": [
            "QueryName"
        ],
        "DeliverConfigSnapshot": [
            "deliveryChannelName"
        ],
        "DescribeAggregateComplianceByConfigRules": [
            "ConfigurationAggregatorName"
        ],
        "DescribeAggregateComplianceByConformancePacks": [
            "ConfigurationAggregatorName"
        ],
        "DescribeAggregationAuthorizations": "",
        "DescribeComplianceByConfigRule": "",
        "DescribeComplianceByResource": "",
        "DescribeConfigRuleEvaluationStatus": "",
        "DescribeConfigRules": "",
        "DescribeConfigurationAggregatorSourcesStatus": [
            "ConfigurationAggregatorName"
        ],
        "DescribeConfigurationAggregators": "",
        "DescribeConfigurationRecorderStatus": "",
        "DescribeConfigurationRecorders": "",
        "DescribeConformancePackCompliance": [
            "ConformancePackName"
        ],
        "DescribeConformancePackStatus": "",
        "DescribeConformancePacks": "",
        "DescribeDeliveryChannelStatus": "",
        "DescribeDeliveryChannels": "",
        "DescribeOrganizationConfigRuleStatuses": "",
        "DescribeOrganizationConfigRules": "",
        "DescribeOrganizationConformancePackStatuses": "",
        "DescribeOrganizationConformancePacks": "",
        "DescribePendingAggregationRequests": "",
        "DescribeRemediationConfigurations": [
            "ConfigRuleNames"
        ],
        "DescribeRemediationExceptions": [
            "ConfigRuleName"
        ],
        "DescribeRemediationExecutionStatus": [
            "ConfigRuleName"
        ],
        "DescribeRetentionConfigurations": "",
        "GetAggregateComplianceDetailsByConfigRule": [
            "ConfigurationAggregatorName",
            "ConfigRuleName",
            "AccountId",
            "AwsRegion"
        ],
        "GetAggregateConfigRuleComplianceSummary": [
            "ConfigurationAggregatorName"
        ],
        "GetAggregateConformancePackComplianceSummary": [
            "ConfigurationAggregatorName"
        ],
        "GetAggregateDiscoveredResourceCounts": [
            "ConfigurationAggregatorName"
        ],
        "GetAggregateResourceConfig": [
            "ConfigurationAggregatorName",
            "ResourceIdentifier"
        ],
        "GetComplianceDetailsByConfigRule": [
            "ConfigRuleName"
        ],
        "GetComplianceDetailsByResource": "",
        "GetComplianceSummaryByConfigRule": "",
        "GetComplianceSummaryByResourceType": "",
        "GetConformancePackComplianceDetails": [
            "ConformancePackName"
        ],
        "GetConformancePackComplianceSummary": [
            "ConformancePackNames"
        ],
        "GetCustomRulePolicy": "",
        "GetDiscoveredResourceCounts": "",
        "GetOrganizationConfigRuleDetailedStatus": [
            "OrganizationConfigRuleName"
        ],
        "GetOrganizationConformancePackDetailedStatus": [
            "OrganizationConformancePackName"
        ],
        "GetOrganizationCustomRulePolicy": [
            "OrganizationConfigRuleName"
        ],
        "GetResourceConfigHistory": [
            "resourceType",
            "resourceId"
        ],
        "GetResourceEvaluationSummary": [
            "ResourceEvaluationId"
        ],
        "GetStoredQuery": [
            "QueryName"
        ],
        "ListAggregateDiscoveredResources": [
            "ConfigurationAggregatorName",
            "ResourceType"
        ],
        "ListConformancePackComplianceScores": "",
        "ListDiscoveredResources": [
            "resourceType"
        ],
        "ListResourceEvaluations": "",
        "ListStoredQueries": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutAggregationAuthorization": [
            "AuthorizedAccountId",
            "AuthorizedAwsRegion"
        ],
        "PutConfigRule": [
            "ConfigRule"
        ],
        "PutConfigurationAggregator": [
            "ConfigurationAggregatorName"
        ],
        "PutConfigurationRecorder": [
            "ConfigurationRecorder"
        ],
        "PutConformancePack": [
            "ConformancePackName"
        ],
        "PutDeliveryChannel": [
            "DeliveryChannel"
        ],
        "PutEvaluations": [
            "ResultToken"
        ],
        "PutExternalEvaluation": [
            "ConfigRuleName",
            "ExternalEvaluation"
        ],
        "PutOrganizationConfigRule": [
            "OrganizationConfigRuleName"
        ],
        "PutOrganizationConformancePack": [
            "OrganizationConformancePackName"
        ],
        "PutRemediationConfigurations": [
            "RemediationConfigurations"
        ],
        "PutRemediationExceptions": [
            "ConfigRuleName",
            "ResourceKeys"
        ],
        "PutResourceConfig": [
            "ResourceType",
            "SchemaVersionId",
            "ResourceId",
            "Configuration"
        ],
        "PutRetentionConfiguration": [
            "RetentionPeriodInDays"
        ],
        "PutStoredQuery": [
            "StoredQuery"
        ],
        "SelectAggregateResourceConfig": [
            "Expression",
            "ConfigurationAggregatorName"
        ],
        "SelectResourceConfig": [
            "Expression"
        ],
        "StartConfigRulesEvaluation": "",
        "StartConfigurationRecorder": [
            "ConfigurationRecorderName"
        ],
        "StartRemediationExecution": [
            "ConfigRuleName",
            "ResourceKeys"
        ],
        "StartResourceEvaluation": [
            "ResourceDetails",
            "EvaluationMode"
        ],
        "StopConfigurationRecorder": [
            "ConfigurationRecorderName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ]
    },
    "connect": {
        "ActivateEvaluationForm": [
            "InstanceId",
            "EvaluationFormId",
            "EvaluationFormVersion"
        ],
        "AssociateAnalyticsDataSet": [
            "InstanceId",
            "DataSetId"
        ],
        "AssociateApprovedOrigin": [
            "InstanceId",
            "Origin"
        ],
        "AssociateBot": [
            "InstanceId"
        ],
        "AssociateDefaultVocabulary": [
            "InstanceId",
            "LanguageCode"
        ],
        "AssociateFlow": [
            "InstanceId",
            "ResourceId",
            "FlowId",
            "ResourceType"
        ],
        "AssociateInstanceStorageConfig": [
            "InstanceId",
            "ResourceType",
            "StorageConfig"
        ],
        "AssociateLambdaFunction": [
            "InstanceId",
            "FunctionArn"
        ],
        "AssociateLexBot": [
            "InstanceId",
            "LexBot"
        ],
        "AssociatePhoneNumberContactFlow": [
            "PhoneNumberId",
            "InstanceId",
            "ContactFlowId"
        ],
        "AssociateQueueQuickConnects": [
            "InstanceId",
            "QueueId",
            "QuickConnectIds"
        ],
        "AssociateRoutingProfileQueues": [
            "InstanceId",
            "RoutingProfileId",
            "QueueConfigs"
        ],
        "AssociateSecurityKey": [
            "InstanceId",
            "Key"
        ],
        "AssociateTrafficDistributionGroupUser": [
            "TrafficDistributionGroupId",
            "UserId",
            "InstanceId"
        ],
        "AssociateUserProficiencies": [
            "InstanceId",
            "UserId",
            "UserProficiencies"
        ],
        "BatchAssociateAnalyticsDataSet": [
            "InstanceId",
            "DataSetIds"
        ],
        "BatchDisassociateAnalyticsDataSet": [
            "InstanceId",
            "DataSetIds"
        ],
        "BatchGetFlowAssociation": [
            "InstanceId",
            "ResourceIds"
        ],
        "BatchPutContact": [
            "InstanceId",
            "ContactDataRequestList"
        ],
        "ClaimPhoneNumber": [
            "PhoneNumber"
        ],
        "CreateAgentStatus": [
            "InstanceId",
            "Name",
            "State"
        ],
        "CreateContactFlow": [
            "InstanceId",
            "Name",
            "Type",
            "Content"
        ],
        "CreateContactFlowModule": [
            "InstanceId",
            "Name",
            "Content"
        ],
        "CreateEvaluationForm": [
            "InstanceId",
            "Title",
            "Items"
        ],
        "CreateHoursOfOperation": [
            "InstanceId",
            "Name",
            "TimeZone",
            "Config"
        ],
        "CreateInstance": [
            "IdentityManagementType",
            "InboundCallsEnabled",
            "OutboundCallsEnabled"
        ],
        "CreateIntegrationAssociation": [
            "InstanceId",
            "IntegrationType",
            "IntegrationArn"
        ],
        "CreateParticipant": [
            "InstanceId",
            "ContactId",
            "ParticipantDetails"
        ],
        "CreatePersistentContactAssociation": [
            "InstanceId",
            "InitialContactId",
            "RehydrationType",
            "SourceContactId"
        ],
        "CreatePredefinedAttribute": [
            "InstanceId",
            "Name",
            "Values"
        ],
        "CreatePrompt": [
            "InstanceId",
            "Name",
            "S3Uri"
        ],
        "CreateQueue": [
            "InstanceId",
            "Name",
            "HoursOfOperationId"
        ],
        "CreateQuickConnect": [
            "InstanceId",
            "Name",
            "QuickConnectConfig"
        ],
        "CreateRoutingProfile": [
            "InstanceId",
            "Name",
            "Description",
            "DefaultOutboundQueueId",
            "MediaConcurrencies"
        ],
        "CreateRule": [
            "InstanceId",
            "Name",
            "TriggerEventSource",
            "Function",
            "Actions",
            "PublishStatus"
        ],
        "CreateSecurityProfile": [
            "SecurityProfileName",
            "InstanceId"
        ],
        "CreateTaskTemplate": [
            "InstanceId",
            "Name",
            "Fields"
        ],
        "CreateTrafficDistributionGroup": [
            "Name",
            "InstanceId"
        ],
        "CreateUseCase": [
            "InstanceId",
            "IntegrationAssociationId",
            "UseCaseType"
        ],
        "CreateUser": [
            "Username",
            "PhoneConfig",
            "SecurityProfileIds",
            "RoutingProfileId",
            "InstanceId"
        ],
        "CreateUserHierarchyGroup": [
            "Name",
            "InstanceId"
        ],
        "CreateView": [
            "InstanceId",
            "Status",
            "Content",
            "Name"
        ],
        "CreateViewVersion": [
            "InstanceId",
            "ViewId"
        ],
        "CreateVocabulary": [
            "InstanceId",
            "VocabularyName",
            "LanguageCode",
            "Content"
        ],
        "DeactivateEvaluationForm": [
            "InstanceId",
            "EvaluationFormId",
            "EvaluationFormVersion"
        ],
        "DeleteContactEvaluation": [
            "InstanceId",
            "EvaluationId"
        ],
        "DeleteContactFlow": [
            "InstanceId",
            "ContactFlowId"
        ],
        "DeleteContactFlowModule": [
            "InstanceId",
            "ContactFlowModuleId"
        ],
        "DeleteEvaluationForm": [
            "InstanceId",
            "EvaluationFormId"
        ],
        "DeleteHoursOfOperation": [
            "InstanceId",
            "HoursOfOperationId"
        ],
        "DeleteInstance": [
            "InstanceId"
        ],
        "DeleteIntegrationAssociation": [
            "InstanceId",
            "IntegrationAssociationId"
        ],
        "DeletePredefinedAttribute": [
            "InstanceId",
            "Name"
        ],
        "DeletePrompt": [
            "InstanceId",
            "PromptId"
        ],
        "DeleteQueue": [
            "InstanceId",
            "QueueId"
        ],
        "DeleteQuickConnect": [
            "InstanceId",
            "QuickConnectId"
        ],
        "DeleteRoutingProfile": [
            "InstanceId",
            "RoutingProfileId"
        ],
        "DeleteRule": [
            "InstanceId",
            "RuleId"
        ],
        "DeleteSecurityProfile": [
            "InstanceId",
            "SecurityProfileId"
        ],
        "DeleteTaskTemplate": [
            "InstanceId",
            "TaskTemplateId"
        ],
        "DeleteTrafficDistributionGroup": [
            "TrafficDistributionGroupId"
        ],
        "DeleteUseCase": [
            "InstanceId",
            "IntegrationAssociationId",
            "UseCaseId"
        ],
        "DeleteUser": [
            "InstanceId",
            "UserId"
        ],
        "DeleteUserHierarchyGroup": [
            "HierarchyGroupId",
            "InstanceId"
        ],
        "DeleteView": [
            "InstanceId",
            "ViewId"
        ],
        "DeleteViewVersion": [
            "InstanceId",
            "ViewId",
            "ViewVersion"
        ],
        "DeleteVocabulary": [
            "InstanceId",
            "VocabularyId"
        ],
        "DescribeAgentStatus": [
            "InstanceId",
            "AgentStatusId"
        ],
        "DescribeContact": [
            "InstanceId",
            "ContactId"
        ],
        "DescribeContactEvaluation": [
            "InstanceId",
            "EvaluationId"
        ],
        "DescribeContactFlow": [
            "InstanceId",
            "ContactFlowId"
        ],
        "DescribeContactFlowModule": [
            "InstanceId",
            "ContactFlowModuleId"
        ],
        "DescribeEvaluationForm": [
            "InstanceId",
            "EvaluationFormId"
        ],
        "DescribeHoursOfOperation": [
            "InstanceId",
            "HoursOfOperationId"
        ],
        "DescribeInstance": [
            "InstanceId"
        ],
        "DescribeInstanceAttribute": [
            "InstanceId",
            "AttributeType"
        ],
        "DescribeInstanceStorageConfig": [
            "InstanceId",
            "AssociationId",
            "ResourceType"
        ],
        "DescribePhoneNumber": [
            "PhoneNumberId"
        ],
        "DescribePredefinedAttribute": [
            "InstanceId",
            "Name"
        ],
        "DescribePrompt": [
            "InstanceId",
            "PromptId"
        ],
        "DescribeQueue": [
            "InstanceId",
            "QueueId"
        ],
        "DescribeQuickConnect": [
            "InstanceId",
            "QuickConnectId"
        ],
        "DescribeRoutingProfile": [
            "InstanceId",
            "RoutingProfileId"
        ],
        "DescribeRule": [
            "InstanceId",
            "RuleId"
        ],
        "DescribeSecurityProfile": [
            "SecurityProfileId",
            "InstanceId"
        ],
        "DescribeTrafficDistributionGroup": [
            "TrafficDistributionGroupId"
        ],
        "DescribeUser": [
            "UserId",
            "InstanceId"
        ],
        "DescribeUserHierarchyGroup": [
            "HierarchyGroupId",
            "InstanceId"
        ],
        "DescribeUserHierarchyStructure": [
            "InstanceId"
        ],
        "DescribeView": [
            "InstanceId",
            "ViewId"
        ],
        "DescribeVocabulary": [
            "InstanceId",
            "VocabularyId"
        ],
        "DisassociateAnalyticsDataSet": [
            "InstanceId",
            "DataSetId"
        ],
        "DisassociateApprovedOrigin": [
            "InstanceId",
            "Origin"
        ],
        "DisassociateBot": [
            "InstanceId"
        ],
        "DisassociateFlow": [
            "InstanceId",
            "ResourceId",
            "ResourceType"
        ],
        "DisassociateInstanceStorageConfig": [
            "InstanceId",
            "AssociationId",
            "ResourceType"
        ],
        "DisassociateLambdaFunction": [
            "InstanceId",
            "FunctionArn"
        ],
        "DisassociateLexBot": [
            "InstanceId",
            "BotName",
            "LexRegion"
        ],
        "DisassociatePhoneNumberContactFlow": [
            "PhoneNumberId",
            "InstanceId"
        ],
        "DisassociateQueueQuickConnects": [
            "InstanceId",
            "QueueId",
            "QuickConnectIds"
        ],
        "DisassociateRoutingProfileQueues": [
            "InstanceId",
            "RoutingProfileId",
            "QueueReferences"
        ],
        "DisassociateSecurityKey": [
            "InstanceId",
            "AssociationId"
        ],
        "DisassociateTrafficDistributionGroupUser": [
            "TrafficDistributionGroupId",
            "UserId",
            "InstanceId"
        ],
        "DisassociateUserProficiencies": [
            "InstanceId",
            "UserId",
            "UserProficiencies"
        ],
        "DismissUserContact": [
            "UserId",
            "InstanceId",
            "ContactId"
        ],
        "GetContactAttributes": [
            "InstanceId",
            "InitialContactId"
        ],
        "GetCurrentMetricData": [
            "InstanceId",
            "Filters",
            "CurrentMetrics"
        ],
        "GetCurrentUserData": [
            "InstanceId",
            "Filters"
        ],
        "GetFederationToken": [
            "InstanceId"
        ],
        "GetFlowAssociation": [
            "InstanceId",
            "ResourceId",
            "ResourceType"
        ],
        "GetMetricData": [
            "InstanceId",
            "StartTime",
            "EndTime",
            "Filters",
            "HistoricalMetrics"
        ],
        "GetMetricDataV2": [
            "ResourceArn",
            "StartTime",
            "EndTime",
            "Filters",
            "Metrics"
        ],
        "GetPromptFile": [
            "InstanceId",
            "PromptId"
        ],
        "GetTaskTemplate": [
            "InstanceId",
            "TaskTemplateId"
        ],
        "GetTrafficDistribution": [
            "Id"
        ],
        "ImportPhoneNumber": [
            "InstanceId",
            "SourcePhoneNumberArn"
        ],
        "ListAgentStatuses": [
            "InstanceId"
        ],
        "ListAnalyticsDataAssociations": [
            "InstanceId"
        ],
        "ListApprovedOrigins": [
            "InstanceId"
        ],
        "ListBots": [
            "InstanceId",
            "LexVersion"
        ],
        "ListContactEvaluations": [
            "InstanceId",
            "ContactId"
        ],
        "ListContactFlowModules": [
            "InstanceId"
        ],
        "ListContactFlows": [
            "InstanceId"
        ],
        "ListContactReferences": [
            "InstanceId",
            "ContactId",
            "ReferenceTypes"
        ],
        "ListDefaultVocabularies": [
            "InstanceId"
        ],
        "ListEvaluationFormVersions": [
            "InstanceId",
            "EvaluationFormId"
        ],
        "ListEvaluationForms": [
            "InstanceId"
        ],
        "ListFlowAssociations": [
            "InstanceId"
        ],
        "ListHoursOfOperations": [
            "InstanceId"
        ],
        "ListInstanceAttributes": [
            "InstanceId"
        ],
        "ListInstanceStorageConfigs": [
            "InstanceId",
            "ResourceType"
        ],
        "ListInstances": "",
        "ListIntegrationAssociations": [
            "InstanceId"
        ],
        "ListLambdaFunctions": [
            "InstanceId"
        ],
        "ListLexBots": [
            "InstanceId"
        ],
        "ListPhoneNumbers": [
            "InstanceId"
        ],
        "ListPhoneNumbersV2": "",
        "ListPredefinedAttributes": [
            "InstanceId"
        ],
        "ListPrompts": [
            "InstanceId"
        ],
        "ListQueueQuickConnects": [
            "InstanceId",
            "QueueId"
        ],
        "ListQueues": [
            "InstanceId"
        ],
        "ListQuickConnects": [
            "InstanceId"
        ],
        "ListRealtimeContactAnalysisSegmentsV2": [
            "InstanceId",
            "ContactId",
            "OutputType",
            "SegmentTypes"
        ],
        "ListRoutingProfileQueues": [
            "InstanceId",
            "RoutingProfileId"
        ],
        "ListRoutingProfiles": [
            "InstanceId"
        ],
        "ListRules": [
            "InstanceId"
        ],
        "ListSecurityKeys": [
            "InstanceId"
        ],
        "ListSecurityProfileApplications": [
            "SecurityProfileId",
            "InstanceId"
        ],
        "ListSecurityProfilePermissions": [
            "SecurityProfileId",
            "InstanceId"
        ],
        "ListSecurityProfiles": [
            "InstanceId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTaskTemplates": [
            "InstanceId"
        ],
        "ListTrafficDistributionGroupUsers": [
            "TrafficDistributionGroupId"
        ],
        "ListTrafficDistributionGroups": "",
        "ListUseCases": [
            "InstanceId",
            "IntegrationAssociationId"
        ],
        "ListUserHierarchyGroups": [
            "InstanceId"
        ],
        "ListUserProficiencies": [
            "InstanceId",
            "UserId"
        ],
        "ListUsers": [
            "InstanceId"
        ],
        "ListViewVersions": [
            "InstanceId",
            "ViewId"
        ],
        "ListViews": [
            "InstanceId"
        ],
        "MonitorContact": [
            "InstanceId",
            "ContactId",
            "UserId"
        ],
        "PauseContact": [
            "ContactId",
            "InstanceId"
        ],
        "PutUserStatus": [
            "UserId",
            "InstanceId",
            "AgentStatusId"
        ],
        "ReleasePhoneNumber": [
            "PhoneNumberId"
        ],
        "ReplicateInstance": [
            "InstanceId",
            "ReplicaRegion",
            "ReplicaAlias"
        ],
        "ResumeContact": [
            "ContactId",
            "InstanceId"
        ],
        "ResumeContactRecording": [
            "InstanceId",
            "ContactId",
            "InitialContactId"
        ],
        "SearchAvailablePhoneNumbers": [
            "PhoneNumberCountryCode",
            "PhoneNumberType"
        ],
        "SearchContacts": [
            "InstanceId",
            "TimeRange"
        ],
        "SearchHoursOfOperations": [
            "InstanceId"
        ],
        "SearchPredefinedAttributes": [
            "InstanceId"
        ],
        "SearchPrompts": [
            "InstanceId"
        ],
        "SearchQueues": [
            "InstanceId"
        ],
        "SearchQuickConnects": [
            "InstanceId"
        ],
        "SearchResourceTags": [
            "InstanceId"
        ],
        "SearchRoutingProfiles": [
            "InstanceId"
        ],
        "SearchSecurityProfiles": [
            "InstanceId"
        ],
        "SearchUsers": [
            "InstanceId"
        ],
        "SearchVocabularies": [
            "InstanceId"
        ],
        "SendChatIntegrationEvent": [
            "SourceId",
            "DestinationId",
            "Event"
        ],
        "StartChatContact": [
            "InstanceId",
            "ContactFlowId",
            "ParticipantDetails"
        ],
        "StartContactEvaluation": [
            "InstanceId",
            "ContactId",
            "EvaluationFormId"
        ],
        "StartContactRecording": [
            "InstanceId",
            "ContactId",
            "InitialContactId",
            "VoiceRecordingConfiguration"
        ],
        "StartContactStreaming": [
            "InstanceId",
            "ContactId",
            "ChatStreamingConfiguration",
            "ClientToken"
        ],
        "StartOutboundVoiceContact": [
            "DestinationPhoneNumber",
            "ContactFlowId",
            "InstanceId"
        ],
        "StartTaskContact": [
            "InstanceId",
            "Name"
        ],
        "StartWebRTCContact": [
            "ContactFlowId",
            "InstanceId",
            "ParticipantDetails"
        ],
        "StopContact": [
            "ContactId",
            "InstanceId"
        ],
        "StopContactRecording": [
            "InstanceId",
            "ContactId",
            "InitialContactId"
        ],
        "StopContactStreaming": [
            "InstanceId",
            "ContactId",
            "StreamingId"
        ],
        "SubmitContactEvaluation": [
            "InstanceId",
            "EvaluationId"
        ],
        "SuspendContactRecording": [
            "InstanceId",
            "ContactId",
            "InitialContactId"
        ],
        "TagContact": [
            "ContactId",
            "InstanceId",
            "Tags"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TransferContact": [
            "InstanceId",
            "ContactId",
            "ContactFlowId"
        ],
        "UntagContact": [
            "ContactId",
            "InstanceId",
            "TagKeys"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAgentStatus": [
            "InstanceId",
            "AgentStatusId"
        ],
        "UpdateContact": [
            "InstanceId",
            "ContactId"
        ],
        "UpdateContactAttributes": [
            "InitialContactId",
            "InstanceId",
            "Attributes"
        ],
        "UpdateContactEvaluation": [
            "InstanceId",
            "EvaluationId"
        ],
        "UpdateContactFlowContent": [
            "InstanceId",
            "ContactFlowId",
            "Content"
        ],
        "UpdateContactFlowMetadata": [
            "InstanceId",
            "ContactFlowId"
        ],
        "UpdateContactFlowModuleContent": [
            "InstanceId",
            "ContactFlowModuleId",
            "Content"
        ],
        "UpdateContactFlowModuleMetadata": [
            "InstanceId",
            "ContactFlowModuleId"
        ],
        "UpdateContactFlowName": [
            "InstanceId",
            "ContactFlowId"
        ],
        "UpdateContactRoutingData": [
            "InstanceId",
            "ContactId"
        ],
        "UpdateContactSchedule": [
            "InstanceId",
            "ContactId",
            "ScheduledTime"
        ],
        "UpdateEvaluationForm": [
            "InstanceId",
            "EvaluationFormId",
            "EvaluationFormVersion",
            "Title",
            "Items"
        ],
        "UpdateHoursOfOperation": [
            "InstanceId",
            "HoursOfOperationId"
        ],
        "UpdateInstanceAttribute": [
            "InstanceId",
            "AttributeType",
            "Value"
        ],
        "UpdateInstanceStorageConfig": [
            "InstanceId",
            "AssociationId",
            "ResourceType",
            "StorageConfig"
        ],
        "UpdateParticipantRoleConfig": [
            "InstanceId",
            "ContactId",
            "ChannelConfiguration"
        ],
        "UpdatePhoneNumber": [
            "PhoneNumberId"
        ],
        "UpdatePhoneNumberMetadata": [
            "PhoneNumberId"
        ],
        "UpdatePredefinedAttribute": [
            "InstanceId",
            "Name"
        ],
        "UpdatePrompt": [
            "InstanceId",
            "PromptId"
        ],
        "UpdateQueueHoursOfOperation": [
            "InstanceId",
            "QueueId",
            "HoursOfOperationId"
        ],
        "UpdateQueueMaxContacts": [
            "InstanceId",
            "QueueId"
        ],
        "UpdateQueueName": [
            "InstanceId",
            "QueueId"
        ],
        "UpdateQueueOutboundCallerConfig": [
            "InstanceId",
            "QueueId",
            "OutboundCallerConfig"
        ],
        "UpdateQueueStatus": [
            "InstanceId",
            "QueueId",
            "Status"
        ],
        "UpdateQuickConnectConfig": [
            "InstanceId",
            "QuickConnectId",
            "QuickConnectConfig"
        ],
        "UpdateQuickConnectName": [
            "InstanceId",
            "QuickConnectId"
        ],
        "UpdateRoutingProfileAgentAvailabilityTimer": [
            "InstanceId",
            "RoutingProfileId",
            "AgentAvailabilityTimer"
        ],
        "UpdateRoutingProfileConcurrency": [
            "InstanceId",
            "RoutingProfileId",
            "MediaConcurrencies"
        ],
        "UpdateRoutingProfileDefaultOutboundQueue": [
            "InstanceId",
            "RoutingProfileId",
            "DefaultOutboundQueueId"
        ],
        "UpdateRoutingProfileName": [
            "InstanceId",
            "RoutingProfileId"
        ],
        "UpdateRoutingProfileQueues": [
            "InstanceId",
            "RoutingProfileId",
            "QueueConfigs"
        ],
        "UpdateRule": [
            "RuleId",
            "InstanceId",
            "Name",
            "Function",
            "Actions",
            "PublishStatus"
        ],
        "UpdateSecurityProfile": [
            "SecurityProfileId",
            "InstanceId"
        ],
        "UpdateTaskTemplate": [
            "TaskTemplateId",
            "InstanceId"
        ],
        "UpdateTrafficDistribution": [
            "Id"
        ],
        "UpdateUserHierarchy": [
            "UserId",
            "InstanceId"
        ],
        "UpdateUserHierarchyGroupName": [
            "Name",
            "HierarchyGroupId",
            "InstanceId"
        ],
        "UpdateUserHierarchyStructure": [
            "HierarchyStructure",
            "InstanceId"
        ],
        "UpdateUserIdentityInfo": [
            "IdentityInfo",
            "UserId",
            "InstanceId"
        ],
        "UpdateUserPhoneConfig": [
            "PhoneConfig",
            "UserId",
            "InstanceId"
        ],
        "UpdateUserProficiencies": [
            "InstanceId",
            "UserId",
            "UserProficiencies"
        ],
        "UpdateUserRoutingProfile": [
            "RoutingProfileId",
            "UserId",
            "InstanceId"
        ],
        "UpdateUserSecurityProfiles": [
            "SecurityProfileIds",
            "UserId",
            "InstanceId"
        ],
        "UpdateViewContent": [
            "InstanceId",
            "ViewId",
            "Status",
            "Content"
        ],
        "UpdateViewMetadata": [
            "InstanceId",
            "ViewId"
        ]
    },
    "connect-contact-lens": {
        "ListRealtimeContactAnalysisSegments": [
            "InstanceId",
            "ContactId"
        ]
    },
    "connectcampaigns": {
        "CreateCampaign": [
            "name",
            "connectInstanceId",
            "dialerConfig",
            "outboundCallConfig"
        ],
        "DeleteCampaign": [
            "id"
        ],
        "DeleteConnectInstanceConfig": [
            "connectInstanceId"
        ],
        "DeleteInstanceOnboardingJob": [
            "connectInstanceId"
        ],
        "DescribeCampaign": [
            "id"
        ],
        "GetCampaignState": [
            "id"
        ],
        "GetCampaignStateBatch": [
            "campaignIds"
        ],
        "GetConnectInstanceConfig": [
            "connectInstanceId"
        ],
        "GetInstanceOnboardingJobStatus": [
            "connectInstanceId"
        ],
        "ListCampaigns": "",
        "ListTagsForResource": [
            "arn"
        ],
        "PauseCampaign": [
            "id"
        ],
        "PutDialRequestBatch": [
            "id",
            "dialRequests"
        ],
        "ResumeCampaign": [
            "id"
        ],
        "StartCampaign": [
            "id"
        ],
        "StartInstanceOnboardingJob": [
            "connectInstanceId",
            "encryptionConfig"
        ],
        "StopCampaign": [
            "id"
        ],
        "TagResource": [
            "arn",
            "tags"
        ],
        "UntagResource": [
            "arn",
            "tagKeys"
        ],
        "UpdateCampaignDialerConfig": [
            "id",
            "dialerConfig"
        ],
        "UpdateCampaignName": [
            "id",
            "name"
        ],
        "UpdateCampaignOutboundCallConfig": [
            "id"
        ]
    },
    "connectcases": {
        "BatchGetField": [
            "domainId",
            "fields"
        ],
        "BatchPutFieldOptions": [
            "domainId",
            "fieldId",
            "options"
        ],
        "CreateCase": [
            "domainId",
            "fields",
            "templateId"
        ],
        "CreateDomain": [
            "name"
        ],
        "CreateField": [
            "domainId",
            "name",
            "type"
        ],
        "CreateLayout": [
            "content",
            "domainId",
            "name"
        ],
        "CreateRelatedItem": [
            "caseId",
            "content",
            "domainId",
            "type"
        ],
        "CreateTemplate": [
            "domainId",
            "name"
        ],
        "DeleteDomain": [
            "domainId"
        ],
        "GetCase": [
            "caseId",
            "domainId",
            "fields"
        ],
        "GetCaseAuditEvents": [
            "caseId",
            "domainId"
        ],
        "GetCaseEventConfiguration": [
            "domainId"
        ],
        "GetDomain": [
            "domainId"
        ],
        "GetLayout": [
            "domainId",
            "layoutId"
        ],
        "GetTemplate": [
            "domainId",
            "templateId"
        ],
        "ListCasesForContact": [
            "contactArn",
            "domainId"
        ],
        "ListDomains": "",
        "ListFieldOptions": [
            "domainId",
            "fieldId"
        ],
        "ListFields": [
            "domainId"
        ],
        "ListLayouts": [
            "domainId"
        ],
        "ListTagsForResource": [
            "arn"
        ],
        "ListTemplates": [
            "domainId"
        ],
        "PutCaseEventConfiguration": [
            "domainId",
            "eventBridge"
        ],
        "SearchCases": [
            "domainId"
        ],
        "SearchRelatedItems": [
            "caseId",
            "domainId"
        ],
        "TagResource": [
            "arn",
            "tags"
        ],
        "UntagResource": [
            "arn",
            "tagKeys"
        ],
        "UpdateCase": [
            "caseId",
            "domainId",
            "fields"
        ],
        "UpdateField": [
            "domainId",
            "fieldId"
        ],
        "UpdateLayout": [
            "domainId",
            "layoutId"
        ],
        "UpdateTemplate": [
            "domainId",
            "templateId"
        ]
    },
    "connectparticipant": {
        "CompleteAttachmentUpload": [
            "AttachmentIds",
            "ClientToken",
            "ConnectionToken"
        ],
        "CreateParticipantConnection": [
            "ParticipantToken"
        ],
        "DescribeView": [
            "ViewToken",
            "ConnectionToken"
        ],
        "DisconnectParticipant": [
            "ConnectionToken"
        ],
        "GetAttachment": [
            "AttachmentId",
            "ConnectionToken"
        ],
        "GetTranscript": [
            "ConnectionToken"
        ],
        "SendEvent": [
            "ContentType",
            "ConnectionToken"
        ],
        "SendMessage": [
            "ContentType",
            "Content",
            "ConnectionToken"
        ],
        "StartAttachmentUpload": [
            "ContentType",
            "AttachmentSizeInBytes",
            "AttachmentName",
            "ClientToken",
            "ConnectionToken"
        ]
    },
    "controltower": {
        "CreateLandingZone": [
            "manifest",
            "version"
        ],
        "DeleteLandingZone": [
            "landingZoneIdentifier"
        ],
        "DisableBaseline": [
            "enabledBaselineIdentifier"
        ],
        "DisableControl": [
            "controlIdentifier",
            "targetIdentifier"
        ],
        "EnableBaseline": [
            "baselineIdentifier",
            "baselineVersion",
            "targetIdentifier"
        ],
        "EnableControl": [
            "controlIdentifier",
            "targetIdentifier"
        ],
        "GetBaseline": [
            "baselineIdentifier"
        ],
        "GetBaselineOperation": [
            "operationIdentifier"
        ],
        "GetControlOperation": [
            "operationIdentifier"
        ],
        "GetEnabledBaseline": [
            "enabledBaselineIdentifier"
        ],
        "GetEnabledControl": [
            "enabledControlIdentifier"
        ],
        "GetLandingZone": [
            "landingZoneIdentifier"
        ],
        "GetLandingZoneOperation": [
            "operationIdentifier"
        ],
        "ListBaselines": "",
        "ListEnabledBaselines": "",
        "ListEnabledControls": [
            "targetIdentifier"
        ],
        "ListLandingZones": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ResetEnabledBaseline": [
            "enabledBaselineIdentifier"
        ],
        "ResetLandingZone": [
            "landingZoneIdentifier"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateEnabledBaseline": [
            "baselineVersion",
            "enabledBaselineIdentifier"
        ],
        "UpdateEnabledControl": [
            "enabledControlIdentifier",
            "parameters"
        ],
        "UpdateLandingZone": [
            "landingZoneIdentifier",
            "manifest",
            "version"
        ]
    },
    "cost-optimization-hub": {
        "GetPreferences": "",
        "GetRecommendation": [
            "recommendationId"
        ],
        "ListEnrollmentStatuses": "",
        "ListRecommendationSummaries": [
            "groupBy"
        ],
        "ListRecommendations": "",
        "UpdateEnrollmentStatus": [
            "status"
        ],
        "UpdatePreferences": ""
    },
    "cur": {
        "DeleteReportDefinition": [
            "ReportName"
        ],
        "DescribeReportDefinitions": "",
        "ListTagsForResource": [
            "ReportName"
        ],
        "ModifyReportDefinition": [
            "ReportName",
            "ReportDefinition"
        ],
        "PutReportDefinition": [
            "ReportDefinition"
        ],
        "TagResource": [
            "ReportName",
            "Tags"
        ],
        "UntagResource": [
            "ReportName",
            "TagKeys"
        ]
    },
    "customer-profiles": {
        "AddProfileKey": [
            "ProfileId",
            "KeyName",
            "Values",
            "DomainName"
        ],
        "CreateCalculatedAttributeDefinition": [
            "DomainName",
            "CalculatedAttributeName",
            "AttributeDetails",
            "Statistic"
        ],
        "CreateDomain": [
            "DomainName",
            "DefaultExpirationDays"
        ],
        "CreateEventStream": [
            "DomainName",
            "Uri",
            "EventStreamName"
        ],
        "CreateIntegrationWorkflow": [
            "DomainName",
            "WorkflowType",
            "IntegrationConfig",
            "ObjectTypeName",
            "RoleArn"
        ],
        "CreateProfile": [
            "DomainName"
        ],
        "DeleteCalculatedAttributeDefinition": [
            "DomainName",
            "CalculatedAttributeName"
        ],
        "DeleteDomain": [
            "DomainName"
        ],
        "DeleteEventStream": [
            "DomainName",
            "EventStreamName"
        ],
        "DeleteIntegration": [
            "DomainName",
            "Uri"
        ],
        "DeleteProfile": [
            "ProfileId",
            "DomainName"
        ],
        "DeleteProfileKey": [
            "ProfileId",
            "KeyName",
            "Values",
            "DomainName"
        ],
        "DeleteProfileObject": [
            "ProfileId",
            "ProfileObjectUniqueKey",
            "ObjectTypeName",
            "DomainName"
        ],
        "DeleteProfileObjectType": [
            "DomainName",
            "ObjectTypeName"
        ],
        "DeleteWorkflow": [
            "DomainName",
            "WorkflowId"
        ],
        "DetectProfileObjectType": [
            "Objects",
            "DomainName"
        ],
        "GetAutoMergingPreview": [
            "DomainName",
            "Consolidation",
            "ConflictResolution"
        ],
        "GetCalculatedAttributeDefinition": [
            "DomainName",
            "CalculatedAttributeName"
        ],
        "GetCalculatedAttributeForProfile": [
            "DomainName",
            "ProfileId",
            "CalculatedAttributeName"
        ],
        "GetDomain": [
            "DomainName"
        ],
        "GetEventStream": [
            "DomainName",
            "EventStreamName"
        ],
        "GetIdentityResolutionJob": [
            "DomainName",
            "JobId"
        ],
        "GetIntegration": [
            "DomainName",
            "Uri"
        ],
        "GetMatches": [
            "DomainName"
        ],
        "GetProfileObjectType": [
            "DomainName",
            "ObjectTypeName"
        ],
        "GetProfileObjectTypeTemplate": [
            "TemplateId"
        ],
        "GetSimilarProfiles": [
            "DomainName",
            "MatchType",
            "SearchKey",
            "SearchValue"
        ],
        "GetWorkflow": [
            "DomainName",
            "WorkflowId"
        ],
        "GetWorkflowSteps": [
            "DomainName",
            "WorkflowId"
        ],
        "ListAccountIntegrations": [
            "Uri"
        ],
        "ListCalculatedAttributeDefinitions": [
            "DomainName"
        ],
        "ListCalculatedAttributesForProfile": [
            "DomainName",
            "ProfileId"
        ],
        "ListDomains": "",
        "ListEventStreams": [
            "DomainName"
        ],
        "ListIdentityResolutionJobs": [
            "DomainName"
        ],
        "ListIntegrations": [
            "DomainName"
        ],
        "ListProfileObjectTypeTemplates": "",
        "ListProfileObjectTypes": [
            "DomainName"
        ],
        "ListProfileObjects": [
            "DomainName",
            "ObjectTypeName",
            "ProfileId"
        ],
        "ListRuleBasedMatches": [
            "DomainName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWorkflows": [
            "DomainName"
        ],
        "MergeProfiles": [
            "DomainName",
            "MainProfileId",
            "ProfileIdsToBeMerged"
        ],
        "PutIntegration": [
            "DomainName"
        ],
        "PutProfileObject": [
            "ObjectTypeName",
            "Object",
            "DomainName"
        ],
        "PutProfileObjectType": [
            "DomainName",
            "ObjectTypeName",
            "Description"
        ],
        "SearchProfiles": [
            "DomainName",
            "KeyName",
            "Values"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCalculatedAttributeDefinition": [
            "DomainName",
            "CalculatedAttributeName"
        ],
        "UpdateDomain": [
            "DomainName"
        ],
        "UpdateProfile": [
            "DomainName",
            "ProfileId"
        ]
    },
    "databrew": {
        "BatchDeleteRecipeVersion": [
            "Name",
            "RecipeVersions"
        ],
        "CreateDataset": [
            "Name",
            "Input"
        ],
        "CreateProfileJob": [
            "DatasetName",
            "Name",
            "OutputLocation",
            "RoleArn"
        ],
        "CreateProject": [
            "DatasetName",
            "Name",
            "RecipeName",
            "RoleArn"
        ],
        "CreateRecipe": [
            "Name",
            "Steps"
        ],
        "CreateRecipeJob": [
            "Name",
            "RoleArn"
        ],
        "CreateRuleset": [
            "Name",
            "TargetArn",
            "Rules"
        ],
        "CreateSchedule": [
            "CronExpression",
            "Name"
        ],
        "DeleteDataset": [
            "Name"
        ],
        "DeleteJob": [
            "Name"
        ],
        "DeleteProject": [
            "Name"
        ],
        "DeleteRecipeVersion": [
            "Name",
            "RecipeVersion"
        ],
        "DeleteRuleset": [
            "Name"
        ],
        "DeleteSchedule": [
            "Name"
        ],
        "DescribeDataset": [
            "Name"
        ],
        "DescribeJob": [
            "Name"
        ],
        "DescribeJobRun": [
            "Name",
            "RunId"
        ],
        "DescribeProject": [
            "Name"
        ],
        "DescribeRecipe": [
            "Name"
        ],
        "DescribeRuleset": [
            "Name"
        ],
        "DescribeSchedule": [
            "Name"
        ],
        "ListDatasets": "",
        "ListJobRuns": [
            "Name"
        ],
        "ListJobs": "",
        "ListProjects": "",
        "ListRecipeVersions": [
            "Name"
        ],
        "ListRecipes": "",
        "ListRulesets": "",
        "ListSchedules": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PublishRecipe": [
            "Name"
        ],
        "SendProjectSessionAction": [
            "Name"
        ],
        "StartJobRun": [
            "Name"
        ],
        "StartProjectSession": [
            "Name"
        ],
        "StopJobRun": [
            "Name",
            "RunId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDataset": [
            "Name",
            "Input"
        ],
        "UpdateProfileJob": [
            "Name",
            "OutputLocation",
            "RoleArn"
        ],
        "UpdateProject": [
            "RoleArn",
            "Name"
        ],
        "UpdateRecipe": [
            "Name"
        ],
        "UpdateRecipeJob": [
            "Name",
            "RoleArn"
        ],
        "UpdateRuleset": [
            "Name",
            "Rules"
        ],
        "UpdateSchedule": [
            "CronExpression",
            "Name"
        ]
    },
    "dataexchange": {
        "CancelJob": [
            "JobId"
        ],
        "CreateDataSet": [
            "AssetType",
            "Description",
            "Name"
        ],
        "CreateEventAction": [
            "Action",
            "Event"
        ],
        "CreateJob": [
            "Details",
            "Type"
        ],
        "CreateRevision": [
            "DataSetId"
        ],
        "DeleteAsset": [
            "AssetId",
            "DataSetId",
            "RevisionId"
        ],
        "DeleteDataSet": [
            "DataSetId"
        ],
        "DeleteEventAction": [
            "EventActionId"
        ],
        "DeleteRevision": [
            "DataSetId",
            "RevisionId"
        ],
        "GetAsset": [
            "AssetId",
            "DataSetId",
            "RevisionId"
        ],
        "GetDataSet": [
            "DataSetId"
        ],
        "GetEventAction": [
            "EventActionId"
        ],
        "GetJob": [
            "JobId"
        ],
        "GetRevision": [
            "DataSetId",
            "RevisionId"
        ],
        "ListDataSetRevisions": [
            "DataSetId"
        ],
        "ListDataSets": "",
        "ListEventActions": "",
        "ListJobs": "",
        "ListRevisionAssets": [
            "DataSetId",
            "RevisionId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RevokeRevision": [
            "DataSetId",
            "RevisionId",
            "RevocationComment"
        ],
        "SendApiAsset": [
            "AssetId",
            "DataSetId",
            "RevisionId"
        ],
        "SendDataSetNotification": [
            "DataSetId",
            "Type"
        ],
        "StartJob": [
            "JobId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAsset": [
            "AssetId",
            "DataSetId",
            "Name",
            "RevisionId"
        ],
        "UpdateDataSet": [
            "DataSetId"
        ],
        "UpdateEventAction": [
            "EventActionId"
        ],
        "UpdateRevision": [
            "DataSetId",
            "RevisionId"
        ]
    },
    "datapipeline": {
        "ActivatePipeline": [
            "pipelineId"
        ],
        "AddTags": [
            "pipelineId",
            "tags"
        ],
        "CreatePipeline": [
            "name",
            "uniqueId"
        ],
        "DeactivatePipeline": [
            "pipelineId"
        ],
        "DeletePipeline": [
            "pipelineId"
        ],
        "DescribeObjects": [
            "pipelineId",
            "objectIds"
        ],
        "DescribePipelines": [
            "pipelineIds"
        ],
        "EvaluateExpression": [
            "pipelineId",
            "objectId",
            "expression"
        ],
        "GetPipelineDefinition": [
            "pipelineId"
        ],
        "ListPipelines": "",
        "PollForTask": [
            "workerGroup"
        ],
        "PutPipelineDefinition": [
            "pipelineId",
            "pipelineObjects"
        ],
        "QueryObjects": [
            "pipelineId",
            "sphere"
        ],
        "RemoveTags": [
            "pipelineId",
            "tagKeys"
        ],
        "ReportTaskProgress": [
            "taskId"
        ],
        "ReportTaskRunnerHeartbeat": [
            "taskrunnerId"
        ],
        "SetStatus": [
            "pipelineId",
            "objectIds",
            "status"
        ],
        "SetTaskStatus": [
            "taskId",
            "taskStatus"
        ],
        "ValidatePipelineDefinition": [
            "pipelineId",
            "pipelineObjects"
        ]
    },
    "datasync": {
        "AddStorageSystem": [
            "ServerConfiguration",
            "SystemType",
            "AgentArns",
            "ClientToken",
            "Credentials"
        ],
        "CancelTaskExecution": [
            "TaskExecutionArn"
        ],
        "CreateAgent": [
            "ActivationKey"
        ],
        "CreateLocationAzureBlob": [
            "ContainerUrl",
            "AuthenticationType",
            "AgentArns"
        ],
        "CreateLocationEfs": [
            "EfsFilesystemArn",
            "Ec2Config"
        ],
        "CreateLocationFsxLustre": [
            "FsxFilesystemArn",
            "SecurityGroupArns"
        ],
        "CreateLocationFsxOntap": [
            "Protocol",
            "SecurityGroupArns",
            "StorageVirtualMachineArn"
        ],
        "CreateLocationFsxOpenZfs": [
            "FsxFilesystemArn",
            "Protocol",
            "SecurityGroupArns"
        ],
        "CreateLocationFsxWindows": [
            "FsxFilesystemArn",
            "SecurityGroupArns",
            "User",
            "Password"
        ],
        "CreateLocationHdfs": [
            "NameNodes",
            "AuthenticationType",
            "AgentArns"
        ],
        "CreateLocationNfs": [
            "Subdirectory",
            "ServerHostname",
            "OnPremConfig"
        ],
        "CreateLocationObjectStorage": [
            "ServerHostname",
            "BucketName",
            "AgentArns"
        ],
        "CreateLocationS3": [
            "S3BucketArn",
            "S3Config"
        ],
        "CreateLocationSmb": [
            "Subdirectory",
            "ServerHostname",
            "User",
            "Password",
            "AgentArns"
        ],
        "CreateTask": [
            "SourceLocationArn",
            "DestinationLocationArn"
        ],
        "DeleteAgent": [
            "AgentArn"
        ],
        "DeleteLocation": [
            "LocationArn"
        ],
        "DeleteTask": [
            "TaskArn"
        ],
        "DescribeAgent": [
            "AgentArn"
        ],
        "DescribeDiscoveryJob": [
            "DiscoveryJobArn"
        ],
        "DescribeLocationAzureBlob": [
            "LocationArn"
        ],
        "DescribeLocationEfs": [
            "LocationArn"
        ],
        "DescribeLocationFsxLustre": [
            "LocationArn"
        ],
        "DescribeLocationFsxOntap": [
            "LocationArn"
        ],
        "DescribeLocationFsxOpenZfs": [
            "LocationArn"
        ],
        "DescribeLocationFsxWindows": [
            "LocationArn"
        ],
        "DescribeLocationHdfs": [
            "LocationArn"
        ],
        "DescribeLocationNfs": [
            "LocationArn"
        ],
        "DescribeLocationObjectStorage": [
            "LocationArn"
        ],
        "DescribeLocationS3": [
            "LocationArn"
        ],
        "DescribeLocationSmb": [
            "LocationArn"
        ],
        "DescribeStorageSystem": [
            "StorageSystemArn"
        ],
        "DescribeStorageSystemResourceMetrics": [
            "DiscoveryJobArn",
            "ResourceType",
            "ResourceId"
        ],
        "DescribeStorageSystemResources": [
            "DiscoveryJobArn",
            "ResourceType"
        ],
        "DescribeTask": [
            "TaskArn"
        ],
        "DescribeTaskExecution": [
            "TaskExecutionArn"
        ],
        "GenerateRecommendations": [
            "DiscoveryJobArn",
            "ResourceIds",
            "ResourceType"
        ],
        "ListAgents": "",
        "ListDiscoveryJobs": "",
        "ListLocations": "",
        "ListStorageSystems": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTaskExecutions": "",
        "ListTasks": "",
        "RemoveStorageSystem": [
            "StorageSystemArn"
        ],
        "StartDiscoveryJob": [
            "StorageSystemArn",
            "CollectionDurationMinutes",
            "ClientToken"
        ],
        "StartTaskExecution": [
            "TaskArn"
        ],
        "StopDiscoveryJob": [
            "DiscoveryJobArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "Keys"
        ],
        "UpdateAgent": [
            "AgentArn"
        ],
        "UpdateDiscoveryJob": [
            "DiscoveryJobArn",
            "CollectionDurationMinutes"
        ],
        "UpdateLocationAzureBlob": [
            "LocationArn"
        ],
        "UpdateLocationHdfs": [
            "LocationArn"
        ],
        "UpdateLocationNfs": [
            "LocationArn"
        ],
        "UpdateLocationObjectStorage": [
            "LocationArn"
        ],
        "UpdateLocationSmb": [
            "LocationArn"
        ],
        "UpdateStorageSystem": [
            "StorageSystemArn"
        ],
        "UpdateTask": [
            "TaskArn"
        ],
        "UpdateTaskExecution": [
            "TaskExecutionArn",
            "Options"
        ]
    },
    "datazone": {
        "AcceptPredictions": [
            "domainIdentifier",
            "identifier"
        ],
        "AcceptSubscriptionRequest": [
            "domainIdentifier",
            "identifier"
        ],
        "CancelSubscription": [
            "domainIdentifier",
            "identifier"
        ],
        "CreateAsset": [
            "domainIdentifier",
            "name",
            "owningProjectIdentifier",
            "typeIdentifier"
        ],
        "CreateAssetRevision": [
            "domainIdentifier",
            "identifier",
            "name"
        ],
        "CreateAssetType": [
            "domainIdentifier",
            "formsInput",
            "name",
            "owningProjectIdentifier"
        ],
        "CreateDataSource": [
            "domainIdentifier",
            "environmentIdentifier",
            "name",
            "projectIdentifier",
            "type"
        ],
        "CreateDomain": [
            "domainExecutionRole",
            "name"
        ],
        "CreateEnvironment": [
            "domainIdentifier",
            "environmentProfileIdentifier",
            "name",
            "projectIdentifier"
        ],
        "CreateEnvironmentProfile": [
            "domainIdentifier",
            "environmentBlueprintIdentifier",
            "name",
            "projectIdentifier"
        ],
        "CreateFormType": [
            "domainIdentifier",
            "model",
            "name",
            "owningProjectIdentifier"
        ],
        "CreateGlossary": [
            "domainIdentifier",
            "name",
            "owningProjectIdentifier"
        ],
        "CreateGlossaryTerm": [
            "domainIdentifier",
            "glossaryIdentifier",
            "name"
        ],
        "CreateGroupProfile": [
            "domainIdentifier",
            "groupIdentifier"
        ],
        "CreateListingChangeSet": [
            "action",
            "domainIdentifier",
            "entityIdentifier",
            "entityType"
        ],
        "CreateProject": [
            "domainIdentifier",
            "name"
        ],
        "CreateProjectMembership": [
            "designation",
            "domainIdentifier",
            "member",
            "projectIdentifier"
        ],
        "CreateSubscriptionGrant": [
            "domainIdentifier",
            "environmentIdentifier",
            "grantedEntity",
            "subscriptionTargetIdentifier"
        ],
        "CreateSubscriptionRequest": [
            "domainIdentifier",
            "requestReason",
            "subscribedListings",
            "subscribedPrincipals"
        ],
        "CreateSubscriptionTarget": [
            "applicableAssetTypes",
            "authorizedPrincipals",
            "domainIdentifier",
            "environmentIdentifier",
            "manageAccessRole",
            "name",
            "subscriptionTargetConfig",
            "type"
        ],
        "CreateUserProfile": [
            "domainIdentifier",
            "userIdentifier"
        ],
        "DeleteAsset": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteAssetType": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteDataSource": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteDomain": [
            "identifier"
        ],
        "DeleteEnvironment": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteEnvironmentBlueprintConfiguration": [
            "domainIdentifier",
            "environmentBlueprintIdentifier"
        ],
        "DeleteEnvironmentProfile": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteFormType": [
            "domainIdentifier",
            "formTypeIdentifier"
        ],
        "DeleteGlossary": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteGlossaryTerm": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteListing": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteProject": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteProjectMembership": [
            "domainIdentifier",
            "member",
            "projectIdentifier"
        ],
        "DeleteSubscriptionGrant": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteSubscriptionRequest": [
            "domainIdentifier",
            "identifier"
        ],
        "DeleteSubscriptionTarget": [
            "domainIdentifier",
            "environmentIdentifier",
            "identifier"
        ],
        "GetAsset": [
            "domainIdentifier",
            "identifier"
        ],
        "GetAssetType": [
            "domainIdentifier",
            "identifier"
        ],
        "GetDataSource": [
            "domainIdentifier",
            "identifier"
        ],
        "GetDataSourceRun": [
            "domainIdentifier",
            "identifier"
        ],
        "GetDomain": [
            "identifier"
        ],
        "GetEnvironment": [
            "domainIdentifier",
            "identifier"
        ],
        "GetEnvironmentBlueprint": [
            "domainIdentifier",
            "identifier"
        ],
        "GetEnvironmentBlueprintConfiguration": [
            "domainIdentifier",
            "environmentBlueprintIdentifier"
        ],
        "GetEnvironmentProfile": [
            "domainIdentifier",
            "identifier"
        ],
        "GetFormType": [
            "domainIdentifier",
            "formTypeIdentifier"
        ],
        "GetGlossary": [
            "domainIdentifier",
            "identifier"
        ],
        "GetGlossaryTerm": [
            "domainIdentifier",
            "identifier"
        ],
        "GetGroupProfile": [
            "domainIdentifier",
            "groupIdentifier"
        ],
        "GetIamPortalLoginUrl": [
            "domainIdentifier"
        ],
        "GetListing": [
            "domainIdentifier",
            "identifier"
        ],
        "GetProject": [
            "domainIdentifier",
            "identifier"
        ],
        "GetSubscription": [
            "domainIdentifier",
            "identifier"
        ],
        "GetSubscriptionGrant": [
            "domainIdentifier",
            "identifier"
        ],
        "GetSubscriptionRequestDetails": [
            "domainIdentifier",
            "identifier"
        ],
        "GetSubscriptionTarget": [
            "domainIdentifier",
            "environmentIdentifier",
            "identifier"
        ],
        "GetUserProfile": [
            "domainIdentifier",
            "userIdentifier"
        ],
        "ListAssetRevisions": [
            "domainIdentifier",
            "identifier"
        ],
        "ListDataSourceRunActivities": [
            "domainIdentifier",
            "identifier"
        ],
        "ListDataSourceRuns": [
            "dataSourceIdentifier",
            "domainIdentifier"
        ],
        "ListDataSources": [
            "domainIdentifier",
            "projectIdentifier"
        ],
        "ListDomains": "",
        "ListEnvironmentBlueprintConfigurations": [
            "domainIdentifier"
        ],
        "ListEnvironmentBlueprints": [
            "domainIdentifier"
        ],
        "ListEnvironmentProfiles": [
            "domainIdentifier"
        ],
        "ListEnvironments": [
            "domainIdentifier",
            "projectIdentifier"
        ],
        "ListNotifications": [
            "domainIdentifier",
            "type"
        ],
        "ListProjectMemberships": [
            "domainIdentifier",
            "projectIdentifier"
        ],
        "ListProjects": [
            "domainIdentifier"
        ],
        "ListSubscriptionGrants": [
            "domainIdentifier"
        ],
        "ListSubscriptionRequests": [
            "domainIdentifier"
        ],
        "ListSubscriptionTargets": [
            "domainIdentifier",
            "environmentIdentifier"
        ],
        "ListSubscriptions": [
            "domainIdentifier"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutEnvironmentBlueprintConfiguration": [
            "domainIdentifier",
            "enabledRegions",
            "environmentBlueprintIdentifier"
        ],
        "RejectPredictions": [
            "domainIdentifier",
            "identifier"
        ],
        "RejectSubscriptionRequest": [
            "domainIdentifier",
            "identifier"
        ],
        "RevokeSubscription": [
            "domainIdentifier",
            "identifier"
        ],
        "Search": [
            "domainIdentifier",
            "searchScope"
        ],
        "SearchGroupProfiles": [
            "domainIdentifier",
            "groupType"
        ],
        "SearchListings": [
            "domainIdentifier"
        ],
        "SearchTypes": [
            "domainIdentifier",
            "managed",
            "searchScope"
        ],
        "SearchUserProfiles": [
            "domainIdentifier",
            "userType"
        ],
        "StartDataSourceRun": [
            "dataSourceIdentifier",
            "domainIdentifier"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDataSource": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateDomain": [
            "identifier"
        ],
        "UpdateEnvironment": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateEnvironmentProfile": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateGlossary": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateGlossaryTerm": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateGroupProfile": [
            "domainIdentifier",
            "groupIdentifier",
            "status"
        ],
        "UpdateProject": [
            "domainIdentifier",
            "identifier"
        ],
        "UpdateSubscriptionGrantStatus": [
            "assetIdentifier",
            "domainIdentifier",
            "identifier",
            "status"
        ],
        "UpdateSubscriptionRequest": [
            "domainIdentifier",
            "identifier",
            "requestReason"
        ],
        "UpdateSubscriptionTarget": [
            "domainIdentifier",
            "environmentIdentifier",
            "identifier"
        ],
        "UpdateUserProfile": [
            "domainIdentifier",
            "status",
            "userIdentifier"
        ]
    },
    "dax": {
        "CreateCluster": [
            "ClusterName",
            "NodeType",
            "ReplicationFactor",
            "IamRoleArn"
        ],
        "CreateParameterGroup": [
            "ParameterGroupName"
        ],
        "CreateSubnetGroup": [
            "SubnetGroupName",
            "SubnetIds"
        ],
        "DecreaseReplicationFactor": [
            "ClusterName",
            "NewReplicationFactor"
        ],
        "DeleteCluster": [
            "ClusterName"
        ],
        "DeleteParameterGroup": [
            "ParameterGroupName"
        ],
        "DeleteSubnetGroup": [
            "SubnetGroupName"
        ],
        "DescribeClusters": "",
        "DescribeDefaultParameters": "",
        "DescribeEvents": "",
        "DescribeParameterGroups": "",
        "DescribeParameters": [
            "ParameterGroupName"
        ],
        "DescribeSubnetGroups": "",
        "IncreaseReplicationFactor": [
            "ClusterName",
            "NewReplicationFactor"
        ],
        "ListTags": [
            "ResourceName"
        ],
        "RebootNode": [
            "ClusterName",
            "NodeId"
        ],
        "TagResource": [
            "ResourceName",
            "Tags"
        ],
        "UntagResource": [
            "ResourceName",
            "TagKeys"
        ],
        "UpdateCluster": [
            "ClusterName"
        ],
        "UpdateParameterGroup": [
            "ParameterGroupName",
            "ParameterNameValues"
        ],
        "UpdateSubnetGroup": [
            "SubnetGroupName"
        ]
    },
    "detective": {
        "AcceptInvitation": [
            "GraphArn"
        ],
        "BatchGetGraphMemberDatasources": [
            "GraphArn",
            "AccountIds"
        ],
        "BatchGetMembershipDatasources": [
            "GraphArns"
        ],
        "CreateGraph": "",
        "CreateMembers": [
            "GraphArn",
            "Accounts"
        ],
        "DeleteGraph": [
            "GraphArn"
        ],
        "DeleteMembers": [
            "GraphArn",
            "AccountIds"
        ],
        "DescribeOrganizationConfiguration": [
            "GraphArn"
        ],
        "DisableOrganizationAdminAccount": "",
        "DisassociateMembership": [
            "GraphArn"
        ],
        "EnableOrganizationAdminAccount": [
            "AccountId"
        ],
        "GetInvestigation": [
            "GraphArn",
            "InvestigationId"
        ],
        "GetMembers": [
            "GraphArn",
            "AccountIds"
        ],
        "ListDatasourcePackages": [
            "GraphArn"
        ],
        "ListGraphs": "",
        "ListIndicators": [
            "GraphArn",
            "InvestigationId"
        ],
        "ListInvestigations": [
            "GraphArn"
        ],
        "ListInvitations": "",
        "ListMembers": [
            "GraphArn"
        ],
        "ListOrganizationAdminAccounts": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RejectInvitation": [
            "GraphArn"
        ],
        "StartInvestigation": [
            "GraphArn",
            "EntityArn",
            "ScopeStartTime",
            "ScopeEndTime"
        ],
        "StartMonitoringMember": [
            "GraphArn",
            "AccountId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDatasourcePackages": [
            "GraphArn",
            "DatasourcePackages"
        ],
        "UpdateInvestigationState": [
            "GraphArn",
            "InvestigationId",
            "State"
        ],
        "UpdateOrganizationConfiguration": [
            "GraphArn"
        ]
    },
    "devicefarm": {
        "CreateDevicePool": [
            "projectArn",
            "name",
            "rules"
        ],
        "CreateInstanceProfile": [
            "name"
        ],
        "CreateNetworkProfile": [
            "projectArn",
            "name"
        ],
        "CreateProject": [
            "name"
        ],
        "CreateRemoteAccessSession": [
            "projectArn",
            "deviceArn"
        ],
        "CreateTestGridProject": [
            "name"
        ],
        "CreateTestGridUrl": [
            "projectArn",
            "expiresInSeconds"
        ],
        "CreateUpload": [
            "projectArn",
            "name",
            "type"
        ],
        "CreateVPCEConfiguration": [
            "vpceConfigurationName",
            "vpceServiceName",
            "serviceDnsName"
        ],
        "DeleteDevicePool": [
            "arn"
        ],
        "DeleteInstanceProfile": [
            "arn"
        ],
        "DeleteNetworkProfile": [
            "arn"
        ],
        "DeleteProject": [
            "arn"
        ],
        "DeleteRemoteAccessSession": [
            "arn"
        ],
        "DeleteRun": [
            "arn"
        ],
        "DeleteTestGridProject": [
            "projectArn"
        ],
        "DeleteUpload": [
            "arn"
        ],
        "DeleteVPCEConfiguration": [
            "arn"
        ],
        "GetAccountSettings": "",
        "GetDevice": [
            "arn"
        ],
        "GetDeviceInstance": [
            "arn"
        ],
        "GetDevicePool": [
            "arn"
        ],
        "GetDevicePoolCompatibility": [
            "devicePoolArn"
        ],
        "GetInstanceProfile": [
            "arn"
        ],
        "GetJob": [
            "arn"
        ],
        "GetNetworkProfile": [
            "arn"
        ],
        "GetOfferingStatus": "",
        "GetProject": [
            "arn"
        ],
        "GetRemoteAccessSession": [
            "arn"
        ],
        "GetRun": [
            "arn"
        ],
        "GetSuite": [
            "arn"
        ],
        "GetTest": [
            "arn"
        ],
        "GetTestGridProject": [
            "projectArn"
        ],
        "GetTestGridSession": "",
        "GetUpload": [
            "arn"
        ],
        "GetVPCEConfiguration": [
            "arn"
        ],
        "InstallToRemoteAccessSession": [
            "remoteAccessSessionArn",
            "appArn"
        ],
        "ListArtifacts": [
            "arn",
            "type"
        ],
        "ListDeviceInstances": "",
        "ListDevicePools": [
            "arn"
        ],
        "ListDevices": "",
        "ListInstanceProfiles": "",
        "ListJobs": [
            "arn"
        ],
        "ListNetworkProfiles": [
            "arn"
        ],
        "ListOfferingPromotions": "",
        "ListOfferingTransactions": "",
        "ListOfferings": "",
        "ListProjects": "",
        "ListRemoteAccessSessions": [
            "arn"
        ],
        "ListRuns": [
            "arn"
        ],
        "ListSamples": [
            "arn"
        ],
        "ListSuites": [
            "arn"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTestGridProjects": "",
        "ListTestGridSessionActions": [
            "sessionArn"
        ],
        "ListTestGridSessionArtifacts": [
            "sessionArn"
        ],
        "ListTestGridSessions": [
            "projectArn"
        ],
        "ListTests": [
            "arn"
        ],
        "ListUniqueProblems": [
            "arn"
        ],
        "ListUploads": [
            "arn"
        ],
        "ListVPCEConfigurations": "",
        "PurchaseOffering": [
            "offeringId",
            "quantity"
        ],
        "RenewOffering": [
            "offeringId",
            "quantity"
        ],
        "ScheduleRun": [
            "projectArn",
            "test"
        ],
        "StopJob": [
            "arn"
        ],
        "StopRemoteAccessSession": [
            "arn"
        ],
        "StopRun": [
            "arn"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateDeviceInstance": [
            "arn"
        ],
        "UpdateDevicePool": [
            "arn"
        ],
        "UpdateInstanceProfile": [
            "arn"
        ],
        "UpdateNetworkProfile": [
            "arn"
        ],
        "UpdateProject": [
            "arn"
        ],
        "UpdateTestGridProject": [
            "projectArn"
        ],
        "UpdateUpload": [
            "arn"
        ],
        "UpdateVPCEConfiguration": [
            "arn"
        ]
    },
    "devops-guru": {
        "AddNotificationChannel": [
            "Config"
        ],
        "DeleteInsight": [
            "Id"
        ],
        "DescribeAccountHealth": "",
        "DescribeAccountOverview": [
            "FromTime"
        ],
        "DescribeAnomaly": [
            "Id"
        ],
        "DescribeEventSourcesConfig": "",
        "DescribeFeedback": "",
        "DescribeInsight": [
            "Id"
        ],
        "DescribeOrganizationHealth": "",
        "DescribeOrganizationOverview": [
            "FromTime"
        ],
        "DescribeOrganizationResourceCollectionHealth": [
            "OrganizationResourceCollectionType"
        ],
        "DescribeResourceCollectionHealth": [
            "ResourceCollectionType"
        ],
        "DescribeServiceIntegration": "",
        "GetCostEstimation": "",
        "GetResourceCollection": [
            "ResourceCollectionType"
        ],
        "ListAnomaliesForInsight": [
            "InsightId"
        ],
        "ListAnomalousLogGroups": [
            "InsightId"
        ],
        "ListEvents": [
            "Filters"
        ],
        "ListInsights": [
            "StatusFilter"
        ],
        "ListMonitoredResources": "",
        "ListNotificationChannels": "",
        "ListOrganizationInsights": [
            "StatusFilter"
        ],
        "ListRecommendations": [
            "InsightId"
        ],
        "PutFeedback": "",
        "RemoveNotificationChannel": [
            "Id"
        ],
        "SearchInsights": [
            "StartTimeRange",
            "Type"
        ],
        "SearchOrganizationInsights": [
            "AccountIds",
            "StartTimeRange",
            "Type"
        ],
        "StartCostEstimation": [
            "ResourceCollection"
        ],
        "UpdateEventSourcesConfig": "",
        "UpdateResourceCollection": [
            "Action",
            "ResourceCollection"
        ],
        "UpdateServiceIntegration": [
            "ServiceIntegration"
        ]
    },
    "directconnect": {
        "AcceptDirectConnectGatewayAssociationProposal": [
            "directConnectGatewayId",
            "proposalId",
            "associatedGatewayOwnerAccount"
        ],
        "AllocateConnectionOnInterconnect": [
            "bandwidth",
            "connectionName",
            "ownerAccount",
            "interconnectId",
            "vlan"
        ],
        "AllocateHostedConnection": [
            "connectionId",
            "ownerAccount",
            "bandwidth",
            "connectionName",
            "vlan"
        ],
        "AllocatePrivateVirtualInterface": [
            "connectionId",
            "ownerAccount",
            "newPrivateVirtualInterfaceAllocation"
        ],
        "AllocatePublicVirtualInterface": [
            "connectionId",
            "ownerAccount",
            "newPublicVirtualInterfaceAllocation"
        ],
        "AllocateTransitVirtualInterface": [
            "connectionId",
            "ownerAccount",
            "newTransitVirtualInterfaceAllocation"
        ],
        "AssociateConnectionWithLag": [
            "connectionId",
            "lagId"
        ],
        "AssociateHostedConnection": [
            "connectionId",
            "parentConnectionId"
        ],
        "AssociateMacSecKey": [
            "connectionId"
        ],
        "AssociateVirtualInterface": [
            "virtualInterfaceId",
            "connectionId"
        ],
        "ConfirmConnection": [
            "connectionId"
        ],
        "ConfirmCustomerAgreement": "",
        "ConfirmPrivateVirtualInterface": [
            "virtualInterfaceId"
        ],
        "ConfirmPublicVirtualInterface": [
            "virtualInterfaceId"
        ],
        "ConfirmTransitVirtualInterface": [
            "virtualInterfaceId",
            "directConnectGatewayId"
        ],
        "CreateBGPPeer": "",
        "CreateConnection": [
            "location",
            "bandwidth",
            "connectionName"
        ],
        "CreateDirectConnectGateway": [
            "directConnectGatewayName"
        ],
        "CreateDirectConnectGatewayAssociation": [
            "directConnectGatewayId"
        ],
        "CreateDirectConnectGatewayAssociationProposal": [
            "directConnectGatewayId",
            "directConnectGatewayOwnerAccount",
            "gatewayId"
        ],
        "CreateInterconnect": [
            "interconnectName",
            "bandwidth",
            "location"
        ],
        "CreateLag": [
            "numberOfConnections",
            "location",
            "connectionsBandwidth",
            "lagName"
        ],
        "CreatePrivateVirtualInterface": [
            "connectionId",
            "newPrivateVirtualInterface"
        ],
        "CreatePublicVirtualInterface": [
            "connectionId",
            "newPublicVirtualInterface"
        ],
        "CreateTransitVirtualInterface": [
            "connectionId",
            "newTransitVirtualInterface"
        ],
        "DeleteBGPPeer": "",
        "DeleteConnection": [
            "connectionId"
        ],
        "DeleteDirectConnectGateway": [
            "directConnectGatewayId"
        ],
        "DeleteDirectConnectGatewayAssociation": "",
        "DeleteDirectConnectGatewayAssociationProposal": [
            "proposalId"
        ],
        "DeleteInterconnect": [
            "interconnectId"
        ],
        "DeleteLag": [
            "lagId"
        ],
        "DeleteVirtualInterface": [
            "virtualInterfaceId"
        ],
        "DescribeConnectionLoa": [
            "connectionId"
        ],
        "DescribeConnections": "",
        "DescribeConnectionsOnInterconnect": [
            "interconnectId"
        ],
        "DescribeCustomerMetadata": "",
        "DescribeDirectConnectGatewayAssociationProposals": "",
        "DescribeDirectConnectGatewayAssociations": "",
        "DescribeDirectConnectGatewayAttachments": "",
        "DescribeDirectConnectGateways": "",
        "DescribeHostedConnections": [
            "connectionId"
        ],
        "DescribeInterconnectLoa": [
            "interconnectId"
        ],
        "DescribeInterconnects": "",
        "DescribeLags": "",
        "DescribeLoa": [
            "connectionId"
        ],
        "DescribeLocations": "",
        "DescribeRouterConfiguration": [
            "virtualInterfaceId"
        ],
        "DescribeTags": [
            "resourceArns"
        ],
        "DescribeVirtualGateways": "",
        "DescribeVirtualInterfaces": "",
        "DisassociateConnectionFromLag": [
            "connectionId",
            "lagId"
        ],
        "DisassociateMacSecKey": [
            "connectionId",
            "secretARN"
        ],
        "ListVirtualInterfaceTestHistory": "",
        "StartBgpFailoverTest": [
            "virtualInterfaceId"
        ],
        "StopBgpFailoverTest": [
            "virtualInterfaceId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateConnection": [
            "connectionId"
        ],
        "UpdateDirectConnectGateway": [
            "directConnectGatewayId",
            "newDirectConnectGatewayName"
        ],
        "UpdateDirectConnectGatewayAssociation": "",
        "UpdateLag": [
            "lagId"
        ],
        "UpdateVirtualInterfaceAttributes": [
            "virtualInterfaceId"
        ]
    },
    "discovery": {
        "AssociateConfigurationItemsToApplication": [
            "applicationConfigurationId",
            "configurationIds"
        ],
        "BatchDeleteAgents": [
            "deleteAgents"
        ],
        "BatchDeleteImportData": [
            "importTaskIds"
        ],
        "CreateApplication": [
            "name"
        ],
        "CreateTags": [
            "configurationIds",
            "tags"
        ],
        "DeleteApplications": [
            "configurationIds"
        ],
        "DeleteTags": [
            "configurationIds"
        ],
        "DescribeAgents": "",
        "DescribeBatchDeleteConfigurationTask": [
            "taskId"
        ],
        "DescribeConfigurations": [
            "configurationIds"
        ],
        "DescribeContinuousExports": "",
        "DescribeExportConfigurations": "",
        "DescribeExportTasks": "",
        "DescribeImportTasks": "",
        "DescribeTags": "",
        "DisassociateConfigurationItemsFromApplication": [
            "applicationConfigurationId",
            "configurationIds"
        ],
        "ExportConfigurations": "",
        "GetDiscoverySummary": "",
        "ListConfigurations": [
            "configurationType"
        ],
        "ListServerNeighbors": [
            "configurationId"
        ],
        "StartBatchDeleteConfigurationTask": [
            "configurationType",
            "configurationIds"
        ],
        "StartContinuousExport": "",
        "StartDataCollectionByAgentIds": [
            "agentIds"
        ],
        "StartExportTask": "",
        "StartImportTask": [
            "name",
            "importUrl"
        ],
        "StopContinuousExport": [
            "exportId"
        ],
        "StopDataCollectionByAgentIds": [
            "agentIds"
        ],
        "UpdateApplication": [
            "configurationId"
        ]
    },
    "dlm": {
        "CreateLifecyclePolicy": [
            "ExecutionRoleArn",
            "Description",
            "State"
        ],
        "DeleteLifecyclePolicy": [
            "PolicyId"
        ],
        "GetLifecyclePolicies": "",
        "GetLifecyclePolicy": [
            "PolicyId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateLifecyclePolicy": [
            "PolicyId"
        ]
    },
    "dms": {
        "AddTagsToResource": [
            "ResourceArn",
            "Tags"
        ],
        "ApplyPendingMaintenanceAction": [
            "ReplicationInstanceArn",
            "ApplyAction",
            "OptInType"
        ],
        "BatchStartRecommendations": "",
        "CancelReplicationTaskAssessmentRun": [
            "ReplicationTaskAssessmentRunArn"
        ],
        "CreateDataProvider": [
            "Engine",
            "Settings"
        ],
        "CreateEndpoint": [
            "EndpointIdentifier",
            "EndpointType",
            "EngineName"
        ],
        "CreateEventSubscription": [
            "SubscriptionName",
            "SnsTopicArn"
        ],
        "CreateFleetAdvisorCollector": [
            "CollectorName",
            "ServiceAccessRoleArn",
            "S3BucketName"
        ],
        "CreateInstanceProfile": "",
        "CreateMigrationProject": [
            "SourceDataProviderDescriptors",
            "TargetDataProviderDescriptors",
            "InstanceProfileIdentifier"
        ],
        "CreateReplicationConfig": [
            "ReplicationConfigIdentifier",
            "SourceEndpointArn",
            "TargetEndpointArn",
            "ComputeConfig",
            "ReplicationType",
            "TableMappings"
        ],
        "CreateReplicationInstance": [
            "ReplicationInstanceIdentifier",
            "ReplicationInstanceClass"
        ],
        "CreateReplicationSubnetGroup": [
            "ReplicationSubnetGroupIdentifier",
            "ReplicationSubnetGroupDescription",
            "SubnetIds"
        ],
        "CreateReplicationTask": [
            "ReplicationTaskIdentifier",
            "SourceEndpointArn",
            "TargetEndpointArn",
            "ReplicationInstanceArn",
            "MigrationType",
            "TableMappings"
        ],
        "DeleteCertificate": [
            "CertificateArn"
        ],
        "DeleteConnection": [
            "EndpointArn",
            "ReplicationInstanceArn"
        ],
        "DeleteDataProvider": [
            "DataProviderIdentifier"
        ],
        "DeleteEndpoint": [
            "EndpointArn"
        ],
        "DeleteEventSubscription": [
            "SubscriptionName"
        ],
        "DeleteFleetAdvisorCollector": [
            "CollectorReferencedId"
        ],
        "DeleteFleetAdvisorDatabases": [
            "DatabaseIds"
        ],
        "DeleteInstanceProfile": [
            "InstanceProfileIdentifier"
        ],
        "DeleteMigrationProject": [
            "MigrationProjectIdentifier"
        ],
        "DeleteReplicationConfig": [
            "ReplicationConfigArn"
        ],
        "DeleteReplicationInstance": [
            "ReplicationInstanceArn"
        ],
        "DeleteReplicationSubnetGroup": [
            "ReplicationSubnetGroupIdentifier"
        ],
        "DeleteReplicationTask": [
            "ReplicationTaskArn"
        ],
        "DeleteReplicationTaskAssessmentRun": [
            "ReplicationTaskAssessmentRunArn"
        ],
        "DescribeAccountAttributes": "",
        "DescribeApplicableIndividualAssessments": "",
        "DescribeCertificates": "",
        "DescribeConnections": "",
        "DescribeConversionConfiguration": [
            "MigrationProjectIdentifier"
        ],
        "DescribeDataProviders": "",
        "DescribeEndpointSettings": [
            "EngineName"
        ],
        "DescribeEndpointTypes": "",
        "DescribeEndpoints": "",
        "DescribeEngineVersions": "",
        "DescribeEventCategories": "",
        "DescribeEventSubscriptions": "",
        "DescribeEvents": "",
        "DescribeExtensionPackAssociations": [
            "MigrationProjectIdentifier"
        ],
        "DescribeFleetAdvisorCollectors": "",
        "DescribeFleetAdvisorDatabases": "",
        "DescribeFleetAdvisorLsaAnalysis": "",
        "DescribeFleetAdvisorSchemaObjectSummary": "",
        "DescribeFleetAdvisorSchemas": "",
        "DescribeInstanceProfiles": "",
        "DescribeMetadataModelAssessments": [
            "MigrationProjectIdentifier"
        ],
        "DescribeMetadataModelConversions": [
            "MigrationProjectIdentifier"
        ],
        "DescribeMetadataModelExportsAsScript": [
            "MigrationProjectIdentifier"
        ],
        "DescribeMetadataModelExportsToTarget": [
            "MigrationProjectIdentifier"
        ],
        "DescribeMetadataModelImports": [
            "MigrationProjectIdentifier"
        ],
        "DescribeMigrationProjects": "",
        "DescribeOrderableReplicationInstances": "",
        "DescribePendingMaintenanceActions": "",
        "DescribeRecommendationLimitations": "",
        "DescribeRecommendations": "",
        "DescribeRefreshSchemasStatus": [
            "EndpointArn"
        ],
        "DescribeReplicationConfigs": "",
        "DescribeReplicationInstanceTaskLogs": [
            "ReplicationInstanceArn"
        ],
        "DescribeReplicationInstances": "",
        "DescribeReplicationSubnetGroups": "",
        "DescribeReplicationTableStatistics": [
            "ReplicationConfigArn"
        ],
        "DescribeReplicationTaskAssessmentResults": "",
        "DescribeReplicationTaskAssessmentRuns": "",
        "DescribeReplicationTaskIndividualAssessments": "",
        "DescribeReplicationTasks": "",
        "DescribeReplications": "",
        "DescribeSchemas": [
            "EndpointArn"
        ],
        "DescribeTableStatistics": [
            "ReplicationTaskArn"
        ],
        "ExportMetadataModelAssessment": [
            "MigrationProjectIdentifier",
            "SelectionRules"
        ],
        "ImportCertificate": [
            "CertificateIdentifier"
        ],
        "ListTagsForResource": "",
        "ModifyConversionConfiguration": [
            "MigrationProjectIdentifier",
            "ConversionConfiguration"
        ],
        "ModifyDataProvider": [
            "DataProviderIdentifier"
        ],
        "ModifyEndpoint": [
            "EndpointArn"
        ],
        "ModifyEventSubscription": [
            "SubscriptionName"
        ],
        "ModifyInstanceProfile": [
            "InstanceProfileIdentifier"
        ],
        "ModifyMigrationProject": [
            "MigrationProjectIdentifier"
        ],
        "ModifyReplicationConfig": [
            "ReplicationConfigArn"
        ],
        "ModifyReplicationInstance": [
            "ReplicationInstanceArn"
        ],
        "ModifyReplicationSubnetGroup": [
            "ReplicationSubnetGroupIdentifier",
            "SubnetIds"
        ],
        "ModifyReplicationTask": [
            "ReplicationTaskArn"
        ],
        "MoveReplicationTask": [
            "ReplicationTaskArn",
            "TargetReplicationInstanceArn"
        ],
        "RebootReplicationInstance": [
            "ReplicationInstanceArn"
        ],
        "RefreshSchemas": [
            "EndpointArn",
            "ReplicationInstanceArn"
        ],
        "ReloadReplicationTables": [
            "ReplicationConfigArn",
            "TablesToReload"
        ],
        "ReloadTables": [
            "ReplicationTaskArn",
            "TablesToReload"
        ],
        "RemoveTagsFromResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "RunFleetAdvisorLsaAnalysis": "",
        "StartExtensionPackAssociation": [
            "MigrationProjectIdentifier"
        ],
        "StartMetadataModelAssessment": [
            "MigrationProjectIdentifier",
            "SelectionRules"
        ],
        "StartMetadataModelConversion": [
            "MigrationProjectIdentifier",
            "SelectionRules"
        ],
        "StartMetadataModelExportAsScript": [
            "MigrationProjectIdentifier",
            "SelectionRules",
            "Origin"
        ],
        "StartMetadataModelExportToTarget": [
            "MigrationProjectIdentifier",
            "SelectionRules"
        ],
        "StartMetadataModelImport": [
            "MigrationProjectIdentifier",
            "SelectionRules",
            "Origin"
        ],
        "StartRecommendations": [
            "DatabaseId",
            "Settings"
        ],
        "StartReplication": [
            "ReplicationConfigArn",
            "StartReplicationType"
        ],
        "StartReplicationTask": [
            "ReplicationTaskArn",
            "StartReplicationTaskType"
        ],
        "StartReplicationTaskAssessment": [
            "ReplicationTaskArn"
        ],
        "StartReplicationTaskAssessmentRun": [
            "ReplicationTaskArn",
            "ServiceAccessRoleArn",
            "ResultLocationBucket",
            "AssessmentRunName"
        ],
        "StopReplication": [
            "ReplicationConfigArn"
        ],
        "StopReplicationTask": [
            "ReplicationTaskArn"
        ],
        "TestConnection": [
            "ReplicationInstanceArn",
            "EndpointArn"
        ],
        "UpdateSubscriptionsToEventBridge": ""
    },
    "docdb": {
        "AddSourceIdentifierToSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "AddTagsToResource": [
            "ResourceName",
            "Tags"
        ],
        "ApplyPendingMaintenanceAction": [
            "ResourceIdentifier",
            "ApplyAction",
            "OptInType"
        ],
        "CopyDBClusterParameterGroup": [
            "SourceDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupDescription"
        ],
        "CopyDBClusterSnapshot": [
            "SourceDBClusterSnapshotIdentifier",
            "TargetDBClusterSnapshotIdentifier"
        ],
        "CreateDBCluster": [
            "DBClusterIdentifier",
            "Engine"
        ],
        "CreateDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "DBParameterGroupFamily",
            "Description"
        ],
        "CreateDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier",
            "DBClusterIdentifier"
        ],
        "CreateDBInstance": [
            "DBInstanceIdentifier",
            "DBInstanceClass",
            "Engine",
            "DBClusterIdentifier"
        ],
        "CreateDBSubnetGroup": [
            "DBSubnetGroupName",
            "DBSubnetGroupDescription",
            "SubnetIds"
        ],
        "CreateEventSubscription": [
            "SubscriptionName",
            "SnsTopicArn"
        ],
        "CreateGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "DeleteDBCluster": [
            "DBClusterIdentifier"
        ],
        "DeleteDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "DeleteDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier"
        ],
        "DeleteDBInstance": [
            "DBInstanceIdentifier"
        ],
        "DeleteDBSubnetGroup": [
            "DBSubnetGroupName"
        ],
        "DeleteEventSubscription": [
            "SubscriptionName"
        ],
        "DeleteGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "DescribeCertificates": "",
        "DescribeDBClusterParameterGroups": "",
        "DescribeDBClusterParameters": [
            "DBClusterParameterGroupName"
        ],
        "DescribeDBClusterSnapshotAttributes": [
            "DBClusterSnapshotIdentifier"
        ],
        "DescribeDBClusterSnapshots": "",
        "DescribeDBClusters": "",
        "DescribeDBEngineVersions": "",
        "DescribeDBInstances": "",
        "DescribeDBSubnetGroups": "",
        "DescribeEngineDefaultClusterParameters": [
            "DBParameterGroupFamily"
        ],
        "DescribeEventCategories": "",
        "DescribeEventSubscriptions": "",
        "DescribeEvents": "",
        "DescribeGlobalClusters": "",
        "DescribeOrderableDBInstanceOptions": [
            "Engine"
        ],
        "DescribePendingMaintenanceActions": "",
        "FailoverDBCluster": "",
        "ListTagsForResource": [
            "ResourceName"
        ],
        "ModifyDBCluster": [
            "DBClusterIdentifier"
        ],
        "ModifyDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "Parameters"
        ],
        "ModifyDBClusterSnapshotAttribute": [
            "DBClusterSnapshotIdentifier",
            "AttributeName"
        ],
        "ModifyDBInstance": [
            "DBInstanceIdentifier"
        ],
        "ModifyDBSubnetGroup": [
            "DBSubnetGroupName",
            "SubnetIds"
        ],
        "ModifyEventSubscription": [
            "SubscriptionName"
        ],
        "ModifyGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "RebootDBInstance": [
            "DBInstanceIdentifier"
        ],
        "RemoveFromGlobalCluster": [
            "GlobalClusterIdentifier",
            "DbClusterIdentifier"
        ],
        "RemoveSourceIdentifierFromSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "RemoveTagsFromResource": [
            "ResourceName",
            "TagKeys"
        ],
        "ResetDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "RestoreDBClusterFromSnapshot": [
            "DBClusterIdentifier",
            "SnapshotIdentifier",
            "Engine"
        ],
        "RestoreDBClusterToPointInTime": [
            "DBClusterIdentifier",
            "SourceDBClusterIdentifier"
        ],
        "StartDBCluster": [
            "DBClusterIdentifier"
        ],
        "StopDBCluster": [
            "DBClusterIdentifier"
        ]
    },
    "docdb-elastic": {
        "CopyClusterSnapshot": [
            "snapshotArn",
            "targetSnapshotName"
        ],
        "CreateCluster": [
            "adminUserName",
            "adminUserPassword",
            "authType",
            "clusterName",
            "shardCapacity",
            "shardCount"
        ],
        "CreateClusterSnapshot": [
            "clusterArn",
            "snapshotName"
        ],
        "DeleteCluster": [
            "clusterArn"
        ],
        "DeleteClusterSnapshot": [
            "snapshotArn"
        ],
        "GetCluster": [
            "clusterArn"
        ],
        "GetClusterSnapshot": [
            "snapshotArn"
        ],
        "ListClusterSnapshots": "",
        "ListClusters": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RestoreClusterFromSnapshot": [
            "clusterName",
            "snapshotArn"
        ],
        "StartCluster": [
            "clusterArn"
        ],
        "StopCluster": [
            "clusterArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCluster": [
            "clusterArn"
        ]
    },
    "drs": {
        "AssociateSourceNetworkStack": [
            "cfnStackName",
            "sourceNetworkID"
        ],
        "CreateExtendedSourceServer": [
            "sourceServerArn"
        ],
        "CreateLaunchConfigurationTemplate": "",
        "CreateReplicationConfigurationTemplate": [
            "associateDefaultSecurityGroup",
            "bandwidthThrottling",
            "createPublicIP",
            "dataPlaneRouting",
            "defaultLargeStagingDiskType",
            "ebsEncryption",
            "pitPolicy",
            "replicationServerInstanceType",
            "replicationServersSecurityGroupsIDs",
            "stagingAreaSubnetId",
            "stagingAreaTags",
            "useDedicatedReplicationServer"
        ],
        "CreateSourceNetwork": [
            "originAccountID",
            "originRegion",
            "vpcID"
        ],
        "DeleteJob": [
            "jobID"
        ],
        "DeleteLaunchAction": [
            "actionId",
            "resourceId"
        ],
        "DeleteLaunchConfigurationTemplate": [
            "launchConfigurationTemplateID"
        ],
        "DeleteRecoveryInstance": [
            "recoveryInstanceID"
        ],
        "DeleteReplicationConfigurationTemplate": [
            "replicationConfigurationTemplateID"
        ],
        "DeleteSourceNetwork": [
            "sourceNetworkID"
        ],
        "DeleteSourceServer": [
            "sourceServerID"
        ],
        "DescribeJobLogItems": [
            "jobID"
        ],
        "DescribeJobs": "",
        "DescribeLaunchConfigurationTemplates": "",
        "DescribeRecoveryInstances": "",
        "DescribeRecoverySnapshots": [
            "sourceServerID"
        ],
        "DescribeReplicationConfigurationTemplates": "",
        "DescribeSourceNetworks": "",
        "DescribeSourceServers": "",
        "DisconnectRecoveryInstance": [
            "recoveryInstanceID"
        ],
        "DisconnectSourceServer": [
            "sourceServerID"
        ],
        "ExportSourceNetworkCfnTemplate": [
            "sourceNetworkID"
        ],
        "GetFailbackReplicationConfiguration": [
            "recoveryInstanceID"
        ],
        "GetLaunchConfiguration": [
            "sourceServerID"
        ],
        "GetReplicationConfiguration": [
            "sourceServerID"
        ],
        "InitializeService": "",
        "ListExtensibleSourceServers": [
            "stagingAccountID"
        ],
        "ListLaunchActions": [
            "resourceId"
        ],
        "ListStagingAccounts": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutLaunchAction": [
            "actionCode",
            "actionId",
            "actionVersion",
            "active",
            "category",
            "description",
            "name",
            "optional",
            "order",
            "resourceId"
        ],
        "RetryDataReplication": [
            "sourceServerID"
        ],
        "ReverseReplication": [
            "recoveryInstanceID"
        ],
        "StartFailbackLaunch": [
            "recoveryInstanceIDs"
        ],
        "StartRecovery": [
            "sourceServers"
        ],
        "StartReplication": [
            "sourceServerID"
        ],
        "StartSourceNetworkRecovery": [
            "sourceNetworks"
        ],
        "StartSourceNetworkReplication": [
            "sourceNetworkID"
        ],
        "StopFailback": [
            "recoveryInstanceID"
        ],
        "StopReplication": [
            "sourceServerID"
        ],
        "StopSourceNetworkReplication": [
            "sourceNetworkID"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TerminateRecoveryInstances": [
            "recoveryInstanceIDs"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateFailbackReplicationConfiguration": [
            "recoveryInstanceID"
        ],
        "UpdateLaunchConfiguration": [
            "sourceServerID"
        ],
        "UpdateLaunchConfigurationTemplate": [
            "launchConfigurationTemplateID"
        ],
        "UpdateReplicationConfiguration": [
            "sourceServerID"
        ],
        "UpdateReplicationConfigurationTemplate": [
            "replicationConfigurationTemplateID"
        ]
    },
    "ds": {
        "AcceptSharedDirectory": [
            "SharedDirectoryId"
        ],
        "AddIpRoutes": [
            "DirectoryId",
            "IpRoutes"
        ],
        "AddRegion": [
            "DirectoryId",
            "RegionName",
            "VPCSettings"
        ],
        "AddTagsToResource": [
            "ResourceId",
            "Tags"
        ],
        "CancelSchemaExtension": [
            "DirectoryId",
            "SchemaExtensionId"
        ],
        "ConnectDirectory": [
            "Name",
            "Password",
            "Size",
            "ConnectSettings"
        ],
        "CreateAlias": [
            "DirectoryId",
            "Alias"
        ],
        "CreateComputer": [
            "DirectoryId",
            "ComputerName",
            "Password"
        ],
        "CreateConditionalForwarder": [
            "DirectoryId",
            "RemoteDomainName",
            "DnsIpAddrs"
        ],
        "CreateDirectory": [
            "Name",
            "Password",
            "Size"
        ],
        "CreateLogSubscription": [
            "DirectoryId",
            "LogGroupName"
        ],
        "CreateMicrosoftAD": [
            "Name",
            "Password",
            "VpcSettings"
        ],
        "CreateSnapshot": [
            "DirectoryId"
        ],
        "CreateTrust": [
            "DirectoryId",
            "RemoteDomainName",
            "TrustPassword",
            "TrustDirection"
        ],
        "DeleteConditionalForwarder": [
            "DirectoryId",
            "RemoteDomainName"
        ],
        "DeleteDirectory": [
            "DirectoryId"
        ],
        "DeleteLogSubscription": [
            "DirectoryId"
        ],
        "DeleteSnapshot": [
            "SnapshotId"
        ],
        "DeleteTrust": [
            "TrustId"
        ],
        "DeregisterCertificate": [
            "DirectoryId",
            "CertificateId"
        ],
        "DeregisterEventTopic": [
            "DirectoryId",
            "TopicName"
        ],
        "DescribeCertificate": [
            "DirectoryId",
            "CertificateId"
        ],
        "DescribeClientAuthenticationSettings": [
            "DirectoryId"
        ],
        "DescribeConditionalForwarders": [
            "DirectoryId"
        ],
        "DescribeDirectories": "",
        "DescribeDomainControllers": [
            "DirectoryId"
        ],
        "DescribeEventTopics": "",
        "DescribeLDAPSSettings": [
            "DirectoryId"
        ],
        "DescribeRegions": [
            "DirectoryId"
        ],
        "DescribeSettings": [
            "DirectoryId"
        ],
        "DescribeSharedDirectories": [
            "OwnerDirectoryId"
        ],
        "DescribeSnapshots": "",
        "DescribeTrusts": "",
        "DescribeUpdateDirectory": [
            "DirectoryId",
            "UpdateType"
        ],
        "DisableClientAuthentication": [
            "DirectoryId",
            "Type"
        ],
        "DisableLDAPS": [
            "DirectoryId",
            "Type"
        ],
        "DisableRadius": [
            "DirectoryId"
        ],
        "DisableSso": [
            "DirectoryId"
        ],
        "EnableClientAuthentication": [
            "DirectoryId",
            "Type"
        ],
        "EnableLDAPS": [
            "DirectoryId",
            "Type"
        ],
        "EnableRadius": [
            "DirectoryId",
            "RadiusSettings"
        ],
        "EnableSso": [
            "DirectoryId"
        ],
        "GetDirectoryLimits": "",
        "GetSnapshotLimits": [
            "DirectoryId"
        ],
        "ListCertificates": [
            "DirectoryId"
        ],
        "ListIpRoutes": [
            "DirectoryId"
        ],
        "ListLogSubscriptions": "",
        "ListSchemaExtensions": [
            "DirectoryId"
        ],
        "ListTagsForResource": [
            "ResourceId"
        ],
        "RegisterCertificate": [
            "DirectoryId",
            "CertificateData"
        ],
        "RegisterEventTopic": [
            "DirectoryId",
            "TopicName"
        ],
        "RejectSharedDirectory": [
            "SharedDirectoryId"
        ],
        "RemoveIpRoutes": [
            "DirectoryId",
            "CidrIps"
        ],
        "RemoveRegion": [
            "DirectoryId"
        ],
        "RemoveTagsFromResource": [
            "ResourceId",
            "TagKeys"
        ],
        "ResetUserPassword": [
            "DirectoryId",
            "UserName",
            "NewPassword"
        ],
        "RestoreFromSnapshot": [
            "SnapshotId"
        ],
        "ShareDirectory": [
            "DirectoryId",
            "ShareTarget",
            "ShareMethod"
        ],
        "StartSchemaExtension": [
            "DirectoryId",
            "CreateSnapshotBeforeSchemaExtension",
            "LdifContent",
            "Description"
        ],
        "UnshareDirectory": [
            "DirectoryId",
            "UnshareTarget"
        ],
        "UpdateConditionalForwarder": [
            "DirectoryId",
            "RemoteDomainName",
            "DnsIpAddrs"
        ],
        "UpdateDirectorySetup": [
            "DirectoryId",
            "UpdateType"
        ],
        "UpdateNumberOfDomainControllers": [
            "DirectoryId",
            "DesiredNumber"
        ],
        "UpdateRadius": [
            "DirectoryId",
            "RadiusSettings"
        ],
        "UpdateSettings": [
            "DirectoryId",
            "Settings"
        ],
        "UpdateTrust": [
            "TrustId"
        ],
        "VerifyTrust": [
            "TrustId"
        ]
    },
    "dynamodb": {
        "BatchExecuteStatement": [
            "Statements"
        ],
        "BatchGetItem": [
            "RequestItems"
        ],
        "BatchWriteItem": [
            "RequestItems"
        ],
        "CreateBackup": [
            "TableName",
            "BackupName"
        ],
        "CreateGlobalTable": [
            "GlobalTableName",
            "ReplicationGroup"
        ],
        "CreateTable": [
            "AttributeDefinitions",
            "TableName",
            "KeySchema"
        ],
        "DeleteBackup": [
            "BackupArn"
        ],
        "DeleteItem": [
            "TableName",
            "Key"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteTable": [
            "TableName"
        ],
        "DescribeBackup": [
            "BackupArn"
        ],
        "DescribeContinuousBackups": [
            "TableName"
        ],
        "DescribeContributorInsights": [
            "TableName"
        ],
        "DescribeEndpoints": "",
        "DescribeExport": [
            "ExportArn"
        ],
        "DescribeGlobalTable": [
            "GlobalTableName"
        ],
        "DescribeGlobalTableSettings": [
            "GlobalTableName"
        ],
        "DescribeImport": [
            "ImportArn"
        ],
        "DescribeKinesisStreamingDestination": [
            "TableName"
        ],
        "DescribeLimits": "",
        "DescribeTable": [
            "TableName"
        ],
        "DescribeTableReplicaAutoScaling": [
            "TableName"
        ],
        "DescribeTimeToLive": [
            "TableName"
        ],
        "DisableKinesisStreamingDestination": "",
        "EnableKinesisStreamingDestination": "",
        "ExecuteStatement": [
            "Statement"
        ],
        "ExecuteTransaction": [
            "TransactStatements"
        ],
        "ExportTableToPointInTime": [
            "TableArn",
            "S3Bucket"
        ],
        "GetItem": [
            "TableName",
            "Key"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "ImportTable": [
            "S3BucketSource",
            "InputFormat",
            "TableCreationParameters"
        ],
        "ListBackups": "",
        "ListContributorInsights": "",
        "ListExports": "",
        "ListGlobalTables": "",
        "ListImports": "",
        "ListTables": "",
        "ListTagsOfResource": [
            "ResourceArn"
        ],
        "PutItem": [
            "TableName",
            "Item"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "Policy"
        ],
        "Query": [
            "TableName"
        ],
        "RestoreTableFromBackup": [
            "TargetTableName",
            "BackupArn"
        ],
        "RestoreTableToPointInTime": [
            "TargetTableName"
        ],
        "Scan": [
            "TableName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "TransactGetItems": [
            "TransactItems"
        ],
        "TransactWriteItems": [
            "TransactItems"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateContinuousBackups": [
            "TableName",
            "PointInTimeRecoverySpecification"
        ],
        "UpdateContributorInsights": [
            "TableName",
            "ContributorInsightsAction"
        ],
        "UpdateGlobalTable": [
            "GlobalTableName",
            "ReplicaUpdates"
        ],
        "UpdateGlobalTableSettings": [
            "GlobalTableName"
        ],
        "UpdateItem": [
            "TableName",
            "Key"
        ],
        "UpdateKinesisStreamingDestination": [
            "TableName",
            "StreamArn"
        ],
        "UpdateTable": [
            "TableName"
        ],
        "UpdateTableReplicaAutoScaling": [
            "TableName"
        ],
        "UpdateTimeToLive": [
            "TableName",
            "TimeToLiveSpecification"
        ]
    },
    "ebs": {
        "CompleteSnapshot": [
            "SnapshotId",
            "ChangedBlocksCount"
        ],
        "GetSnapshotBlock": [
            "SnapshotId",
            "BlockIndex",
            "BlockToken"
        ],
        "ListChangedBlocks": [
            "SecondSnapshotId"
        ],
        "ListSnapshotBlocks": [
            "SnapshotId"
        ],
        "PutSnapshotBlock": [
            "SnapshotId",
            "BlockIndex",
            "BlockData",
            "DataLength",
            "Checksum",
            "ChecksumAlgorithm"
        ],
        "StartSnapshot": [
            "VolumeSize"
        ]
    },
    "ec2": {
        "AcceptAddressTransfer": [
            "Address"
        ],
        "AcceptReservedInstancesExchangeQuote": [
            "ReservedInstanceIds"
        ],
        "AcceptTransitGatewayMulticastDomainAssociations": "",
        "AcceptTransitGatewayPeeringAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "AcceptTransitGatewayVpcAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "AcceptVpcEndpointConnections": [
            "ServiceId",
            "VpcEndpointIds"
        ],
        "AcceptVpcPeeringConnection": [
            "VpcPeeringConnectionId"
        ],
        "AdvertiseByoipCidr": [
            "Cidr"
        ],
        "AllocateAddress": "",
        "AllocateHosts": [
            "AvailabilityZone"
        ],
        "AllocateIpamPoolCidr": [
            "IpamPoolId"
        ],
        "ApplySecurityGroupsToClientVpnTargetNetwork": [
            "ClientVpnEndpointId",
            "VpcId",
            "SecurityGroupIds"
        ],
        "AssignIpv6Addresses": [
            "NetworkInterfaceId"
        ],
        "AssignPrivateIpAddresses": [
            "NetworkInterfaceId"
        ],
        "AssignPrivateNatGatewayAddress": [
            "NatGatewayId"
        ],
        "AssociateAddress": "",
        "AssociateClientVpnTargetNetwork": [
            "ClientVpnEndpointId",
            "SubnetId"
        ],
        "AssociateDhcpOptions": [
            "DhcpOptionsId",
            "VpcId"
        ],
        "AssociateEnclaveCertificateIamRole": [
            "CertificateArn",
            "RoleArn"
        ],
        "AssociateIamInstanceProfile": [
            "IamInstanceProfile",
            "InstanceId"
        ],
        "AssociateInstanceEventWindow": [
            "InstanceEventWindowId",
            "AssociationTarget"
        ],
        "AssociateIpamByoasn": [
            "Asn",
            "Cidr"
        ],
        "AssociateIpamResourceDiscovery": [
            "IpamId",
            "IpamResourceDiscoveryId"
        ],
        "AssociateNatGatewayAddress": [
            "NatGatewayId",
            "AllocationIds"
        ],
        "AssociateRouteTable": [
            "RouteTableId"
        ],
        "AssociateSubnetCidrBlock": [
            "SubnetId"
        ],
        "AssociateTransitGatewayMulticastDomain": [
            "TransitGatewayMulticastDomainId",
            "TransitGatewayAttachmentId",
            "SubnetIds"
        ],
        "AssociateTransitGatewayPolicyTable": [
            "TransitGatewayPolicyTableId",
            "TransitGatewayAttachmentId"
        ],
        "AssociateTransitGatewayRouteTable": [
            "TransitGatewayRouteTableId",
            "TransitGatewayAttachmentId"
        ],
        "AssociateTrunkInterface": [
            "BranchInterfaceId",
            "TrunkInterfaceId"
        ],
        "AssociateVpcCidrBlock": [
            "VpcId"
        ],
        "AttachClassicLinkVpc": [
            "Groups",
            "InstanceId",
            "VpcId"
        ],
        "AttachInternetGateway": [
            "InternetGatewayId",
            "VpcId"
        ],
        "AttachNetworkInterface": [
            "DeviceIndex",
            "InstanceId",
            "NetworkInterfaceId"
        ],
        "AttachVerifiedAccessTrustProvider": [
            "VerifiedAccessInstanceId",
            "VerifiedAccessTrustProviderId"
        ],
        "AttachVolume": [
            "Device",
            "InstanceId",
            "VolumeId"
        ],
        "AttachVpnGateway": [
            "VpcId",
            "VpnGatewayId"
        ],
        "AuthorizeClientVpnIngress": [
            "ClientVpnEndpointId",
            "TargetNetworkCidr"
        ],
        "AuthorizeSecurityGroupEgress": [
            "GroupId"
        ],
        "AuthorizeSecurityGroupIngress": "",
        "BundleInstance": [
            "InstanceId",
            "Storage"
        ],
        "CancelBundleTask": [
            "BundleId"
        ],
        "CancelCapacityReservation": [
            "CapacityReservationId"
        ],
        "CancelCapacityReservationFleets": [
            "CapacityReservationFleetIds"
        ],
        "CancelConversionTask": [
            "ConversionTaskId"
        ],
        "CancelExportTask": [
            "ExportTaskId"
        ],
        "CancelImageLaunchPermission": [
            "ImageId"
        ],
        "CancelImportTask": "",
        "CancelReservedInstancesListing": [
            "ReservedInstancesListingId"
        ],
        "CancelSpotFleetRequests": [
            "SpotFleetRequestIds",
            "TerminateInstances"
        ],
        "CancelSpotInstanceRequests": [
            "SpotInstanceRequestIds"
        ],
        "ConfirmProductInstance": [
            "InstanceId",
            "ProductCode"
        ],
        "CopyFpgaImage": [
            "SourceFpgaImageId",
            "SourceRegion"
        ],
        "CopyImage": [
            "Name",
            "SourceImageId",
            "SourceRegion"
        ],
        "CopySnapshot": [
            "SourceRegion",
            "SourceSnapshotId"
        ],
        "CreateCapacityReservation": [
            "InstanceType",
            "InstancePlatform",
            "InstanceCount"
        ],
        "CreateCapacityReservationFleet": [
            "InstanceTypeSpecifications",
            "TotalTargetCapacity"
        ],
        "CreateCarrierGateway": [
            "VpcId"
        ],
        "CreateClientVpnEndpoint": [
            "ClientCidrBlock",
            "ServerCertificateArn",
            "AuthenticationOptions",
            "ConnectionLogOptions"
        ],
        "CreateClientVpnRoute": [
            "ClientVpnEndpointId",
            "DestinationCidrBlock",
            "TargetVpcSubnetId"
        ],
        "CreateCoipCidr": [
            "Cidr",
            "CoipPoolId"
        ],
        "CreateCoipPool": [
            "LocalGatewayRouteTableId"
        ],
        "CreateCustomerGateway": [
            "Type"
        ],
        "CreateDefaultSubnet": [
            "AvailabilityZone"
        ],
        "CreateDefaultVpc": "",
        "CreateDhcpOptions": [
            "DhcpConfigurations"
        ],
        "CreateEgressOnlyInternetGateway": [
            "VpcId"
        ],
        "CreateFleet": [
            "LaunchTemplateConfigs",
            "TargetCapacitySpecification"
        ],
        "CreateFlowLogs": [
            "ResourceIds",
            "ResourceType"
        ],
        "CreateFpgaImage": [
            "InputStorageLocation"
        ],
        "CreateImage": [
            "InstanceId",
            "Name"
        ],
        "CreateInstanceConnectEndpoint": [
            "SubnetId"
        ],
        "CreateInstanceEventWindow": "",
        "CreateInstanceExportTask": [
            "ExportToS3Task",
            "InstanceId",
            "TargetEnvironment"
        ],
        "CreateInternetGateway": "",
        "CreateIpam": "",
        "CreateIpamPool": [
            "IpamScopeId",
            "AddressFamily"
        ],
        "CreateIpamResourceDiscovery": "",
        "CreateIpamScope": [
            "IpamId"
        ],
        "CreateKeyPair": [
            "KeyName"
        ],
        "CreateLaunchTemplate": [
            "LaunchTemplateName",
            "LaunchTemplateData"
        ],
        "CreateLaunchTemplateVersion": [
            "LaunchTemplateData"
        ],
        "CreateLocalGatewayRoute": [
            "LocalGatewayRouteTableId"
        ],
        "CreateLocalGatewayRouteTable": [
            "LocalGatewayId"
        ],
        "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": [
            "LocalGatewayRouteTableId",
            "LocalGatewayVirtualInterfaceGroupId"
        ],
        "CreateLocalGatewayRouteTableVpcAssociation": [
            "LocalGatewayRouteTableId",
            "VpcId"
        ],
        "CreateManagedPrefixList": [
            "PrefixListName",
            "MaxEntries",
            "AddressFamily"
        ],
        "CreateNatGateway": [
            "SubnetId"
        ],
        "CreateNetworkAcl": [
            "VpcId"
        ],
        "CreateNetworkAclEntry": [
            "Egress",
            "NetworkAclId",
            "Protocol",
            "RuleAction",
            "RuleNumber"
        ],
        "CreateNetworkInsightsAccessScope": [
            "ClientToken"
        ],
        "CreateNetworkInsightsPath": [
            "Source",
            "Protocol",
            "ClientToken"
        ],
        "CreateNetworkInterface": [
            "SubnetId"
        ],
        "CreateNetworkInterfacePermission": [
            "NetworkInterfaceId",
            "Permission"
        ],
        "CreatePlacementGroup": "",
        "CreatePublicIpv4Pool": "",
        "CreateReplaceRootVolumeTask": [
            "InstanceId"
        ],
        "CreateReservedInstancesListing": [
            "ClientToken",
            "InstanceCount",
            "PriceSchedules",
            "ReservedInstancesId"
        ],
        "CreateRestoreImageTask": [
            "Bucket",
            "ObjectKey"
        ],
        "CreateRoute": [
            "RouteTableId"
        ],
        "CreateRouteTable": [
            "VpcId"
        ],
        "CreateSecurityGroup": [
            "Description",
            "GroupName"
        ],
        "CreateSnapshot": [
            "VolumeId"
        ],
        "CreateSnapshots": [
            "InstanceSpecification"
        ],
        "CreateSpotDatafeedSubscription": [
            "Bucket"
        ],
        "CreateStoreImageTask": [
            "ImageId",
            "Bucket"
        ],
        "CreateSubnet": [
            "VpcId"
        ],
        "CreateSubnetCidrReservation": [
            "SubnetId",
            "Cidr",
            "ReservationType"
        ],
        "CreateTags": [
            "Resources",
            "Tags"
        ],
        "CreateTrafficMirrorFilter": "",
        "CreateTrafficMirrorFilterRule": [
            "TrafficMirrorFilterId",
            "TrafficDirection",
            "RuleNumber",
            "RuleAction",
            "DestinationCidrBlock",
            "SourceCidrBlock"
        ],
        "CreateTrafficMirrorSession": [
            "NetworkInterfaceId",
            "TrafficMirrorTargetId",
            "TrafficMirrorFilterId",
            "SessionNumber"
        ],
        "CreateTrafficMirrorTarget": "",
        "CreateTransitGateway": "",
        "CreateTransitGatewayConnect": [
            "TransportTransitGatewayAttachmentId",
            "Options"
        ],
        "CreateTransitGatewayConnectPeer": [
            "TransitGatewayAttachmentId",
            "PeerAddress",
            "InsideCidrBlocks"
        ],
        "CreateTransitGatewayMulticastDomain": [
            "TransitGatewayId"
        ],
        "CreateTransitGatewayPeeringAttachment": [
            "TransitGatewayId",
            "PeerTransitGatewayId",
            "PeerAccountId",
            "PeerRegion"
        ],
        "CreateTransitGatewayPolicyTable": [
            "TransitGatewayId"
        ],
        "CreateTransitGatewayPrefixListReference": [
            "TransitGatewayRouteTableId",
            "PrefixListId"
        ],
        "CreateTransitGatewayRoute": [
            "DestinationCidrBlock",
            "TransitGatewayRouteTableId"
        ],
        "CreateTransitGatewayRouteTable": [
            "TransitGatewayId"
        ],
        "CreateTransitGatewayRouteTableAnnouncement": [
            "TransitGatewayRouteTableId",
            "PeeringAttachmentId"
        ],
        "CreateTransitGatewayVpcAttachment": [
            "TransitGatewayId",
            "VpcId",
            "SubnetIds"
        ],
        "CreateVerifiedAccessEndpoint": [
            "VerifiedAccessGroupId",
            "EndpointType",
            "AttachmentType",
            "DomainCertificateArn",
            "ApplicationDomain",
            "EndpointDomainPrefix"
        ],
        "CreateVerifiedAccessGroup": [
            "VerifiedAccessInstanceId"
        ],
        "CreateVerifiedAccessInstance": "",
        "CreateVerifiedAccessTrustProvider": [
            "TrustProviderType",
            "PolicyReferenceName"
        ],
        "CreateVolume": [
            "AvailabilityZone"
        ],
        "CreateVpc": "",
        "CreateVpcEndpoint": [
            "VpcId",
            "ServiceName"
        ],
        "CreateVpcEndpointConnectionNotification": [
            "ConnectionNotificationArn",
            "ConnectionEvents"
        ],
        "CreateVpcEndpointServiceConfiguration": "",
        "CreateVpcPeeringConnection": [
            "VpcId"
        ],
        "CreateVpnConnection": [
            "CustomerGatewayId",
            "Type"
        ],
        "CreateVpnConnectionRoute": [
            "DestinationCidrBlock",
            "VpnConnectionId"
        ],
        "CreateVpnGateway": [
            "Type"
        ],
        "DeleteCarrierGateway": [
            "CarrierGatewayId"
        ],
        "DeleteClientVpnEndpoint": [
            "ClientVpnEndpointId"
        ],
        "DeleteClientVpnRoute": [
            "ClientVpnEndpointId",
            "DestinationCidrBlock"
        ],
        "DeleteCoipCidr": [
            "Cidr",
            "CoipPoolId"
        ],
        "DeleteCoipPool": [
            "CoipPoolId"
        ],
        "DeleteCustomerGateway": [
            "CustomerGatewayId"
        ],
        "DeleteDhcpOptions": [
            "DhcpOptionsId"
        ],
        "DeleteEgressOnlyInternetGateway": [
            "EgressOnlyInternetGatewayId"
        ],
        "DeleteFleets": [
            "FleetIds",
            "TerminateInstances"
        ],
        "DeleteFlowLogs": [
            "FlowLogIds"
        ],
        "DeleteFpgaImage": [
            "FpgaImageId"
        ],
        "DeleteInstanceConnectEndpoint": [
            "InstanceConnectEndpointId"
        ],
        "DeleteInstanceEventWindow": [
            "InstanceEventWindowId"
        ],
        "DeleteInternetGateway": [
            "InternetGatewayId"
        ],
        "DeleteIpam": [
            "IpamId"
        ],
        "DeleteIpamPool": [
            "IpamPoolId"
        ],
        "DeleteIpamResourceDiscovery": [
            "IpamResourceDiscoveryId"
        ],
        "DeleteIpamScope": [
            "IpamScopeId"
        ],
        "DeleteKeyPair": "",
        "DeleteLaunchTemplate": "",
        "DeleteLaunchTemplateVersions": [
            "Versions"
        ],
        "DeleteLocalGatewayRoute": [
            "LocalGatewayRouteTableId"
        ],
        "DeleteLocalGatewayRouteTable": [
            "LocalGatewayRouteTableId"
        ],
        "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": [
            "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
        ],
        "DeleteLocalGatewayRouteTableVpcAssociation": [
            "LocalGatewayRouteTableVpcAssociationId"
        ],
        "DeleteManagedPrefixList": [
            "PrefixListId"
        ],
        "DeleteNatGateway": [
            "NatGatewayId"
        ],
        "DeleteNetworkAcl": [
            "NetworkAclId"
        ],
        "DeleteNetworkAclEntry": [
            "Egress",
            "NetworkAclId",
            "RuleNumber"
        ],
        "DeleteNetworkInsightsAccessScope": [
            "NetworkInsightsAccessScopeId"
        ],
        "DeleteNetworkInsightsAccessScopeAnalysis": [
            "NetworkInsightsAccessScopeAnalysisId"
        ],
        "DeleteNetworkInsightsAnalysis": [
            "NetworkInsightsAnalysisId"
        ],
        "DeleteNetworkInsightsPath": [
            "NetworkInsightsPathId"
        ],
        "DeleteNetworkInterface": [
            "NetworkInterfaceId"
        ],
        "DeleteNetworkInterfacePermission": [
            "NetworkInterfacePermissionId"
        ],
        "DeletePlacementGroup": [
            "GroupName"
        ],
        "DeletePublicIpv4Pool": [
            "PoolId"
        ],
        "DeleteQueuedReservedInstances": [
            "ReservedInstancesIds"
        ],
        "DeleteRoute": [
            "RouteTableId"
        ],
        "DeleteRouteTable": [
            "RouteTableId"
        ],
        "DeleteSecurityGroup": "",
        "DeleteSnapshot": [
            "SnapshotId"
        ],
        "DeleteSpotDatafeedSubscription": "",
        "DeleteSubnet": [
            "SubnetId"
        ],
        "DeleteSubnetCidrReservation": [
            "SubnetCidrReservationId"
        ],
        "DeleteTags": [
            "Resources"
        ],
        "DeleteTrafficMirrorFilter": [
            "TrafficMirrorFilterId"
        ],
        "DeleteTrafficMirrorFilterRule": [
            "TrafficMirrorFilterRuleId"
        ],
        "DeleteTrafficMirrorSession": [
            "TrafficMirrorSessionId"
        ],
        "DeleteTrafficMirrorTarget": [
            "TrafficMirrorTargetId"
        ],
        "DeleteTransitGateway": [
            "TransitGatewayId"
        ],
        "DeleteTransitGatewayConnect": [
            "TransitGatewayAttachmentId"
        ],
        "DeleteTransitGatewayConnectPeer": [
            "TransitGatewayConnectPeerId"
        ],
        "DeleteTransitGatewayMulticastDomain": [
            "TransitGatewayMulticastDomainId"
        ],
        "DeleteTransitGatewayPeeringAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "DeleteTransitGatewayPolicyTable": [
            "TransitGatewayPolicyTableId"
        ],
        "DeleteTransitGatewayPrefixListReference": [
            "TransitGatewayRouteTableId",
            "PrefixListId"
        ],
        "DeleteTransitGatewayRoute": [
            "TransitGatewayRouteTableId",
            "DestinationCidrBlock"
        ],
        "DeleteTransitGatewayRouteTable": [
            "TransitGatewayRouteTableId"
        ],
        "DeleteTransitGatewayRouteTableAnnouncement": [
            "TransitGatewayRouteTableAnnouncementId"
        ],
        "DeleteTransitGatewayVpcAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "DeleteVerifiedAccessEndpoint": [
            "VerifiedAccessEndpointId"
        ],
        "DeleteVerifiedAccessGroup": [
            "VerifiedAccessGroupId"
        ],
        "DeleteVerifiedAccessInstance": [
            "VerifiedAccessInstanceId"
        ],
        "DeleteVerifiedAccessTrustProvider": [
            "VerifiedAccessTrustProviderId"
        ],
        "DeleteVolume": [
            "VolumeId"
        ],
        "DeleteVpc": [
            "VpcId"
        ],
        "DeleteVpcEndpointConnectionNotifications": [
            "ConnectionNotificationIds"
        ],
        "DeleteVpcEndpointServiceConfigurations": [
            "ServiceIds"
        ],
        "DeleteVpcEndpoints": [
            "VpcEndpointIds"
        ],
        "DeleteVpcPeeringConnection": [
            "VpcPeeringConnectionId"
        ],
        "DeleteVpnConnection": [
            "VpnConnectionId"
        ],
        "DeleteVpnConnectionRoute": [
            "DestinationCidrBlock",
            "VpnConnectionId"
        ],
        "DeleteVpnGateway": [
            "VpnGatewayId"
        ],
        "DeprovisionByoipCidr": [
            "Cidr"
        ],
        "DeprovisionIpamByoasn": [
            "IpamId",
            "Asn"
        ],
        "DeprovisionIpamPoolCidr": [
            "IpamPoolId"
        ],
        "DeprovisionPublicIpv4PoolCidr": [
            "PoolId",
            "Cidr"
        ],
        "DeregisterImage": [
            "ImageId"
        ],
        "DeregisterInstanceEventNotificationAttributes": [
            "InstanceTagAttribute"
        ],
        "DeregisterTransitGatewayMulticastGroupMembers": "",
        "DeregisterTransitGatewayMulticastGroupSources": "",
        "DescribeAccountAttributes": "",
        "DescribeAddressTransfers": "",
        "DescribeAddresses": "",
        "DescribeAddressesAttribute": "",
        "DescribeAggregateIdFormat": "",
        "DescribeAvailabilityZones": "",
        "DescribeAwsNetworkPerformanceMetricSubscriptions": "",
        "DescribeBundleTasks": "",
        "DescribeByoipCidrs": [
            "MaxResults"
        ],
        "DescribeCapacityBlockOfferings": [
            "InstanceType",
            "InstanceCount",
            "CapacityDurationHours"
        ],
        "DescribeCapacityReservationFleets": "",
        "DescribeCapacityReservations": "",
        "DescribeCarrierGateways": "",
        "DescribeClassicLinkInstances": "",
        "DescribeClientVpnAuthorizationRules": [
            "ClientVpnEndpointId"
        ],
        "DescribeClientVpnConnections": [
            "ClientVpnEndpointId"
        ],
        "DescribeClientVpnEndpoints": "",
        "DescribeClientVpnRoutes": [
            "ClientVpnEndpointId"
        ],
        "DescribeClientVpnTargetNetworks": [
            "ClientVpnEndpointId"
        ],
        "DescribeCoipPools": "",
        "DescribeConversionTasks": "",
        "DescribeCustomerGateways": "",
        "DescribeDhcpOptions": "",
        "DescribeEgressOnlyInternetGateways": "",
        "DescribeElasticGpus": "",
        "DescribeExportImageTasks": "",
        "DescribeExportTasks": "",
        "DescribeFastLaunchImages": "",
        "DescribeFastSnapshotRestores": "",
        "DescribeFleetHistory": [
            "FleetId",
            "StartTime"
        ],
        "DescribeFleetInstances": [
            "FleetId"
        ],
        "DescribeFleets": "",
        "DescribeFlowLogs": "",
        "DescribeFpgaImageAttribute": [
            "FpgaImageId",
            "Attribute"
        ],
        "DescribeFpgaImages": "",
        "DescribeHostReservationOfferings": "",
        "DescribeHostReservations": "",
        "DescribeHosts": "",
        "DescribeIamInstanceProfileAssociations": "",
        "DescribeIdFormat": "",
        "DescribeIdentityIdFormat": [
            "PrincipalArn"
        ],
        "DescribeImageAttribute": [
            "Attribute",
            "ImageId"
        ],
        "DescribeImages": "",
        "DescribeImportImageTasks": "",
        "DescribeImportSnapshotTasks": "",
        "DescribeInstanceAttribute": [
            "Attribute",
            "InstanceId"
        ],
        "DescribeInstanceConnectEndpoints": "",
        "DescribeInstanceCreditSpecifications": "",
        "DescribeInstanceEventNotificationAttributes": "",
        "DescribeInstanceEventWindows": "",
        "DescribeInstanceStatus": "",
        "DescribeInstanceTopology": "",
        "DescribeInstanceTypeOfferings": "",
        "DescribeInstanceTypes": "",
        "DescribeInstances": "",
        "DescribeInternetGateways": "",
        "DescribeIpamByoasn": "",
        "DescribeIpamPools": "",
        "DescribeIpamResourceDiscoveries": "",
        "DescribeIpamResourceDiscoveryAssociations": "",
        "DescribeIpamScopes": "",
        "DescribeIpams": "",
        "DescribeIpv6Pools": "",
        "DescribeKeyPairs": "",
        "DescribeLaunchTemplateVersions": "",
        "DescribeLaunchTemplates": "",
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": "",
        "DescribeLocalGatewayRouteTableVpcAssociations": "",
        "DescribeLocalGatewayRouteTables": "",
        "DescribeLocalGatewayVirtualInterfaceGroups": "",
        "DescribeLocalGatewayVirtualInterfaces": "",
        "DescribeLocalGateways": "",
        "DescribeLockedSnapshots": "",
        "DescribeMacHosts": "",
        "DescribeManagedPrefixLists": "",
        "DescribeMovingAddresses": "",
        "DescribeNatGateways": "",
        "DescribeNetworkAcls": "",
        "DescribeNetworkInsightsAccessScopeAnalyses": "",
        "DescribeNetworkInsightsAccessScopes": "",
        "DescribeNetworkInsightsAnalyses": "",
        "DescribeNetworkInsightsPaths": "",
        "DescribeNetworkInterfaceAttribute": [
            "NetworkInterfaceId"
        ],
        "DescribeNetworkInterfacePermissions": "",
        "DescribeNetworkInterfaces": "",
        "DescribePlacementGroups": "",
        "DescribePrefixLists": "",
        "DescribePrincipalIdFormat": "",
        "DescribePublicIpv4Pools": "",
        "DescribeRegions": "",
        "DescribeReplaceRootVolumeTasks": "",
        "DescribeReservedInstances": "",
        "DescribeReservedInstancesListings": "",
        "DescribeReservedInstancesModifications": "",
        "DescribeReservedInstancesOfferings": "",
        "DescribeRouteTables": "",
        "DescribeScheduledInstanceAvailability": [
            "FirstSlotStartTimeRange",
            "Recurrence"
        ],
        "DescribeScheduledInstances": "",
        "DescribeSecurityGroupReferences": [
            "GroupId"
        ],
        "DescribeSecurityGroupRules": "",
        "DescribeSecurityGroups": "",
        "DescribeSnapshotAttribute": [
            "Attribute",
            "SnapshotId"
        ],
        "DescribeSnapshotTierStatus": "",
        "DescribeSnapshots": "",
        "DescribeSpotDatafeedSubscription": "",
        "DescribeSpotFleetInstances": [
            "SpotFleetRequestId"
        ],
        "DescribeSpotFleetRequestHistory": [
            "SpotFleetRequestId",
            "StartTime"
        ],
        "DescribeSpotFleetRequests": "",
        "DescribeSpotInstanceRequests": "",
        "DescribeSpotPriceHistory": "",
        "DescribeStaleSecurityGroups": [
            "VpcId"
        ],
        "DescribeStoreImageTasks": "",
        "DescribeSubnets": "",
        "DescribeTags": "",
        "DescribeTrafficMirrorFilters": "",
        "DescribeTrafficMirrorSessions": "",
        "DescribeTrafficMirrorTargets": "",
        "DescribeTransitGatewayAttachments": "",
        "DescribeTransitGatewayConnectPeers": "",
        "DescribeTransitGatewayConnects": "",
        "DescribeTransitGatewayMulticastDomains": "",
        "DescribeTransitGatewayPeeringAttachments": "",
        "DescribeTransitGatewayPolicyTables": "",
        "DescribeTransitGatewayRouteTableAnnouncements": "",
        "DescribeTransitGatewayRouteTables": "",
        "DescribeTransitGatewayVpcAttachments": "",
        "DescribeTransitGateways": "",
        "DescribeTrunkInterfaceAssociations": "",
        "DescribeVerifiedAccessEndpoints": "",
        "DescribeVerifiedAccessGroups": "",
        "DescribeVerifiedAccessInstanceLoggingConfigurations": "",
        "DescribeVerifiedAccessInstances": "",
        "DescribeVerifiedAccessTrustProviders": "",
        "DescribeVolumeAttribute": [
            "Attribute",
            "VolumeId"
        ],
        "DescribeVolumeStatus": "",
        "DescribeVolumes": "",
        "DescribeVolumesModifications": "",
        "DescribeVpcAttribute": [
            "Attribute",
            "VpcId"
        ],
        "DescribeVpcClassicLink": "",
        "DescribeVpcClassicLinkDnsSupport": "",
        "DescribeVpcEndpointConnectionNotifications": "",
        "DescribeVpcEndpointConnections": "",
        "DescribeVpcEndpointServiceConfigurations": "",
        "DescribeVpcEndpointServicePermissions": [
            "ServiceId"
        ],
        "DescribeVpcEndpointServices": "",
        "DescribeVpcEndpoints": "",
        "DescribeVpcPeeringConnections": "",
        "DescribeVpcs": "",
        "DescribeVpnConnections": "",
        "DescribeVpnGateways": "",
        "DetachClassicLinkVpc": [
            "InstanceId",
            "VpcId"
        ],
        "DetachInternetGateway": [
            "InternetGatewayId",
            "VpcId"
        ],
        "DetachNetworkInterface": [
            "AttachmentId"
        ],
        "DetachVerifiedAccessTrustProvider": [
            "VerifiedAccessInstanceId",
            "VerifiedAccessTrustProviderId"
        ],
        "DetachVolume": [
            "VolumeId"
        ],
        "DetachVpnGateway": [
            "VpcId",
            "VpnGatewayId"
        ],
        "DisableAddressTransfer": [
            "AllocationId"
        ],
        "DisableAwsNetworkPerformanceMetricSubscription": "",
        "DisableEbsEncryptionByDefault": "",
        "DisableFastLaunch": [
            "ImageId"
        ],
        "DisableFastSnapshotRestores": [
            "AvailabilityZones",
            "SourceSnapshotIds"
        ],
        "DisableImage": [
            "ImageId"
        ],
        "DisableImageBlockPublicAccess": "",
        "DisableImageDeprecation": [
            "ImageId"
        ],
        "DisableIpamOrganizationAdminAccount": [
            "DelegatedAdminAccountId"
        ],
        "DisableSerialConsoleAccess": "",
        "DisableSnapshotBlockPublicAccess": "",
        "DisableTransitGatewayRouteTablePropagation": [
            "TransitGatewayRouteTableId"
        ],
        "DisableVgwRoutePropagation": [
            "GatewayId",
            "RouteTableId"
        ],
        "DisableVpcClassicLink": [
            "VpcId"
        ],
        "DisableVpcClassicLinkDnsSupport": "",
        "DisassociateAddress": "",
        "DisassociateClientVpnTargetNetwork": [
            "ClientVpnEndpointId",
            "AssociationId"
        ],
        "DisassociateEnclaveCertificateIamRole": [
            "CertificateArn",
            "RoleArn"
        ],
        "DisassociateIamInstanceProfile": [
            "AssociationId"
        ],
        "DisassociateInstanceEventWindow": [
            "InstanceEventWindowId",
            "AssociationTarget"
        ],
        "DisassociateIpamByoasn": [
            "Asn",
            "Cidr"
        ],
        "DisassociateIpamResourceDiscovery": [
            "IpamResourceDiscoveryAssociationId"
        ],
        "DisassociateNatGatewayAddress": [
            "NatGatewayId",
            "AssociationIds"
        ],
        "DisassociateRouteTable": [
            "AssociationId"
        ],
        "DisassociateSubnetCidrBlock": [
            "AssociationId"
        ],
        "DisassociateTransitGatewayMulticastDomain": [
            "TransitGatewayMulticastDomainId",
            "TransitGatewayAttachmentId",
            "SubnetIds"
        ],
        "DisassociateTransitGatewayPolicyTable": [
            "TransitGatewayPolicyTableId",
            "TransitGatewayAttachmentId"
        ],
        "DisassociateTransitGatewayRouteTable": [
            "TransitGatewayRouteTableId",
            "TransitGatewayAttachmentId"
        ],
        "DisassociateTrunkInterface": [
            "AssociationId"
        ],
        "DisassociateVpcCidrBlock": [
            "AssociationId"
        ],
        "EnableAddressTransfer": [
            "AllocationId",
            "TransferAccountId"
        ],
        "EnableAwsNetworkPerformanceMetricSubscription": "",
        "EnableEbsEncryptionByDefault": "",
        "EnableFastLaunch": [
            "ImageId"
        ],
        "EnableFastSnapshotRestores": [
            "AvailabilityZones",
            "SourceSnapshotIds"
        ],
        "EnableImage": [
            "ImageId"
        ],
        "EnableImageBlockPublicAccess": [
            "ImageBlockPublicAccessState"
        ],
        "EnableImageDeprecation": [
            "ImageId",
            "DeprecateAt"
        ],
        "EnableIpamOrganizationAdminAccount": [
            "DelegatedAdminAccountId"
        ],
        "EnableReachabilityAnalyzerOrganizationSharing": "",
        "EnableSerialConsoleAccess": "",
        "EnableSnapshotBlockPublicAccess": [
            "State"
        ],
        "EnableTransitGatewayRouteTablePropagation": [
            "TransitGatewayRouteTableId"
        ],
        "EnableVgwRoutePropagation": [
            "GatewayId",
            "RouteTableId"
        ],
        "EnableVolumeIO": [
            "VolumeId"
        ],
        "EnableVpcClassicLink": [
            "VpcId"
        ],
        "EnableVpcClassicLinkDnsSupport": "",
        "ExportClientVpnClientCertificateRevocationList": [
            "ClientVpnEndpointId"
        ],
        "ExportClientVpnClientConfiguration": [
            "ClientVpnEndpointId"
        ],
        "ExportImage": [
            "DiskImageFormat",
            "ImageId",
            "S3ExportLocation"
        ],
        "ExportTransitGatewayRoutes": [
            "TransitGatewayRouteTableId",
            "S3Bucket"
        ],
        "GetAssociatedEnclaveCertificateIamRoles": [
            "CertificateArn"
        ],
        "GetAssociatedIpv6PoolCidrs": [
            "PoolId"
        ],
        "GetAwsNetworkPerformanceData": "",
        "GetCapacityReservationUsage": [
            "CapacityReservationId"
        ],
        "GetCoipPoolUsage": [
            "PoolId"
        ],
        "GetConsoleOutput": [
            "InstanceId"
        ],
        "GetConsoleScreenshot": [
            "InstanceId"
        ],
        "GetDefaultCreditSpecification": [
            "InstanceFamily"
        ],
        "GetEbsDefaultKmsKeyId": "",
        "GetEbsEncryptionByDefault": "",
        "GetFlowLogsIntegrationTemplate": [
            "FlowLogId",
            "ConfigDeliveryS3DestinationArn",
            "IntegrateServices"
        ],
        "GetGroupsForCapacityReservation": [
            "CapacityReservationId"
        ],
        "GetHostReservationPurchasePreview": [
            "HostIdSet",
            "OfferingId"
        ],
        "GetImageBlockPublicAccessState": "",
        "GetInstanceMetadataDefaults": "",
        "GetInstanceTypesFromInstanceRequirements": [
            "ArchitectureTypes",
            "VirtualizationTypes",
            "InstanceRequirements"
        ],
        "GetInstanceUefiData": [
            "InstanceId"
        ],
        "GetIpamAddressHistory": [
            "Cidr",
            "IpamScopeId"
        ],
        "GetIpamDiscoveredAccounts": [
            "IpamResourceDiscoveryId",
            "DiscoveryRegion"
        ],
        "GetIpamDiscoveredPublicAddresses": [
            "IpamResourceDiscoveryId",
            "AddressRegion"
        ],
        "GetIpamDiscoveredResourceCidrs": [
            "IpamResourceDiscoveryId",
            "ResourceRegion"
        ],
        "GetIpamPoolAllocations": [
            "IpamPoolId"
        ],
        "GetIpamPoolCidrs": [
            "IpamPoolId"
        ],
        "GetIpamResourceCidrs": [
            "IpamScopeId"
        ],
        "GetLaunchTemplateData": [
            "InstanceId"
        ],
        "GetManagedPrefixListAssociations": [
            "PrefixListId"
        ],
        "GetManagedPrefixListEntries": [
            "PrefixListId"
        ],
        "GetNetworkInsightsAccessScopeAnalysisFindings": [
            "NetworkInsightsAccessScopeAnalysisId"
        ],
        "GetNetworkInsightsAccessScopeContent": [
            "NetworkInsightsAccessScopeId"
        ],
        "GetPasswordData": [
            "InstanceId"
        ],
        "GetReservedInstancesExchangeQuote": [
            "ReservedInstanceIds"
        ],
        "GetSecurityGroupsForVpc": [
            "VpcId"
        ],
        "GetSerialConsoleAccessStatus": "",
        "GetSnapshotBlockPublicAccessState": "",
        "GetSpotPlacementScores": [
            "TargetCapacity"
        ],
        "GetSubnetCidrReservations": [
            "SubnetId"
        ],
        "GetTransitGatewayAttachmentPropagations": [
            "TransitGatewayAttachmentId"
        ],
        "GetTransitGatewayMulticastDomainAssociations": [
            "TransitGatewayMulticastDomainId"
        ],
        "GetTransitGatewayPolicyTableAssociations": [
            "TransitGatewayPolicyTableId"
        ],
        "GetTransitGatewayPolicyTableEntries": [
            "TransitGatewayPolicyTableId"
        ],
        "GetTransitGatewayPrefixListReferences": [
            "TransitGatewayRouteTableId"
        ],
        "GetTransitGatewayRouteTableAssociations": [
            "TransitGatewayRouteTableId"
        ],
        "GetTransitGatewayRouteTablePropagations": [
            "TransitGatewayRouteTableId"
        ],
        "GetVerifiedAccessEndpointPolicy": [
            "VerifiedAccessEndpointId"
        ],
        "GetVerifiedAccessGroupPolicy": [
            "VerifiedAccessGroupId"
        ],
        "GetVpnConnectionDeviceSampleConfiguration": [
            "VpnConnectionId",
            "VpnConnectionDeviceTypeId"
        ],
        "GetVpnConnectionDeviceTypes": "",
        "GetVpnTunnelReplacementStatus": [
            "VpnConnectionId",
            "VpnTunnelOutsideIpAddress"
        ],
        "ImportClientVpnClientCertificateRevocationList": [
            "ClientVpnEndpointId",
            "CertificateRevocationList"
        ],
        "ImportImage": "",
        "ImportInstance": [
            "Platform"
        ],
        "ImportKeyPair": [
            "KeyName",
            "PublicKeyMaterial"
        ],
        "ImportSnapshot": "",
        "ImportVolume": [
            "AvailabilityZone",
            "Image",
            "Volume"
        ],
        "ListImagesInRecycleBin": "",
        "ListSnapshotsInRecycleBin": "",
        "LockSnapshot": [
            "SnapshotId",
            "LockMode"
        ],
        "ModifyAddressAttribute": [
            "AllocationId"
        ],
        "ModifyAvailabilityZoneGroup": [
            "GroupName",
            "OptInStatus"
        ],
        "ModifyCapacityReservation": [
            "CapacityReservationId"
        ],
        "ModifyCapacityReservationFleet": [
            "CapacityReservationFleetId"
        ],
        "ModifyClientVpnEndpoint": [
            "ClientVpnEndpointId"
        ],
        "ModifyDefaultCreditSpecification": [
            "InstanceFamily",
            "CpuCredits"
        ],
        "ModifyEbsDefaultKmsKeyId": [
            "KmsKeyId"
        ],
        "ModifyFleet": [
            "FleetId"
        ],
        "ModifyFpgaImageAttribute": [
            "FpgaImageId"
        ],
        "ModifyHosts": [
            "HostIds"
        ],
        "ModifyIdFormat": [
            "Resource",
            "UseLongIds"
        ],
        "ModifyIdentityIdFormat": [
            "PrincipalArn",
            "Resource",
            "UseLongIds"
        ],
        "ModifyImageAttribute": [
            "ImageId"
        ],
        "ModifyInstanceAttribute": [
            "InstanceId"
        ],
        "ModifyInstanceCapacityReservationAttributes": [
            "InstanceId",
            "CapacityReservationSpecification"
        ],
        "ModifyInstanceCreditSpecification": [
            "InstanceCreditSpecifications"
        ],
        "ModifyInstanceEventStartTime": [
            "InstanceId",
            "InstanceEventId",
            "NotBefore"
        ],
        "ModifyInstanceEventWindow": [
            "InstanceEventWindowId"
        ],
        "ModifyInstanceMaintenanceOptions": [
            "InstanceId"
        ],
        "ModifyInstanceMetadataDefaults": "",
        "ModifyInstanceMetadataOptions": [
            "InstanceId"
        ],
        "ModifyInstancePlacement": [
            "InstanceId"
        ],
        "ModifyIpam": [
            "IpamId"
        ],
        "ModifyIpamPool": [
            "IpamPoolId"
        ],
        "ModifyIpamResourceCidr": [
            "ResourceId",
            "ResourceCidr",
            "ResourceRegion",
            "CurrentIpamScopeId",
            "Monitored"
        ],
        "ModifyIpamResourceDiscovery": [
            "IpamResourceDiscoveryId"
        ],
        "ModifyIpamScope": [
            "IpamScopeId"
        ],
        "ModifyLaunchTemplate": "",
        "ModifyLocalGatewayRoute": [
            "LocalGatewayRouteTableId"
        ],
        "ModifyManagedPrefixList": [
            "PrefixListId"
        ],
        "ModifyNetworkInterfaceAttribute": [
            "NetworkInterfaceId"
        ],
        "ModifyPrivateDnsNameOptions": [
            "InstanceId"
        ],
        "ModifyReservedInstances": [
            "ReservedInstancesIds",
            "TargetConfigurations"
        ],
        "ModifySecurityGroupRules": [
            "GroupId",
            "SecurityGroupRules"
        ],
        "ModifySnapshotAttribute": [
            "SnapshotId"
        ],
        "ModifySnapshotTier": [
            "SnapshotId"
        ],
        "ModifySpotFleetRequest": [
            "SpotFleetRequestId"
        ],
        "ModifySubnetAttribute": [
            "SubnetId"
        ],
        "ModifyTrafficMirrorFilterNetworkServices": [
            "TrafficMirrorFilterId"
        ],
        "ModifyTrafficMirrorFilterRule": [
            "TrafficMirrorFilterRuleId"
        ],
        "ModifyTrafficMirrorSession": [
            "TrafficMirrorSessionId"
        ],
        "ModifyTransitGateway": [
            "TransitGatewayId"
        ],
        "ModifyTransitGatewayPrefixListReference": [
            "TransitGatewayRouteTableId",
            "PrefixListId"
        ],
        "ModifyTransitGatewayVpcAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "ModifyVerifiedAccessEndpoint": [
            "VerifiedAccessEndpointId"
        ],
        "ModifyVerifiedAccessEndpointPolicy": [
            "VerifiedAccessEndpointId"
        ],
        "ModifyVerifiedAccessGroup": [
            "VerifiedAccessGroupId"
        ],
        "ModifyVerifiedAccessGroupPolicy": [
            "VerifiedAccessGroupId"
        ],
        "ModifyVerifiedAccessInstance": [
            "VerifiedAccessInstanceId"
        ],
        "ModifyVerifiedAccessInstanceLoggingConfiguration": [
            "VerifiedAccessInstanceId",
            "AccessLogs"
        ],
        "ModifyVerifiedAccessTrustProvider": [
            "VerifiedAccessTrustProviderId"
        ],
        "ModifyVolume": [
            "VolumeId"
        ],
        "ModifyVolumeAttribute": [
            "VolumeId"
        ],
        "ModifyVpcAttribute": [
            "VpcId"
        ],
        "ModifyVpcEndpoint": [
            "VpcEndpointId"
        ],
        "ModifyVpcEndpointConnectionNotification": [
            "ConnectionNotificationId"
        ],
        "ModifyVpcEndpointServiceConfiguration": [
            "ServiceId"
        ],
        "ModifyVpcEndpointServicePayerResponsibility": [
            "ServiceId",
            "PayerResponsibility"
        ],
        "ModifyVpcEndpointServicePermissions": [
            "ServiceId"
        ],
        "ModifyVpcPeeringConnectionOptions": [
            "VpcPeeringConnectionId"
        ],
        "ModifyVpcTenancy": [
            "VpcId",
            "InstanceTenancy"
        ],
        "ModifyVpnConnection": [
            "VpnConnectionId"
        ],
        "ModifyVpnConnectionOptions": [
            "VpnConnectionId"
        ],
        "ModifyVpnTunnelCertificate": [
            "VpnConnectionId",
            "VpnTunnelOutsideIpAddress"
        ],
        "ModifyVpnTunnelOptions": [
            "VpnConnectionId",
            "VpnTunnelOutsideIpAddress",
            "TunnelOptions"
        ],
        "MonitorInstances": [
            "InstanceIds"
        ],
        "MoveAddressToVpc": [
            "PublicIp"
        ],
        "MoveByoipCidrToIpam": [
            "Cidr",
            "IpamPoolId",
            "IpamPoolOwner"
        ],
        "ProvisionByoipCidr": [
            "Cidr"
        ],
        "ProvisionIpamByoasn": [
            "IpamId",
            "Asn",
            "AsnAuthorizationContext"
        ],
        "ProvisionIpamPoolCidr": [
            "IpamPoolId"
        ],
        "ProvisionPublicIpv4PoolCidr": [
            "IpamPoolId",
            "PoolId",
            "NetmaskLength"
        ],
        "PurchaseCapacityBlock": [
            "CapacityBlockOfferingId",
            "InstancePlatform"
        ],
        "PurchaseHostReservation": [
            "HostIdSet",
            "OfferingId"
        ],
        "PurchaseReservedInstancesOffering": [
            "InstanceCount",
            "ReservedInstancesOfferingId"
        ],
        "PurchaseScheduledInstances": [
            "PurchaseRequests"
        ],
        "RebootInstances": [
            "InstanceIds"
        ],
        "RegisterImage": [
            "Name"
        ],
        "RegisterInstanceEventNotificationAttributes": [
            "InstanceTagAttribute"
        ],
        "RegisterTransitGatewayMulticastGroupMembers": [
            "TransitGatewayMulticastDomainId",
            "NetworkInterfaceIds"
        ],
        "RegisterTransitGatewayMulticastGroupSources": [
            "TransitGatewayMulticastDomainId",
            "NetworkInterfaceIds"
        ],
        "RejectTransitGatewayMulticastDomainAssociations": "",
        "RejectTransitGatewayPeeringAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "RejectTransitGatewayVpcAttachment": [
            "TransitGatewayAttachmentId"
        ],
        "RejectVpcEndpointConnections": [
            "ServiceId",
            "VpcEndpointIds"
        ],
        "RejectVpcPeeringConnection": [
            "VpcPeeringConnectionId"
        ],
        "ReleaseAddress": "",
        "ReleaseHosts": [
            "HostIds"
        ],
        "ReleaseIpamPoolAllocation": [
            "IpamPoolId",
            "Cidr",
            "IpamPoolAllocationId"
        ],
        "ReplaceIamInstanceProfileAssociation": [
            "IamInstanceProfile",
            "AssociationId"
        ],
        "ReplaceNetworkAclAssociation": [
            "AssociationId",
            "NetworkAclId"
        ],
        "ReplaceNetworkAclEntry": [
            "Egress",
            "NetworkAclId",
            "Protocol",
            "RuleAction",
            "RuleNumber"
        ],
        "ReplaceRoute": [
            "RouteTableId"
        ],
        "ReplaceRouteTableAssociation": [
            "AssociationId",
            "RouteTableId"
        ],
        "ReplaceTransitGatewayRoute": [
            "DestinationCidrBlock",
            "TransitGatewayRouteTableId"
        ],
        "ReplaceVpnTunnel": [
            "VpnConnectionId",
            "VpnTunnelOutsideIpAddress"
        ],
        "ReportInstanceStatus": [
            "Instances",
            "ReasonCodes",
            "Status"
        ],
        "RequestSpotFleet": [
            "SpotFleetRequestConfig"
        ],
        "RequestSpotInstances": "",
        "ResetAddressAttribute": [
            "AllocationId",
            "Attribute"
        ],
        "ResetEbsDefaultKmsKeyId": "",
        "ResetFpgaImageAttribute": [
            "FpgaImageId"
        ],
        "ResetImageAttribute": [
            "Attribute",
            "ImageId"
        ],
        "ResetInstanceAttribute": [
            "Attribute",
            "InstanceId"
        ],
        "ResetNetworkInterfaceAttribute": [
            "NetworkInterfaceId"
        ],
        "ResetSnapshotAttribute": [
            "Attribute",
            "SnapshotId"
        ],
        "RestoreAddressToClassic": [
            "PublicIp"
        ],
        "RestoreImageFromRecycleBin": [
            "ImageId"
        ],
        "RestoreManagedPrefixListVersion": [
            "PrefixListId",
            "PreviousVersion",
            "CurrentVersion"
        ],
        "RestoreSnapshotFromRecycleBin": [
            "SnapshotId"
        ],
        "RestoreSnapshotTier": [
            "SnapshotId"
        ],
        "RevokeClientVpnIngress": [
            "ClientVpnEndpointId",
            "TargetNetworkCidr"
        ],
        "RevokeSecurityGroupEgress": [
            "GroupId"
        ],
        "RevokeSecurityGroupIngress": "",
        "RunInstances": [
            "MaxCount",
            "MinCount"
        ],
        "RunScheduledInstances": [
            "LaunchSpecification",
            "ScheduledInstanceId"
        ],
        "SearchLocalGatewayRoutes": [
            "LocalGatewayRouteTableId"
        ],
        "SearchTransitGatewayMulticastGroups": [
            "TransitGatewayMulticastDomainId"
        ],
        "SearchTransitGatewayRoutes": [
            "TransitGatewayRouteTableId",
            "Filters"
        ],
        "SendDiagnosticInterrupt": [
            "InstanceId"
        ],
        "StartInstances": [
            "InstanceIds"
        ],
        "StartNetworkInsightsAccessScopeAnalysis": [
            "NetworkInsightsAccessScopeId",
            "ClientToken"
        ],
        "StartNetworkInsightsAnalysis": [
            "NetworkInsightsPathId",
            "ClientToken"
        ],
        "StartVpcEndpointServicePrivateDnsVerification": [
            "ServiceId"
        ],
        "StopInstances": [
            "InstanceIds"
        ],
        "TerminateClientVpnConnections": [
            "ClientVpnEndpointId"
        ],
        "TerminateInstances": [
            "InstanceIds"
        ],
        "UnassignIpv6Addresses": [
            "NetworkInterfaceId"
        ],
        "UnassignPrivateIpAddresses": [
            "NetworkInterfaceId"
        ],
        "UnassignPrivateNatGatewayAddress": [
            "NatGatewayId",
            "PrivateIpAddresses"
        ],
        "UnlockSnapshot": [
            "SnapshotId"
        ],
        "UnmonitorInstances": [
            "InstanceIds"
        ],
        "UpdateSecurityGroupRuleDescriptionsEgress": "",
        "UpdateSecurityGroupRuleDescriptionsIngress": "",
        "WithdrawByoipCidr": [
            "Cidr"
        ]
    },
    "ec2-instance-connect": {
        "SendSSHPublicKey": [
            "InstanceId",
            "InstanceOSUser",
            "SSHPublicKey"
        ],
        "SendSerialConsoleSSHPublicKey": [
            "InstanceId",
            "SSHPublicKey"
        ]
    },
    "ecr": {
        "BatchCheckLayerAvailability": [
            "repositoryName",
            "layerDigests"
        ],
        "BatchDeleteImage": [
            "repositoryName",
            "imageIds"
        ],
        "BatchGetImage": [
            "repositoryName",
            "imageIds"
        ],
        "BatchGetRepositoryScanningConfiguration": [
            "repositoryNames"
        ],
        "CompleteLayerUpload": [
            "repositoryName",
            "uploadId",
            "layerDigests"
        ],
        "CreatePullThroughCacheRule": [
            "ecrRepositoryPrefix",
            "upstreamRegistryUrl"
        ],
        "CreateRepository": [
            "repositoryName"
        ],
        "DeleteLifecyclePolicy": [
            "repositoryName"
        ],
        "DeletePullThroughCacheRule": [
            "ecrRepositoryPrefix"
        ],
        "DeleteRegistryPolicy": "",
        "DeleteRepository": [
            "repositoryName"
        ],
        "DeleteRepositoryPolicy": [
            "repositoryName"
        ],
        "DescribeImageReplicationStatus": [
            "repositoryName",
            "imageId"
        ],
        "DescribeImageScanFindings": [
            "repositoryName",
            "imageId"
        ],
        "DescribeImages": [
            "repositoryName"
        ],
        "DescribePullThroughCacheRules": "",
        "DescribeRegistry": "",
        "DescribeRepositories": "",
        "GetAuthorizationToken": "",
        "GetDownloadUrlForLayer": [
            "repositoryName",
            "layerDigest"
        ],
        "GetLifecyclePolicy": [
            "repositoryName"
        ],
        "GetLifecyclePolicyPreview": [
            "repositoryName"
        ],
        "GetRegistryPolicy": "",
        "GetRegistryScanningConfiguration": "",
        "GetRepositoryPolicy": [
            "repositoryName"
        ],
        "InitiateLayerUpload": [
            "repositoryName"
        ],
        "ListImages": [
            "repositoryName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutImage": [
            "repositoryName",
            "imageManifest"
        ],
        "PutImageScanningConfiguration": [
            "repositoryName",
            "imageScanningConfiguration"
        ],
        "PutImageTagMutability": [
            "repositoryName",
            "imageTagMutability"
        ],
        "PutLifecyclePolicy": [
            "repositoryName",
            "lifecyclePolicyText"
        ],
        "PutRegistryPolicy": [
            "policyText"
        ],
        "PutRegistryScanningConfiguration": "",
        "PutReplicationConfiguration": [
            "replicationConfiguration"
        ],
        "SetRepositoryPolicy": [
            "repositoryName",
            "policyText"
        ],
        "StartImageScan": [
            "repositoryName",
            "imageId"
        ],
        "StartLifecyclePolicyPreview": [
            "repositoryName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdatePullThroughCacheRule": [
            "ecrRepositoryPrefix",
            "credentialArn"
        ],
        "UploadLayerPart": [
            "repositoryName",
            "uploadId",
            "partFirstByte",
            "partLastByte",
            "layerPartBlob"
        ],
        "ValidatePullThroughCacheRule": [
            "ecrRepositoryPrefix"
        ]
    },
    "ecr-public": {
        "BatchCheckLayerAvailability": [
            "repositoryName",
            "layerDigests"
        ],
        "BatchDeleteImage": [
            "repositoryName",
            "imageIds"
        ],
        "CompleteLayerUpload": [
            "repositoryName",
            "uploadId",
            "layerDigests"
        ],
        "CreateRepository": [
            "repositoryName"
        ],
        "DeleteRepository": [
            "repositoryName"
        ],
        "DeleteRepositoryPolicy": [
            "repositoryName"
        ],
        "DescribeImageTags": [
            "repositoryName"
        ],
        "DescribeImages": [
            "repositoryName"
        ],
        "DescribeRegistries": "",
        "DescribeRepositories": "",
        "GetAuthorizationToken": "",
        "GetRegistryCatalogData": "",
        "GetRepositoryCatalogData": [
            "repositoryName"
        ],
        "GetRepositoryPolicy": [
            "repositoryName"
        ],
        "InitiateLayerUpload": [
            "repositoryName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutImage": [
            "repositoryName",
            "imageManifest"
        ],
        "PutRegistryCatalogData": "",
        "PutRepositoryCatalogData": [
            "repositoryName",
            "catalogData"
        ],
        "SetRepositoryPolicy": [
            "repositoryName",
            "policyText"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UploadLayerPart": [
            "repositoryName",
            "uploadId",
            "partFirstByte",
            "partLastByte",
            "layerPartBlob"
        ]
    },
    "ecs": {
        "CreateCapacityProvider": [
            "name",
            "autoScalingGroupProvider"
        ],
        "CreateCluster": "",
        "CreateService": [
            "serviceName"
        ],
        "CreateTaskSet": [
            "service",
            "cluster",
            "taskDefinition"
        ],
        "DeleteAccountSetting": [
            "name"
        ],
        "DeleteAttributes": [
            "attributes"
        ],
        "DeleteCapacityProvider": [
            "capacityProvider"
        ],
        "DeleteCluster": [
            "cluster"
        ],
        "DeleteService": [
            "service"
        ],
        "DeleteTaskDefinitions": [
            "taskDefinitions"
        ],
        "DeleteTaskSet": [
            "cluster",
            "service",
            "taskSet"
        ],
        "DeregisterContainerInstance": [
            "containerInstance"
        ],
        "DeregisterTaskDefinition": [
            "taskDefinition"
        ],
        "DescribeCapacityProviders": "",
        "DescribeClusters": "",
        "DescribeContainerInstances": [
            "containerInstances"
        ],
        "DescribeServices": [
            "services"
        ],
        "DescribeTaskDefinition": [
            "taskDefinition"
        ],
        "DescribeTaskSets": [
            "cluster",
            "service"
        ],
        "DescribeTasks": [
            "tasks"
        ],
        "DiscoverPollEndpoint": "",
        "ExecuteCommand": [
            "command",
            "interactive",
            "task"
        ],
        "GetTaskProtection": [
            "cluster"
        ],
        "ListAccountSettings": "",
        "ListAttributes": [
            "targetType"
        ],
        "ListClusters": "",
        "ListContainerInstances": "",
        "ListServices": "",
        "ListServicesByNamespace": [
            "namespace"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTaskDefinitionFamilies": "",
        "ListTaskDefinitions": "",
        "ListTasks": "",
        "PutAccountSetting": [
            "name",
            "value"
        ],
        "PutAccountSettingDefault": [
            "name",
            "value"
        ],
        "PutAttributes": [
            "attributes"
        ],
        "PutClusterCapacityProviders": [
            "cluster",
            "capacityProviders",
            "defaultCapacityProviderStrategy"
        ],
        "RegisterContainerInstance": "",
        "RegisterTaskDefinition": [
            "family",
            "containerDefinitions"
        ],
        "RunTask": [
            "taskDefinition"
        ],
        "StartTask": [
            "containerInstances",
            "taskDefinition"
        ],
        "StopTask": [
            "task"
        ],
        "SubmitAttachmentStateChanges": [
            "attachments"
        ],
        "SubmitContainerStateChange": "",
        "SubmitTaskStateChange": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCapacityProvider": [
            "name",
            "autoScalingGroupProvider"
        ],
        "UpdateCluster": [
            "cluster"
        ],
        "UpdateClusterSettings": [
            "cluster",
            "settings"
        ],
        "UpdateContainerAgent": [
            "containerInstance"
        ],
        "UpdateContainerInstancesState": [
            "containerInstances",
            "status"
        ],
        "UpdateService": [
            "service"
        ],
        "UpdateServicePrimaryTaskSet": [
            "cluster",
            "service",
            "primaryTaskSet"
        ],
        "UpdateTaskProtection": [
            "cluster",
            "tasks",
            "protectionEnabled"
        ],
        "UpdateTaskSet": [
            "cluster",
            "service",
            "taskSet",
            "scale"
        ]
    },
    "eks": {
        "AssociateAccessPolicy": [
            "clusterName",
            "principalArn",
            "policyArn",
            "accessScope"
        ],
        "AssociateEncryptionConfig": [
            "clusterName",
            "encryptionConfig"
        ],
        "AssociateIdentityProviderConfig": [
            "clusterName",
            "oidc"
        ],
        "CreateAccessEntry": [
            "clusterName",
            "principalArn"
        ],
        "CreateAddon": [
            "clusterName",
            "addonName"
        ],
        "CreateCluster": [
            "name",
            "roleArn",
            "resourcesVpcConfig"
        ],
        "CreateEksAnywhereSubscription": [
            "name",
            "term"
        ],
        "CreateFargateProfile": [
            "fargateProfileName",
            "clusterName",
            "podExecutionRoleArn"
        ],
        "CreateNodegroup": [
            "clusterName",
            "nodegroupName",
            "subnets",
            "nodeRole"
        ],
        "CreatePodIdentityAssociation": [
            "clusterName",
            "namespace",
            "serviceAccount",
            "roleArn"
        ],
        "DeleteAccessEntry": [
            "clusterName",
            "principalArn"
        ],
        "DeleteAddon": [
            "clusterName",
            "addonName"
        ],
        "DeleteCluster": [
            "name"
        ],
        "DeleteEksAnywhereSubscription": [
            "id"
        ],
        "DeleteFargateProfile": [
            "clusterName",
            "fargateProfileName"
        ],
        "DeleteNodegroup": [
            "clusterName",
            "nodegroupName"
        ],
        "DeletePodIdentityAssociation": [
            "clusterName",
            "associationId"
        ],
        "DeregisterCluster": [
            "name"
        ],
        "DescribeAccessEntry": [
            "clusterName",
            "principalArn"
        ],
        "DescribeAddon": [
            "clusterName",
            "addonName"
        ],
        "DescribeAddonConfiguration": [
            "addonName",
            "addonVersion"
        ],
        "DescribeAddonVersions": "",
        "DescribeCluster": [
            "name"
        ],
        "DescribeEksAnywhereSubscription": [
            "id"
        ],
        "DescribeFargateProfile": [
            "clusterName",
            "fargateProfileName"
        ],
        "DescribeIdentityProviderConfig": [
            "clusterName",
            "identityProviderConfig"
        ],
        "DescribeInsight": [
            "clusterName",
            "id"
        ],
        "DescribeNodegroup": [
            "clusterName",
            "nodegroupName"
        ],
        "DescribePodIdentityAssociation": [
            "clusterName",
            "associationId"
        ],
        "DescribeUpdate": [
            "name",
            "updateId"
        ],
        "DisassociateAccessPolicy": [
            "clusterName",
            "principalArn",
            "policyArn"
        ],
        "DisassociateIdentityProviderConfig": [
            "clusterName",
            "identityProviderConfig"
        ],
        "ListAccessEntries": [
            "clusterName"
        ],
        "ListAccessPolicies": "",
        "ListAddons": [
            "clusterName"
        ],
        "ListAssociatedAccessPolicies": [
            "clusterName",
            "principalArn"
        ],
        "ListClusters": "",
        "ListEksAnywhereSubscriptions": "",
        "ListFargateProfiles": [
            "clusterName"
        ],
        "ListIdentityProviderConfigs": [
            "clusterName"
        ],
        "ListInsights": [
            "clusterName"
        ],
        "ListNodegroups": [
            "clusterName"
        ],
        "ListPodIdentityAssociations": [
            "clusterName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListUpdates": [
            "name"
        ],
        "RegisterCluster": [
            "name",
            "connectorConfig"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccessEntry": [
            "clusterName",
            "principalArn"
        ],
        "UpdateAddon": [
            "clusterName",
            "addonName"
        ],
        "UpdateClusterConfig": [
            "name"
        ],
        "UpdateClusterVersion": [
            "name",
            "version"
        ],
        "UpdateEksAnywhereSubscription": [
            "id",
            "autoRenew"
        ],
        "UpdateNodegroupConfig": [
            "clusterName",
            "nodegroupName"
        ],
        "UpdateNodegroupVersion": [
            "clusterName",
            "nodegroupName"
        ],
        "UpdatePodIdentityAssociation": [
            "clusterName",
            "associationId"
        ]
    },
    "eks-auth": {
        "AssumeRoleForPodIdentity": [
            "clusterName",
            "token"
        ]
    },
    "elastic-inference": {
        "DescribeAcceleratorOfferings": [
            "locationType"
        ],
        "DescribeAcceleratorTypes": "",
        "DescribeAccelerators": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "elasticache": {
        "AddTagsToResource": [
            "ResourceName",
            "Tags"
        ],
        "AuthorizeCacheSecurityGroupIngress": [
            "CacheSecurityGroupName",
            "EC2SecurityGroupName",
            "EC2SecurityGroupOwnerId"
        ],
        "BatchApplyUpdateAction": [
            "ServiceUpdateName"
        ],
        "BatchStopUpdateAction": [
            "ServiceUpdateName"
        ],
        "CompleteMigration": [
            "ReplicationGroupId"
        ],
        "CopyServerlessCacheSnapshot": [
            "SourceServerlessCacheSnapshotName",
            "TargetServerlessCacheSnapshotName"
        ],
        "CopySnapshot": [
            "SourceSnapshotName",
            "TargetSnapshotName"
        ],
        "CreateCacheCluster": [
            "CacheClusterId"
        ],
        "CreateCacheParameterGroup": [
            "CacheParameterGroupName",
            "CacheParameterGroupFamily",
            "Description"
        ],
        "CreateCacheSecurityGroup": [
            "CacheSecurityGroupName",
            "Description"
        ],
        "CreateCacheSubnetGroup": [
            "CacheSubnetGroupName",
            "CacheSubnetGroupDescription",
            "SubnetIds"
        ],
        "CreateGlobalReplicationGroup": [
            "GlobalReplicationGroupIdSuffix",
            "PrimaryReplicationGroupId"
        ],
        "CreateReplicationGroup": [
            "ReplicationGroupId",
            "ReplicationGroupDescription"
        ],
        "CreateServerlessCache": [
            "ServerlessCacheName",
            "Engine"
        ],
        "CreateServerlessCacheSnapshot": [
            "ServerlessCacheSnapshotName",
            "ServerlessCacheName"
        ],
        "CreateSnapshot": [
            "SnapshotName"
        ],
        "CreateUser": [
            "UserId",
            "UserName",
            "Engine",
            "AccessString"
        ],
        "CreateUserGroup": [
            "UserGroupId",
            "Engine"
        ],
        "DecreaseNodeGroupsInGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "NodeGroupCount",
            "ApplyImmediately"
        ],
        "DecreaseReplicaCount": [
            "ReplicationGroupId",
            "ApplyImmediately"
        ],
        "DeleteCacheCluster": [
            "CacheClusterId"
        ],
        "DeleteCacheParameterGroup": [
            "CacheParameterGroupName"
        ],
        "DeleteCacheSecurityGroup": [
            "CacheSecurityGroupName"
        ],
        "DeleteCacheSubnetGroup": [
            "CacheSubnetGroupName"
        ],
        "DeleteGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "RetainPrimaryReplicationGroup"
        ],
        "DeleteReplicationGroup": [
            "ReplicationGroupId"
        ],
        "DeleteServerlessCache": [
            "ServerlessCacheName"
        ],
        "DeleteServerlessCacheSnapshot": [
            "ServerlessCacheSnapshotName"
        ],
        "DeleteSnapshot": [
            "SnapshotName"
        ],
        "DeleteUser": [
            "UserId"
        ],
        "DeleteUserGroup": [
            "UserGroupId"
        ],
        "DescribeCacheClusters": "",
        "DescribeCacheEngineVersions": "",
        "DescribeCacheParameterGroups": "",
        "DescribeCacheParameters": [
            "CacheParameterGroupName"
        ],
        "DescribeCacheSecurityGroups": "",
        "DescribeCacheSubnetGroups": "",
        "DescribeEngineDefaultParameters": [
            "CacheParameterGroupFamily"
        ],
        "DescribeEvents": "",
        "DescribeGlobalReplicationGroups": "",
        "DescribeReplicationGroups": "",
        "DescribeReservedCacheNodes": "",
        "DescribeReservedCacheNodesOfferings": "",
        "DescribeServerlessCacheSnapshots": "",
        "DescribeServerlessCaches": "",
        "DescribeServiceUpdates": "",
        "DescribeSnapshots": "",
        "DescribeUpdateActions": "",
        "DescribeUserGroups": "",
        "DescribeUsers": "",
        "DisassociateGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "ReplicationGroupId",
            "ReplicationGroupRegion"
        ],
        "ExportServerlessCacheSnapshot": [
            "ServerlessCacheSnapshotName",
            "S3BucketName"
        ],
        "FailoverGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "PrimaryRegion",
            "PrimaryReplicationGroupId"
        ],
        "IncreaseNodeGroupsInGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "NodeGroupCount",
            "ApplyImmediately"
        ],
        "IncreaseReplicaCount": [
            "ReplicationGroupId",
            "ApplyImmediately"
        ],
        "ListAllowedNodeTypeModifications": "",
        "ListTagsForResource": [
            "ResourceName"
        ],
        "ModifyCacheCluster": [
            "CacheClusterId"
        ],
        "ModifyCacheParameterGroup": [
            "CacheParameterGroupName",
            "ParameterNameValues"
        ],
        "ModifyCacheSubnetGroup": [
            "CacheSubnetGroupName"
        ],
        "ModifyGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "ApplyImmediately"
        ],
        "ModifyReplicationGroup": [
            "ReplicationGroupId"
        ],
        "ModifyReplicationGroupShardConfiguration": [
            "ReplicationGroupId",
            "NodeGroupCount",
            "ApplyImmediately"
        ],
        "ModifyServerlessCache": [
            "ServerlessCacheName"
        ],
        "ModifyUser": [
            "UserId"
        ],
        "ModifyUserGroup": [
            "UserGroupId"
        ],
        "PurchaseReservedCacheNodesOffering": [
            "ReservedCacheNodesOfferingId"
        ],
        "RebalanceSlotsInGlobalReplicationGroup": [
            "GlobalReplicationGroupId",
            "ApplyImmediately"
        ],
        "RebootCacheCluster": [
            "CacheClusterId",
            "CacheNodeIdsToReboot"
        ],
        "RemoveTagsFromResource": [
            "ResourceName",
            "TagKeys"
        ],
        "ResetCacheParameterGroup": [
            "CacheParameterGroupName"
        ],
        "RevokeCacheSecurityGroupIngress": [
            "CacheSecurityGroupName",
            "EC2SecurityGroupName",
            "EC2SecurityGroupOwnerId"
        ],
        "StartMigration": [
            "ReplicationGroupId",
            "CustomerNodeEndpointList"
        ],
        "TestFailover": [
            "ReplicationGroupId",
            "NodeGroupId"
        ],
        "TestMigration": [
            "ReplicationGroupId",
            "CustomerNodeEndpointList"
        ]
    },
    "elasticbeanstalk": {
        "AbortEnvironmentUpdate": "",
        "ApplyEnvironmentManagedAction": [
            "ActionId"
        ],
        "AssociateEnvironmentOperationsRole": [
            "EnvironmentName",
            "OperationsRole"
        ],
        "CheckDNSAvailability": [
            "CNAMEPrefix"
        ],
        "ComposeEnvironments": "",
        "CreateApplication": [
            "ApplicationName"
        ],
        "CreateApplicationVersion": [
            "ApplicationName",
            "VersionLabel"
        ],
        "CreateConfigurationTemplate": [
            "ApplicationName",
            "TemplateName"
        ],
        "CreateEnvironment": [
            "ApplicationName"
        ],
        "CreatePlatformVersion": [
            "PlatformName",
            "PlatformVersion",
            "PlatformDefinitionBundle"
        ],
        "CreateStorageLocation": "",
        "DeleteApplication": [
            "ApplicationName"
        ],
        "DeleteApplicationVersion": [
            "ApplicationName",
            "VersionLabel"
        ],
        "DeleteConfigurationTemplate": [
            "ApplicationName",
            "TemplateName"
        ],
        "DeleteEnvironmentConfiguration": [
            "ApplicationName",
            "EnvironmentName"
        ],
        "DeletePlatformVersion": "",
        "DescribeAccountAttributes": "",
        "DescribeApplicationVersions": "",
        "DescribeApplications": "",
        "DescribeConfigurationOptions": "",
        "DescribeConfigurationSettings": [
            "ApplicationName"
        ],
        "DescribeEnvironmentHealth": "",
        "DescribeEnvironmentManagedActionHistory": "",
        "DescribeEnvironmentManagedActions": "",
        "DescribeEnvironmentResources": "",
        "DescribeEnvironments": "",
        "DescribeEvents": "",
        "DescribeInstancesHealth": "",
        "DescribePlatformVersion": "",
        "DisassociateEnvironmentOperationsRole": [
            "EnvironmentName"
        ],
        "ListAvailableSolutionStacks": "",
        "ListPlatformBranches": "",
        "ListPlatformVersions": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RebuildEnvironment": "",
        "RequestEnvironmentInfo": [
            "InfoType"
        ],
        "RestartAppServer": "",
        "RetrieveEnvironmentInfo": [
            "InfoType"
        ],
        "SwapEnvironmentCNAMEs": "",
        "TerminateEnvironment": "",
        "UpdateApplication": [
            "ApplicationName"
        ],
        "UpdateApplicationResourceLifecycle": [
            "ApplicationName",
            "ResourceLifecycleConfig"
        ],
        "UpdateApplicationVersion": [
            "ApplicationName",
            "VersionLabel"
        ],
        "UpdateConfigurationTemplate": [
            "ApplicationName",
            "TemplateName"
        ],
        "UpdateEnvironment": "",
        "UpdateTagsForResource": [
            "ResourceArn"
        ],
        "ValidateConfigurationSettings": [
            "ApplicationName",
            "OptionSettings"
        ]
    },
    "elasticfilesystem": {
        "CreateAccessPoint": [
            "ClientToken",
            "FileSystemId"
        ],
        "CreateFileSystem": [
            "CreationToken"
        ],
        "CreateMountTarget": [
            "FileSystemId",
            "SubnetId"
        ],
        "CreateReplicationConfiguration": [
            "SourceFileSystemId",
            "Destinations"
        ],
        "CreateTags": [
            "FileSystemId",
            "Tags"
        ],
        "DeleteAccessPoint": [
            "AccessPointId"
        ],
        "DeleteFileSystem": [
            "FileSystemId"
        ],
        "DeleteFileSystemPolicy": [
            "FileSystemId"
        ],
        "DeleteMountTarget": [
            "MountTargetId"
        ],
        "DeleteReplicationConfiguration": [
            "SourceFileSystemId"
        ],
        "DeleteTags": [
            "FileSystemId",
            "TagKeys"
        ],
        "DescribeAccessPoints": "",
        "DescribeAccountPreferences": "",
        "DescribeBackupPolicy": [
            "FileSystemId"
        ],
        "DescribeFileSystemPolicy": [
            "FileSystemId"
        ],
        "DescribeFileSystems": "",
        "DescribeLifecycleConfiguration": [
            "FileSystemId"
        ],
        "DescribeMountTargetSecurityGroups": [
            "MountTargetId"
        ],
        "DescribeMountTargets": "",
        "DescribeReplicationConfigurations": "",
        "DescribeTags": [
            "FileSystemId"
        ],
        "ListTagsForResource": [
            "ResourceId"
        ],
        "ModifyMountTargetSecurityGroups": [
            "MountTargetId"
        ],
        "PutAccountPreferences": [
            "ResourceIdType"
        ],
        "PutBackupPolicy": [
            "FileSystemId",
            "BackupPolicy"
        ],
        "PutFileSystemPolicy": [
            "FileSystemId",
            "Policy"
        ],
        "PutLifecycleConfiguration": [
            "FileSystemId",
            "LifecyclePolicies"
        ],
        "TagResource": [
            "ResourceId",
            "Tags"
        ],
        "UntagResource": [
            "ResourceId",
            "TagKeys"
        ],
        "UpdateFileSystem": [
            "FileSystemId"
        ],
        "UpdateFileSystemProtection": [
            "FileSystemId"
        ]
    },
    "elasticloadbalancing": {
        "AddTags": [
            "LoadBalancerNames",
            "Tags"
        ],
        "ApplySecurityGroupsToLoadBalancer": [
            "LoadBalancerName",
            "SecurityGroups"
        ],
        "AttachLoadBalancerToSubnets": [
            "LoadBalancerName",
            "Subnets"
        ],
        "ConfigureHealthCheck": [
            "LoadBalancerName",
            "HealthCheck"
        ],
        "CreateAppCookieStickinessPolicy": [
            "LoadBalancerName",
            "PolicyName",
            "CookieName"
        ],
        "CreateLBCookieStickinessPolicy": [
            "LoadBalancerName",
            "PolicyName"
        ],
        "CreateLoadBalancer": [
            "LoadBalancerName",
            "Listeners"
        ],
        "CreateLoadBalancerListeners": [
            "LoadBalancerName",
            "Listeners"
        ],
        "CreateLoadBalancerPolicy": [
            "LoadBalancerName",
            "PolicyName",
            "PolicyTypeName"
        ],
        "DeleteLoadBalancer": [
            "LoadBalancerName"
        ],
        "DeleteLoadBalancerListeners": [
            "LoadBalancerName",
            "LoadBalancerPorts"
        ],
        "DeleteLoadBalancerPolicy": [
            "LoadBalancerName",
            "PolicyName"
        ],
        "DeregisterInstancesFromLoadBalancer": [
            "LoadBalancerName",
            "Instances"
        ],
        "DescribeAccountLimits": "",
        "DescribeInstanceHealth": [
            "LoadBalancerName"
        ],
        "DescribeLoadBalancerAttributes": [
            "LoadBalancerName"
        ],
        "DescribeLoadBalancerPolicies": "",
        "DescribeLoadBalancerPolicyTypes": "",
        "DescribeLoadBalancers": "",
        "DescribeTags": [
            "LoadBalancerNames"
        ],
        "DetachLoadBalancerFromSubnets": [
            "LoadBalancerName",
            "Subnets"
        ],
        "DisableAvailabilityZonesForLoadBalancer": [
            "LoadBalancerName",
            "AvailabilityZones"
        ],
        "EnableAvailabilityZonesForLoadBalancer": [
            "LoadBalancerName",
            "AvailabilityZones"
        ],
        "ModifyLoadBalancerAttributes": [
            "LoadBalancerName",
            "LoadBalancerAttributes"
        ],
        "RegisterInstancesWithLoadBalancer": [
            "LoadBalancerName",
            "Instances"
        ],
        "RemoveTags": [
            "LoadBalancerNames",
            "Tags"
        ],
        "SetLoadBalancerListenerSSLCertificate": [
            "LoadBalancerName",
            "LoadBalancerPort",
            "SSLCertificateId"
        ],
        "SetLoadBalancerPoliciesForBackendServer": [
            "LoadBalancerName",
            "InstancePort",
            "PolicyNames"
        ],
        "SetLoadBalancerPoliciesOfListener": [
            "LoadBalancerName",
            "LoadBalancerPort",
            "PolicyNames"
        ]
    },
    "elasticloadbalancingv2": {
        "AddListenerCertificates": [
            "ListenerArn",
            "Certificates"
        ],
        "AddTags": [
            "ResourceArns",
            "Tags"
        ],
        "AddTrustStoreRevocations": [
            "TrustStoreArn"
        ],
        "CreateListener": [
            "LoadBalancerArn",
            "DefaultActions"
        ],
        "CreateLoadBalancer": [
            "Name"
        ],
        "CreateRule": [
            "ListenerArn",
            "Conditions",
            "Priority",
            "Actions"
        ],
        "CreateTargetGroup": [
            "Name"
        ],
        "CreateTrustStore": [
            "Name",
            "CaCertificatesBundleS3Bucket",
            "CaCertificatesBundleS3Key"
        ],
        "DeleteListener": [
            "ListenerArn"
        ],
        "DeleteLoadBalancer": [
            "LoadBalancerArn"
        ],
        "DeleteRule": [
            "RuleArn"
        ],
        "DeleteTargetGroup": [
            "TargetGroupArn"
        ],
        "DeleteTrustStore": [
            "TrustStoreArn"
        ],
        "DeregisterTargets": [
            "TargetGroupArn",
            "Targets"
        ],
        "DescribeAccountLimits": "",
        "DescribeListenerCertificates": [
            "ListenerArn"
        ],
        "DescribeListeners": "",
        "DescribeLoadBalancerAttributes": [
            "LoadBalancerArn"
        ],
        "DescribeLoadBalancers": "",
        "DescribeRules": "",
        "DescribeSSLPolicies": "",
        "DescribeTags": [
            "ResourceArns"
        ],
        "DescribeTargetGroupAttributes": [
            "TargetGroupArn"
        ],
        "DescribeTargetGroups": "",
        "DescribeTargetHealth": [
            "TargetGroupArn"
        ],
        "DescribeTrustStoreAssociations": [
            "TrustStoreArn"
        ],
        "DescribeTrustStoreRevocations": [
            "TrustStoreArn"
        ],
        "DescribeTrustStores": "",
        "GetTrustStoreCaCertificatesBundle": [
            "TrustStoreArn"
        ],
        "GetTrustStoreRevocationContent": [
            "TrustStoreArn",
            "RevocationId"
        ],
        "ModifyListener": [
            "ListenerArn"
        ],
        "ModifyLoadBalancerAttributes": [
            "LoadBalancerArn",
            "Attributes"
        ],
        "ModifyRule": [
            "RuleArn"
        ],
        "ModifyTargetGroup": [
            "TargetGroupArn"
        ],
        "ModifyTargetGroupAttributes": [
            "TargetGroupArn",
            "Attributes"
        ],
        "ModifyTrustStore": [
            "TrustStoreArn",
            "CaCertificatesBundleS3Bucket",
            "CaCertificatesBundleS3Key"
        ],
        "RegisterTargets": [
            "TargetGroupArn",
            "Targets"
        ],
        "RemoveListenerCertificates": [
            "ListenerArn",
            "Certificates"
        ],
        "RemoveTags": [
            "ResourceArns",
            "TagKeys"
        ],
        "RemoveTrustStoreRevocations": [
            "TrustStoreArn",
            "RevocationIds"
        ],
        "SetIpAddressType": [
            "LoadBalancerArn",
            "IpAddressType"
        ],
        "SetRulePriorities": [
            "RulePriorities"
        ],
        "SetSecurityGroups": [
            "LoadBalancerArn",
            "SecurityGroups"
        ],
        "SetSubnets": [
            "LoadBalancerArn"
        ]
    },
    "elasticmapreduce": {
        "AddInstanceFleet": [
            "ClusterId",
            "InstanceFleet"
        ],
        "AddInstanceGroups": [
            "InstanceGroups",
            "JobFlowId"
        ],
        "AddJobFlowSteps": [
            "JobFlowId",
            "Steps"
        ],
        "AddTags": [
            "ResourceId",
            "Tags"
        ],
        "CancelSteps": [
            "ClusterId",
            "StepIds"
        ],
        "CreateSecurityConfiguration": [
            "Name",
            "SecurityConfiguration"
        ],
        "CreateStudio": [
            "Name",
            "AuthMode",
            "VpcId",
            "SubnetIds",
            "ServiceRole",
            "WorkspaceSecurityGroupId",
            "EngineSecurityGroupId",
            "DefaultS3Location"
        ],
        "CreateStudioSessionMapping": [
            "StudioId",
            "IdentityType",
            "SessionPolicyArn"
        ],
        "DeleteSecurityConfiguration": [
            "Name"
        ],
        "DeleteStudio": [
            "StudioId"
        ],
        "DeleteStudioSessionMapping": [
            "StudioId",
            "IdentityType"
        ],
        "DescribeCluster": [
            "ClusterId"
        ],
        "DescribeJobFlows": "",
        "DescribeNotebookExecution": [
            "NotebookExecutionId"
        ],
        "DescribeReleaseLabel": "",
        "DescribeSecurityConfiguration": [
            "Name"
        ],
        "DescribeStep": [
            "ClusterId",
            "StepId"
        ],
        "DescribeStudio": [
            "StudioId"
        ],
        "GetAutoTerminationPolicy": [
            "ClusterId"
        ],
        "GetBlockPublicAccessConfiguration": "",
        "GetClusterSessionCredentials": [
            "ClusterId"
        ],
        "GetManagedScalingPolicy": [
            "ClusterId"
        ],
        "GetStudioSessionMapping": [
            "StudioId",
            "IdentityType"
        ],
        "ListBootstrapActions": [
            "ClusterId"
        ],
        "ListClusters": "",
        "ListInstanceFleets": [
            "ClusterId"
        ],
        "ListInstanceGroups": [
            "ClusterId"
        ],
        "ListInstances": [
            "ClusterId"
        ],
        "ListNotebookExecutions": "",
        "ListReleaseLabels": "",
        "ListSecurityConfigurations": "",
        "ListSteps": [
            "ClusterId"
        ],
        "ListStudioSessionMappings": "",
        "ListStudios": "",
        "ListSupportedInstanceTypes": [
            "ReleaseLabel"
        ],
        "ModifyCluster": [
            "ClusterId"
        ],
        "ModifyInstanceFleet": [
            "ClusterId",
            "InstanceFleet"
        ],
        "ModifyInstanceGroups": "",
        "PutAutoScalingPolicy": [
            "ClusterId",
            "InstanceGroupId",
            "AutoScalingPolicy"
        ],
        "PutAutoTerminationPolicy": [
            "ClusterId"
        ],
        "PutBlockPublicAccessConfiguration": [
            "BlockPublicAccessConfiguration"
        ],
        "PutManagedScalingPolicy": [
            "ClusterId",
            "ManagedScalingPolicy"
        ],
        "RemoveAutoScalingPolicy": [
            "ClusterId",
            "InstanceGroupId"
        ],
        "RemoveAutoTerminationPolicy": [
            "ClusterId"
        ],
        "RemoveManagedScalingPolicy": [
            "ClusterId"
        ],
        "RemoveTags": [
            "ResourceId",
            "TagKeys"
        ],
        "RunJobFlow": [
            "Name",
            "Instances"
        ],
        "SetKeepJobFlowAliveWhenNoSteps": [
            "JobFlowIds",
            "KeepJobFlowAliveWhenNoSteps"
        ],
        "SetTerminationProtection": [
            "JobFlowIds",
            "TerminationProtected"
        ],
        "SetUnhealthyNodeReplacement": [
            "JobFlowIds",
            "UnhealthyNodeReplacement"
        ],
        "SetVisibleToAllUsers": [
            "JobFlowIds",
            "VisibleToAllUsers"
        ],
        "StartNotebookExecution": [
            "ExecutionEngine",
            "ServiceRole"
        ],
        "StopNotebookExecution": [
            "NotebookExecutionId"
        ],
        "TerminateJobFlows": [
            "JobFlowIds"
        ],
        "UpdateStudio": [
            "StudioId"
        ],
        "UpdateStudioSessionMapping": [
            "StudioId",
            "IdentityType",
            "SessionPolicyArn"
        ]
    },
    "elastictranscoder": {
        "CancelJob": [
            "Id"
        ],
        "CreateJob": [
            "PipelineId"
        ],
        "CreatePipeline": [
            "Name",
            "InputBucket",
            "Role"
        ],
        "CreatePreset": [
            "Name",
            "Container"
        ],
        "DeletePipeline": [
            "Id"
        ],
        "DeletePreset": [
            "Id"
        ],
        "ListJobsByPipeline": [
            "PipelineId"
        ],
        "ListJobsByStatus": [
            "Status"
        ],
        "ListPipelines": "",
        "ListPresets": "",
        "ReadJob": [
            "Id"
        ],
        "ReadPipeline": [
            "Id"
        ],
        "ReadPreset": [
            "Id"
        ],
        "TestRole": [
            "Role",
            "InputBucket",
            "OutputBucket",
            "Topics"
        ],
        "UpdatePipeline": [
            "Id"
        ],
        "UpdatePipelineNotifications": [
            "Id",
            "Notifications"
        ],
        "UpdatePipelineStatus": [
            "Id",
            "Status"
        ]
    },
    "email": {
        "CloneReceiptRuleSet": [
            "RuleSetName",
            "OriginalRuleSetName"
        ],
        "CreateConfigurationSet": [
            "ConfigurationSet"
        ],
        "CreateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestination"
        ],
        "CreateConfigurationSetTrackingOptions": [
            "ConfigurationSetName",
            "TrackingOptions"
        ],
        "CreateCustomVerificationEmailTemplate": [
            "TemplateName",
            "FromEmailAddress",
            "TemplateSubject",
            "TemplateContent",
            "SuccessRedirectionURL",
            "FailureRedirectionURL"
        ],
        "CreateReceiptFilter": [
            "Filter"
        ],
        "CreateReceiptRule": [
            "RuleSetName",
            "Rule"
        ],
        "CreateReceiptRuleSet": [
            "RuleSetName"
        ],
        "CreateTemplate": [
            "Template"
        ],
        "DeleteConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DeleteConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName"
        ],
        "DeleteConfigurationSetTrackingOptions": [
            "ConfigurationSetName"
        ],
        "DeleteCustomVerificationEmailTemplate": [
            "TemplateName"
        ],
        "DeleteIdentity": [
            "Identity"
        ],
        "DeleteIdentityPolicy": [
            "Identity",
            "PolicyName"
        ],
        "DeleteReceiptFilter": [
            "FilterName"
        ],
        "DeleteReceiptRule": [
            "RuleSetName",
            "RuleName"
        ],
        "DeleteReceiptRuleSet": [
            "RuleSetName"
        ],
        "DeleteTemplate": [
            "TemplateName"
        ],
        "DeleteVerifiedEmailAddress": [
            "EmailAddress"
        ],
        "DescribeActiveReceiptRuleSet": "",
        "DescribeConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DescribeReceiptRule": [
            "RuleSetName",
            "RuleName"
        ],
        "DescribeReceiptRuleSet": [
            "RuleSetName"
        ],
        "GetAccountSendingEnabled": "",
        "GetCustomVerificationEmailTemplate": [
            "TemplateName"
        ],
        "GetIdentityDkimAttributes": [
            "Identities"
        ],
        "GetIdentityMailFromDomainAttributes": [
            "Identities"
        ],
        "GetIdentityNotificationAttributes": [
            "Identities"
        ],
        "GetIdentityPolicies": [
            "Identity",
            "PolicyNames"
        ],
        "GetIdentityVerificationAttributes": [
            "Identities"
        ],
        "GetSendQuota": "",
        "GetSendStatistics": "",
        "GetTemplate": [
            "TemplateName"
        ],
        "ListConfigurationSets": "",
        "ListCustomVerificationEmailTemplates": "",
        "ListIdentities": "",
        "ListIdentityPolicies": [
            "Identity"
        ],
        "ListReceiptFilters": "",
        "ListReceiptRuleSets": "",
        "ListTemplates": "",
        "ListVerifiedEmailAddresses": "",
        "PutConfigurationSetDeliveryOptions": [
            "ConfigurationSetName"
        ],
        "PutIdentityPolicy": [
            "Identity",
            "PolicyName",
            "Policy"
        ],
        "ReorderReceiptRuleSet": [
            "RuleSetName",
            "RuleNames"
        ],
        "SendBounce": [
            "OriginalMessageId",
            "BounceSender",
            "BouncedRecipientInfoList"
        ],
        "SendBulkTemplatedEmail": [
            "Source",
            "Template",
            "Destinations"
        ],
        "SendCustomVerificationEmail": [
            "EmailAddress",
            "TemplateName"
        ],
        "SendEmail": [
            "Source",
            "Destination",
            "Message"
        ],
        "SendRawEmail": [
            "RawMessage"
        ],
        "SendTemplatedEmail": [
            "Source",
            "Destination",
            "Template",
            "TemplateData"
        ],
        "SetActiveReceiptRuleSet": "",
        "SetIdentityDkimEnabled": [
            "Identity",
            "DkimEnabled"
        ],
        "SetIdentityFeedbackForwardingEnabled": [
            "Identity",
            "ForwardingEnabled"
        ],
        "SetIdentityHeadersInNotificationsEnabled": [
            "Identity",
            "NotificationType",
            "Enabled"
        ],
        "SetIdentityMailFromDomain": [
            "Identity"
        ],
        "SetIdentityNotificationTopic": [
            "Identity",
            "NotificationType"
        ],
        "SetReceiptRulePosition": [
            "RuleSetName",
            "RuleName"
        ],
        "TestRenderTemplate": [
            "TemplateName",
            "TemplateData"
        ],
        "UpdateAccountSendingEnabled": "",
        "UpdateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestination"
        ],
        "UpdateConfigurationSetReputationMetricsEnabled": [
            "ConfigurationSetName",
            "Enabled"
        ],
        "UpdateConfigurationSetSendingEnabled": [
            "ConfigurationSetName",
            "Enabled"
        ],
        "UpdateConfigurationSetTrackingOptions": [
            "ConfigurationSetName",
            "TrackingOptions"
        ],
        "UpdateCustomVerificationEmailTemplate": [
            "TemplateName"
        ],
        "UpdateReceiptRule": [
            "RuleSetName",
            "Rule"
        ],
        "UpdateTemplate": [
            "Template"
        ],
        "VerifyDomainDkim": [
            "Domain"
        ],
        "VerifyDomainIdentity": [
            "Domain"
        ],
        "VerifyEmailAddress": [
            "EmailAddress"
        ],
        "VerifyEmailIdentity": [
            "EmailAddress"
        ]
    },
    "emr-containers": {
        "CancelJobRun": [
            "id",
            "virtualClusterId"
        ],
        "CreateJobTemplate": [
            "name",
            "clientToken",
            "jobTemplateData"
        ],
        "CreateManagedEndpoint": [
            "name",
            "virtualClusterId",
            "type",
            "releaseLabel",
            "executionRoleArn",
            "clientToken"
        ],
        "CreateVirtualCluster": [
            "name",
            "containerProvider",
            "clientToken"
        ],
        "DeleteJobTemplate": [
            "id"
        ],
        "DeleteManagedEndpoint": [
            "id",
            "virtualClusterId"
        ],
        "DeleteVirtualCluster": [
            "id"
        ],
        "DescribeJobRun": [
            "id",
            "virtualClusterId"
        ],
        "DescribeJobTemplate": [
            "id"
        ],
        "DescribeManagedEndpoint": [
            "id",
            "virtualClusterId"
        ],
        "DescribeVirtualCluster": [
            "id"
        ],
        "GetManagedEndpointSessionCredentials": [
            "executionRoleArn",
            "credentialType",
            "endpointIdentifier",
            "virtualClusterIdentifier"
        ],
        "ListJobRuns": [
            "virtualClusterId"
        ],
        "ListJobTemplates": "",
        "ListManagedEndpoints": [
            "virtualClusterId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListVirtualClusters": "",
        "StartJobRun": [
            "virtualClusterId",
            "clientToken"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "emr-serverless": {
        "CancelJobRun": [
            "applicationId",
            "jobRunId"
        ],
        "CreateApplication": [
            "releaseLabel",
            "type",
            "clientToken"
        ],
        "DeleteApplication": [
            "applicationId"
        ],
        "GetApplication": [
            "applicationId"
        ],
        "GetDashboardForJobRun": [
            "applicationId",
            "jobRunId"
        ],
        "GetJobRun": [
            "applicationId",
            "jobRunId"
        ],
        "ListApplications": "",
        "ListJobRuns": [
            "applicationId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartApplication": [
            "applicationId"
        ],
        "StartJobRun": [
            "applicationId",
            "clientToken",
            "executionRoleArn"
        ],
        "StopApplication": [
            "applicationId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "applicationId",
            "clientToken"
        ]
    },
    "entitlement.marketplace": {
        "GetEntitlements": [
            "ProductCode"
        ]
    },
    "entityresolution": {
        "CreateIdMappingWorkflow": [
            "idMappingTechniques",
            "inputSourceConfig",
            "outputSourceConfig",
            "roleArn",
            "workflowName"
        ],
        "CreateMatchingWorkflow": [
            "inputSourceConfig",
            "outputSourceConfig",
            "resolutionTechniques",
            "roleArn",
            "workflowName"
        ],
        "CreateSchemaMapping": [
            "mappedInputFields",
            "schemaName"
        ],
        "DeleteIdMappingWorkflow": [
            "workflowName"
        ],
        "DeleteMatchingWorkflow": [
            "workflowName"
        ],
        "DeleteSchemaMapping": [
            "schemaName"
        ],
        "GetIdMappingJob": [
            "jobId",
            "workflowName"
        ],
        "GetIdMappingWorkflow": [
            "workflowName"
        ],
        "GetMatchId": [
            "record",
            "workflowName"
        ],
        "GetMatchingJob": [
            "jobId",
            "workflowName"
        ],
        "GetMatchingWorkflow": [
            "workflowName"
        ],
        "GetProviderService": [
            "providerName",
            "providerServiceName"
        ],
        "GetSchemaMapping": [
            "schemaName"
        ],
        "ListIdMappingJobs": [
            "workflowName"
        ],
        "ListIdMappingWorkflows": "",
        "ListMatchingJobs": [
            "workflowName"
        ],
        "ListMatchingWorkflows": "",
        "ListProviderServices": "",
        "ListSchemaMappings": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartIdMappingJob": [
            "workflowName"
        ],
        "StartMatchingJob": [
            "workflowName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateIdMappingWorkflow": [
            "idMappingTechniques",
            "inputSourceConfig",
            "outputSourceConfig",
            "roleArn",
            "workflowName"
        ],
        "UpdateMatchingWorkflow": [
            "inputSourceConfig",
            "outputSourceConfig",
            "resolutionTechniques",
            "roleArn",
            "workflowName"
        ],
        "UpdateSchemaMapping": [
            "mappedInputFields",
            "schemaName"
        ]
    },
    "es": {
        "AcceptInboundCrossClusterSearchConnection": [
            "CrossClusterSearchConnectionId"
        ],
        "AddTags": [
            "ARN",
            "TagList"
        ],
        "AssociatePackage": [
            "PackageID",
            "DomainName"
        ],
        "AuthorizeVpcEndpointAccess": [
            "DomainName",
            "Account"
        ],
        "CancelDomainConfigChange": [
            "DomainName"
        ],
        "CancelElasticsearchServiceSoftwareUpdate": [
            "DomainName"
        ],
        "CreateElasticsearchDomain": [
            "DomainName"
        ],
        "CreateOutboundCrossClusterSearchConnection": [
            "SourceDomainInfo",
            "DestinationDomainInfo",
            "ConnectionAlias"
        ],
        "CreatePackage": [
            "PackageName",
            "PackageType",
            "PackageSource"
        ],
        "CreateVpcEndpoint": [
            "DomainArn",
            "VpcOptions"
        ],
        "DeleteElasticsearchDomain": [
            "DomainName"
        ],
        "DeleteElasticsearchServiceRole": "",
        "DeleteInboundCrossClusterSearchConnection": [
            "CrossClusterSearchConnectionId"
        ],
        "DeleteOutboundCrossClusterSearchConnection": [
            "CrossClusterSearchConnectionId"
        ],
        "DeletePackage": [
            "PackageID"
        ],
        "DeleteVpcEndpoint": [
            "VpcEndpointId"
        ],
        "DescribeDomainAutoTunes": [
            "DomainName"
        ],
        "DescribeDomainChangeProgress": [
            "DomainName"
        ],
        "DescribeElasticsearchDomain": [
            "DomainName"
        ],
        "DescribeElasticsearchDomainConfig": [
            "DomainName"
        ],
        "DescribeElasticsearchDomains": [
            "DomainNames"
        ],
        "DescribeElasticsearchInstanceTypeLimits": [
            "InstanceType",
            "ElasticsearchVersion"
        ],
        "DescribeInboundCrossClusterSearchConnections": "",
        "DescribeOutboundCrossClusterSearchConnections": "",
        "DescribePackages": "",
        "DescribeReservedElasticsearchInstanceOfferings": "",
        "DescribeReservedElasticsearchInstances": "",
        "DescribeVpcEndpoints": [
            "VpcEndpointIds"
        ],
        "DissociatePackage": [
            "PackageID",
            "DomainName"
        ],
        "GetCompatibleElasticsearchVersions": "",
        "GetPackageVersionHistory": [
            "PackageID"
        ],
        "GetUpgradeHistory": [
            "DomainName"
        ],
        "GetUpgradeStatus": [
            "DomainName"
        ],
        "ListDomainNames": "",
        "ListDomainsForPackage": [
            "PackageID"
        ],
        "ListElasticsearchInstanceTypes": [
            "ElasticsearchVersion"
        ],
        "ListElasticsearchVersions": "",
        "ListPackagesForDomain": [
            "DomainName"
        ],
        "ListTags": [
            "ARN"
        ],
        "ListVpcEndpointAccess": [
            "DomainName"
        ],
        "ListVpcEndpoints": "",
        "ListVpcEndpointsForDomain": [
            "DomainName"
        ],
        "PurchaseReservedElasticsearchInstanceOffering": [
            "ReservedElasticsearchInstanceOfferingId",
            "ReservationName"
        ],
        "RejectInboundCrossClusterSearchConnection": [
            "CrossClusterSearchConnectionId"
        ],
        "RemoveTags": [
            "ARN",
            "TagKeys"
        ],
        "RevokeVpcEndpointAccess": [
            "DomainName",
            "Account"
        ],
        "StartElasticsearchServiceSoftwareUpdate": [
            "DomainName"
        ],
        "UpdateElasticsearchDomainConfig": [
            "DomainName"
        ],
        "UpdatePackage": [
            "PackageID",
            "PackageSource"
        ],
        "UpdateVpcEndpoint": [
            "VpcEndpointId",
            "VpcOptions"
        ],
        "UpgradeElasticsearchDomain": [
            "DomainName",
            "TargetVersion"
        ]
    },
    "eventbridge": {
        "ActivateEventSource": [
            "Name"
        ],
        "CancelReplay": [
            "ReplayName"
        ],
        "CreateApiDestination": [
            "Name",
            "ConnectionArn",
            "InvocationEndpoint",
            "HttpMethod"
        ],
        "CreateArchive": [
            "ArchiveName",
            "EventSourceArn"
        ],
        "CreateConnection": [
            "Name",
            "AuthorizationType",
            "AuthParameters"
        ],
        "CreateEndpoint": [
            "Name",
            "RoutingConfig",
            "EventBuses"
        ],
        "CreateEventBus": [
            "Name"
        ],
        "CreatePartnerEventSource": [
            "Name",
            "Account"
        ],
        "DeactivateEventSource": [
            "Name"
        ],
        "DeauthorizeConnection": [
            "Name"
        ],
        "DeleteApiDestination": [
            "Name"
        ],
        "DeleteArchive": [
            "ArchiveName"
        ],
        "DeleteConnection": [
            "Name"
        ],
        "DeleteEndpoint": [
            "Name"
        ],
        "DeleteEventBus": [
            "Name"
        ],
        "DeletePartnerEventSource": [
            "Name",
            "Account"
        ],
        "DeleteRule": [
            "Name"
        ],
        "DescribeApiDestination": [
            "Name"
        ],
        "DescribeArchive": [
            "ArchiveName"
        ],
        "DescribeConnection": [
            "Name"
        ],
        "DescribeEndpoint": [
            "Name"
        ],
        "DescribeEventBus": "",
        "DescribeEventSource": [
            "Name"
        ],
        "DescribePartnerEventSource": [
            "Name"
        ],
        "DescribeReplay": [
            "ReplayName"
        ],
        "DescribeRule": [
            "Name"
        ],
        "DisableRule": [
            "Name"
        ],
        "EnableRule": [
            "Name"
        ],
        "ListApiDestinations": "",
        "ListArchives": "",
        "ListConnections": "",
        "ListEndpoints": "",
        "ListEventBuses": "",
        "ListEventSources": "",
        "ListPartnerEventSourceAccounts": [
            "EventSourceName"
        ],
        "ListPartnerEventSources": [
            "NamePrefix"
        ],
        "ListReplays": "",
        "ListRuleNamesByTarget": [
            "TargetArn"
        ],
        "ListRules": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTargetsByRule": [
            "Rule"
        ],
        "PutEvents": [
            "Entries"
        ],
        "PutPartnerEvents": [
            "Entries"
        ],
        "PutPermission": "",
        "PutRule": [
            "Name"
        ],
        "PutTargets": [
            "Rule",
            "Targets"
        ],
        "RemovePermission": "",
        "RemoveTargets": [
            "Rule",
            "Ids"
        ],
        "StartReplay": [
            "ReplayName",
            "EventSourceArn",
            "EventStartTime",
            "EventEndTime",
            "Destination"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TestEventPattern": [
            "EventPattern",
            "Event"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApiDestination": [
            "Name"
        ],
        "UpdateArchive": [
            "ArchiveName"
        ],
        "UpdateConnection": [
            "Name"
        ],
        "UpdateEndpoint": [
            "Name"
        ]
    },
    "events": {
        "ActivateEventSource": [
            "Name"
        ],
        "CancelReplay": [
            "ReplayName"
        ],
        "CreateApiDestination": [
            "Name",
            "ConnectionArn",
            "InvocationEndpoint",
            "HttpMethod"
        ],
        "CreateArchive": [
            "ArchiveName",
            "EventSourceArn"
        ],
        "CreateConnection": [
            "Name",
            "AuthorizationType",
            "AuthParameters"
        ],
        "CreateEventBus": [
            "Name"
        ],
        "CreatePartnerEventSource": [
            "Name",
            "Account"
        ],
        "DeactivateEventSource": [
            "Name"
        ],
        "DeauthorizeConnection": [
            "Name"
        ],
        "DeleteApiDestination": [
            "Name"
        ],
        "DeleteArchive": [
            "ArchiveName"
        ],
        "DeleteConnection": [
            "Name"
        ],
        "DeleteEventBus": [
            "Name"
        ],
        "DeletePartnerEventSource": [
            "Name",
            "Account"
        ],
        "DeleteRule": [
            "Name"
        ],
        "DescribeApiDestination": [
            "Name"
        ],
        "DescribeArchive": [
            "ArchiveName"
        ],
        "DescribeConnection": [
            "Name"
        ],
        "DescribeEventBus": "",
        "DescribeEventSource": [
            "Name"
        ],
        "DescribePartnerEventSource": [
            "Name"
        ],
        "DescribeReplay": [
            "ReplayName"
        ],
        "DescribeRule": [
            "Name"
        ],
        "DisableRule": [
            "Name"
        ],
        "EnableRule": [
            "Name"
        ],
        "ListApiDestinations": "",
        "ListArchives": "",
        "ListConnections": "",
        "ListEventBuses": "",
        "ListEventSources": "",
        "ListPartnerEventSourceAccounts": [
            "EventSourceName"
        ],
        "ListPartnerEventSources": [
            "NamePrefix"
        ],
        "ListReplays": "",
        "ListRuleNamesByTarget": [
            "TargetArn"
        ],
        "ListRules": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTargetsByRule": [
            "Rule"
        ],
        "PutEvents": [
            "Entries"
        ],
        "PutPartnerEvents": [
            "Entries"
        ],
        "PutPermission": "",
        "PutRule": [
            "Name"
        ],
        "PutTargets": [
            "Rule",
            "Targets"
        ],
        "RemovePermission": "",
        "RemoveTargets": [
            "Rule",
            "Ids"
        ],
        "StartReplay": [
            "ReplayName",
            "EventSourceArn",
            "EventStartTime",
            "EventEndTime",
            "Destination"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TestEventPattern": [
            "EventPattern",
            "Event"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApiDestination": [
            "Name"
        ],
        "UpdateArchive": [
            "ArchiveName"
        ],
        "UpdateConnection": [
            "Name"
        ]
    },
    "evidently": {
        "BatchEvaluateFeature": [
            "project",
            "requests"
        ],
        "CreateExperiment": [
            "metricGoals",
            "name",
            "project",
            "treatments"
        ],
        "CreateFeature": [
            "name",
            "project",
            "variations"
        ],
        "CreateLaunch": [
            "groups",
            "name",
            "project"
        ],
        "CreateProject": [
            "name"
        ],
        "CreateSegment": [
            "name",
            "pattern"
        ],
        "DeleteExperiment": [
            "experiment",
            "project"
        ],
        "DeleteFeature": [
            "feature",
            "project"
        ],
        "DeleteLaunch": [
            "launch",
            "project"
        ],
        "DeleteProject": [
            "project"
        ],
        "DeleteSegment": [
            "segment"
        ],
        "EvaluateFeature": [
            "entityId",
            "feature",
            "project"
        ],
        "GetExperiment": [
            "experiment",
            "project"
        ],
        "GetExperimentResults": [
            "experiment",
            "metricNames",
            "project",
            "treatmentNames"
        ],
        "GetFeature": [
            "feature",
            "project"
        ],
        "GetLaunch": [
            "launch",
            "project"
        ],
        "GetProject": [
            "project"
        ],
        "GetSegment": [
            "segment"
        ],
        "ListExperiments": [
            "project"
        ],
        "ListFeatures": [
            "project"
        ],
        "ListLaunches": [
            "project"
        ],
        "ListProjects": "",
        "ListSegmentReferences": [
            "segment",
            "type"
        ],
        "ListSegments": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutProjectEvents": [
            "events",
            "project"
        ],
        "StartExperiment": [
            "analysisCompleteTime",
            "experiment",
            "project"
        ],
        "StartLaunch": [
            "launch",
            "project"
        ],
        "StopExperiment": [
            "experiment",
            "project"
        ],
        "StopLaunch": [
            "launch",
            "project"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestSegmentPattern": [
            "pattern",
            "payload"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateExperiment": [
            "experiment",
            "project"
        ],
        "UpdateFeature": [
            "feature",
            "project"
        ],
        "UpdateLaunch": [
            "launch",
            "project"
        ],
        "UpdateProject": [
            "project"
        ],
        "UpdateProjectDataDelivery": [
            "project"
        ]
    },
    "finspace": {
        "AssociateUserToPermissionGroup": [
            "permissionGroupId",
            "userId"
        ],
        "CreateChangeset": [
            "datasetId",
            "changeType",
            "sourceParams",
            "formatParams"
        ],
        "CreateDataView": [
            "datasetId",
            "destinationTypeParams"
        ],
        "CreateDataset": [
            "datasetTitle",
            "kind",
            "permissionGroupParams"
        ],
        "CreatePermissionGroup": [
            "name",
            "applicationPermissions"
        ],
        "CreateUser": [
            "emailAddress",
            "type"
        ],
        "DeleteDataset": [
            "datasetId"
        ],
        "DeletePermissionGroup": [
            "permissionGroupId"
        ],
        "DisableUser": [
            "userId"
        ],
        "DisassociateUserFromPermissionGroup": [
            "permissionGroupId",
            "userId"
        ],
        "EnableUser": [
            "userId"
        ],
        "GetChangeset": [
            "datasetId",
            "changesetId"
        ],
        "GetDataView": [
            "dataViewId",
            "datasetId"
        ],
        "GetDataset": [
            "datasetId"
        ],
        "GetExternalDataViewAccessDetails": [
            "dataViewId",
            "datasetId"
        ],
        "GetPermissionGroup": [
            "permissionGroupId"
        ],
        "GetProgrammaticAccessCredentials": [
            "environmentId"
        ],
        "GetUser": [
            "userId"
        ],
        "GetWorkingLocation": "",
        "ListChangesets": [
            "datasetId"
        ],
        "ListDataViews": [
            "datasetId"
        ],
        "ListDatasets": "",
        "ListPermissionGroups": [
            "maxResults"
        ],
        "ListPermissionGroupsByUser": [
            "userId",
            "maxResults"
        ],
        "ListUsers": [
            "maxResults"
        ],
        "ListUsersByPermissionGroup": [
            "permissionGroupId",
            "maxResults"
        ],
        "ResetUserPassword": [
            "userId"
        ],
        "UpdateChangeset": [
            "datasetId",
            "changesetId",
            "sourceParams",
            "formatParams"
        ],
        "UpdateDataset": [
            "datasetId",
            "datasetTitle",
            "kind"
        ],
        "UpdatePermissionGroup": [
            "permissionGroupId"
        ],
        "UpdateUser": [
            "userId"
        ]
    },
    "firehose": {
        "CreateDeliveryStream": [
            "DeliveryStreamName"
        ],
        "DeleteDeliveryStream": [
            "DeliveryStreamName"
        ],
        "DescribeDeliveryStream": [
            "DeliveryStreamName"
        ],
        "ListDeliveryStreams": "",
        "ListTagsForDeliveryStream": [
            "DeliveryStreamName"
        ],
        "PutRecord": [
            "DeliveryStreamName",
            "Record"
        ],
        "PutRecordBatch": [
            "DeliveryStreamName",
            "Records"
        ],
        "StartDeliveryStreamEncryption": [
            "DeliveryStreamName"
        ],
        "StopDeliveryStreamEncryption": [
            "DeliveryStreamName"
        ],
        "TagDeliveryStream": [
            "DeliveryStreamName",
            "Tags"
        ],
        "UntagDeliveryStream": [
            "DeliveryStreamName",
            "TagKeys"
        ],
        "UpdateDestination": [
            "DeliveryStreamName",
            "CurrentDeliveryStreamVersionId",
            "DestinationId"
        ]
    },
    "fis": {
        "CreateExperimentTemplate": [
            "clientToken",
            "description",
            "stopConditions",
            "actions",
            "roleArn"
        ],
        "CreateTargetAccountConfiguration": [
            "experimentTemplateId",
            "accountId",
            "roleArn"
        ],
        "DeleteExperimentTemplate": [
            "id"
        ],
        "DeleteTargetAccountConfiguration": [
            "experimentTemplateId",
            "accountId"
        ],
        "GetAction": [
            "id"
        ],
        "GetExperiment": [
            "id"
        ],
        "GetExperimentTargetAccountConfiguration": [
            "experimentId",
            "accountId"
        ],
        "GetExperimentTemplate": [
            "id"
        ],
        "GetTargetAccountConfiguration": [
            "experimentTemplateId",
            "accountId"
        ],
        "GetTargetResourceType": [
            "resourceType"
        ],
        "ListActions": "",
        "ListExperimentResolvedTargets": [
            "experimentId"
        ],
        "ListExperimentTargetAccountConfigurations": [
            "experimentId"
        ],
        "ListExperimentTemplates": "",
        "ListExperiments": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTargetAccountConfigurations": [
            "experimentTemplateId"
        ],
        "ListTargetResourceTypes": "",
        "StartExperiment": [
            "clientToken",
            "experimentTemplateId"
        ],
        "StopExperiment": [
            "id"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn"
        ],
        "UpdateExperimentTemplate": [
            "id"
        ],
        "UpdateTargetAccountConfiguration": [
            "experimentTemplateId",
            "accountId"
        ]
    },
    "fms": {
        "AssociateAdminAccount": [
            "AdminAccount"
        ],
        "AssociateThirdPartyFirewall": [
            "ThirdPartyFirewall"
        ],
        "BatchAssociateResource": [
            "ResourceSetIdentifier",
            "Items"
        ],
        "BatchDisassociateResource": [
            "ResourceSetIdentifier",
            "Items"
        ],
        "DeleteAppsList": [
            "ListId"
        ],
        "DeleteNotificationChannel": "",
        "DeletePolicy": [
            "PolicyId"
        ],
        "DeleteProtocolsList": [
            "ListId"
        ],
        "DeleteResourceSet": [
            "Identifier"
        ],
        "DisassociateAdminAccount": "",
        "DisassociateThirdPartyFirewall": [
            "ThirdPartyFirewall"
        ],
        "GetAdminAccount": "",
        "GetAdminScope": [
            "AdminAccount"
        ],
        "GetAppsList": [
            "ListId"
        ],
        "GetComplianceDetail": [
            "PolicyId",
            "MemberAccount"
        ],
        "GetNotificationChannel": "",
        "GetPolicy": [
            "PolicyId"
        ],
        "GetProtectionStatus": [
            "PolicyId"
        ],
        "GetProtocolsList": [
            "ListId"
        ],
        "GetResourceSet": [
            "Identifier"
        ],
        "GetThirdPartyFirewallAssociationStatus": [
            "ThirdPartyFirewall"
        ],
        "GetViolationDetails": [
            "PolicyId",
            "MemberAccount",
            "ResourceId",
            "ResourceType"
        ],
        "ListAdminAccountsForOrganization": "",
        "ListAdminsManagingAccount": "",
        "ListAppsLists": [
            "MaxResults"
        ],
        "ListComplianceStatus": [
            "PolicyId"
        ],
        "ListDiscoveredResources": [
            "MemberAccountIds",
            "ResourceType"
        ],
        "ListMemberAccounts": "",
        "ListPolicies": "",
        "ListProtocolsLists": [
            "MaxResults"
        ],
        "ListResourceSetResources": [
            "Identifier"
        ],
        "ListResourceSets": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListThirdPartyFirewallFirewallPolicies": [
            "ThirdPartyFirewall",
            "MaxResults"
        ],
        "PutAdminAccount": [
            "AdminAccount"
        ],
        "PutAppsList": [
            "AppsList"
        ],
        "PutNotificationChannel": [
            "SnsTopicArn",
            "SnsRoleName"
        ],
        "PutPolicy": [
            "Policy"
        ],
        "PutProtocolsList": [
            "ProtocolsList"
        ],
        "PutResourceSet": [
            "ResourceSet"
        ],
        "TagResource": [
            "ResourceArn",
            "TagList"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ]
    },
    "forecast": {
        "CreateAutoPredictor": [
            "PredictorName"
        ],
        "CreateDataset": [
            "DatasetName",
            "Domain",
            "DatasetType",
            "Schema"
        ],
        "CreateDatasetGroup": [
            "DatasetGroupName",
            "Domain"
        ],
        "CreateDatasetImportJob": [
            "DatasetImportJobName",
            "DatasetArn",
            "DataSource"
        ],
        "CreateExplainability": [
            "ExplainabilityName",
            "ResourceArn",
            "ExplainabilityConfig"
        ],
        "CreateExplainabilityExport": [
            "ExplainabilityExportName",
            "ExplainabilityArn",
            "Destination"
        ],
        "CreateForecast": [
            "ForecastName",
            "PredictorArn"
        ],
        "CreateForecastExportJob": [
            "ForecastExportJobName",
            "ForecastArn",
            "Destination"
        ],
        "CreateMonitor": [
            "MonitorName",
            "ResourceArn"
        ],
        "CreatePredictor": [
            "PredictorName",
            "ForecastHorizon",
            "InputDataConfig",
            "FeaturizationConfig"
        ],
        "CreatePredictorBacktestExportJob": [
            "PredictorBacktestExportJobName",
            "PredictorArn",
            "Destination"
        ],
        "CreateWhatIfAnalysis": [
            "WhatIfAnalysisName",
            "ForecastArn"
        ],
        "CreateWhatIfForecast": [
            "WhatIfForecastName",
            "WhatIfAnalysisArn"
        ],
        "CreateWhatIfForecastExport": [
            "WhatIfForecastExportName",
            "WhatIfForecastArns",
            "Destination"
        ],
        "DeleteDataset": [
            "DatasetArn"
        ],
        "DeleteDatasetGroup": [
            "DatasetGroupArn"
        ],
        "DeleteDatasetImportJob": [
            "DatasetImportJobArn"
        ],
        "DeleteExplainability": [
            "ExplainabilityArn"
        ],
        "DeleteExplainabilityExport": [
            "ExplainabilityExportArn"
        ],
        "DeleteForecast": [
            "ForecastArn"
        ],
        "DeleteForecastExportJob": [
            "ForecastExportJobArn"
        ],
        "DeleteMonitor": [
            "MonitorArn"
        ],
        "DeletePredictor": [
            "PredictorArn"
        ],
        "DeletePredictorBacktestExportJob": [
            "PredictorBacktestExportJobArn"
        ],
        "DeleteResourceTree": [
            "ResourceArn"
        ],
        "DeleteWhatIfAnalysis": [
            "WhatIfAnalysisArn"
        ],
        "DeleteWhatIfForecast": [
            "WhatIfForecastArn"
        ],
        "DeleteWhatIfForecastExport": [
            "WhatIfForecastExportArn"
        ],
        "DescribeAutoPredictor": [
            "PredictorArn"
        ],
        "DescribeDataset": [
            "DatasetArn"
        ],
        "DescribeDatasetGroup": [
            "DatasetGroupArn"
        ],
        "DescribeDatasetImportJob": [
            "DatasetImportJobArn"
        ],
        "DescribeExplainability": [
            "ExplainabilityArn"
        ],
        "DescribeExplainabilityExport": [
            "ExplainabilityExportArn"
        ],
        "DescribeForecast": [
            "ForecastArn"
        ],
        "DescribeForecastExportJob": [
            "ForecastExportJobArn"
        ],
        "DescribeMonitor": [
            "MonitorArn"
        ],
        "DescribePredictor": [
            "PredictorArn"
        ],
        "DescribePredictorBacktestExportJob": [
            "PredictorBacktestExportJobArn"
        ],
        "DescribeWhatIfAnalysis": [
            "WhatIfAnalysisArn"
        ],
        "DescribeWhatIfForecast": [
            "WhatIfForecastArn"
        ],
        "DescribeWhatIfForecastExport": [
            "WhatIfForecastExportArn"
        ],
        "GetAccuracyMetrics": [
            "PredictorArn"
        ],
        "ListDatasetGroups": "",
        "ListDatasetImportJobs": "",
        "ListDatasets": "",
        "ListExplainabilities": "",
        "ListExplainabilityExports": "",
        "ListForecastExportJobs": "",
        "ListForecasts": "",
        "ListMonitorEvaluations": [
            "MonitorArn"
        ],
        "ListMonitors": "",
        "ListPredictorBacktestExportJobs": "",
        "ListPredictors": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListWhatIfAnalyses": "",
        "ListWhatIfForecastExports": "",
        "ListWhatIfForecasts": "",
        "ResumeResource": [
            "ResourceArn"
        ],
        "StopResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDatasetGroup": [
            "DatasetGroupArn",
            "DatasetArns"
        ]
    },
    "forecastquery": {
        "QueryForecast": [
            "ForecastArn",
            "Filters"
        ],
        "QueryWhatIfForecast": [
            "WhatIfForecastArn",
            "Filters"
        ]
    },
    "frauddetector": {
        "BatchCreateVariable": [
            "variableEntries"
        ],
        "BatchGetVariable": [
            "names"
        ],
        "CancelBatchImportJob": [
            "jobId"
        ],
        "CancelBatchPredictionJob": [
            "jobId"
        ],
        "CreateBatchImportJob": [
            "jobId",
            "inputPath",
            "outputPath",
            "eventTypeName",
            "iamRoleArn"
        ],
        "CreateBatchPredictionJob": [
            "jobId",
            "inputPath",
            "outputPath",
            "eventTypeName",
            "detectorName",
            "iamRoleArn"
        ],
        "CreateDetectorVersion": [
            "detectorId",
            "rules"
        ],
        "CreateList": [
            "name"
        ],
        "CreateModel": [
            "modelId",
            "modelType",
            "eventTypeName"
        ],
        "CreateModelVersion": [
            "modelId",
            "modelType",
            "trainingDataSource",
            "trainingDataSchema"
        ],
        "CreateRule": [
            "ruleId",
            "detectorId",
            "expression",
            "language",
            "outcomes"
        ],
        "CreateVariable": [
            "name",
            "dataType",
            "dataSource",
            "defaultValue"
        ],
        "DeleteBatchImportJob": [
            "jobId"
        ],
        "DeleteBatchPredictionJob": [
            "jobId"
        ],
        "DeleteDetector": [
            "detectorId"
        ],
        "DeleteDetectorVersion": [
            "detectorId",
            "detectorVersionId"
        ],
        "DeleteEntityType": [
            "name"
        ],
        "DeleteEvent": [
            "eventId",
            "eventTypeName"
        ],
        "DeleteEventType": [
            "name"
        ],
        "DeleteEventsByEventType": [
            "eventTypeName"
        ],
        "DeleteExternalModel": [
            "modelEndpoint"
        ],
        "DeleteLabel": [
            "name"
        ],
        "DeleteList": [
            "name"
        ],
        "DeleteModel": [
            "modelId",
            "modelType"
        ],
        "DeleteModelVersion": [
            "modelId",
            "modelType",
            "modelVersionNumber"
        ],
        "DeleteOutcome": [
            "name"
        ],
        "DeleteRule": [
            "rule"
        ],
        "DeleteVariable": [
            "name"
        ],
        "DescribeDetector": [
            "detectorId"
        ],
        "DescribeModelVersions": "",
        "GetBatchImportJobs": "",
        "GetBatchPredictionJobs": "",
        "GetDeleteEventsByEventTypeStatus": [
            "eventTypeName"
        ],
        "GetDetectorVersion": [
            "detectorId",
            "detectorVersionId"
        ],
        "GetDetectors": "",
        "GetEntityTypes": "",
        "GetEvent": [
            "eventId",
            "eventTypeName"
        ],
        "GetEventPrediction": [
            "detectorId",
            "eventId",
            "eventTypeName",
            "entities",
            "eventTimestamp",
            "eventVariables"
        ],
        "GetEventPredictionMetadata": [
            "eventId",
            "eventTypeName",
            "detectorId",
            "detectorVersionId",
            "predictionTimestamp"
        ],
        "GetEventTypes": "",
        "GetExternalModels": "",
        "GetKMSEncryptionKey": "",
        "GetLabels": "",
        "GetListElements": [
            "name"
        ],
        "GetListsMetadata": "",
        "GetModelVersion": [
            "modelId",
            "modelType",
            "modelVersionNumber"
        ],
        "GetModels": "",
        "GetOutcomes": "",
        "GetRules": [
            "detectorId"
        ],
        "GetVariables": "",
        "ListEventPredictions": "",
        "ListTagsForResource": [
            "resourceARN"
        ],
        "PutDetector": [
            "detectorId",
            "eventTypeName"
        ],
        "PutEntityType": [
            "name"
        ],
        "PutEventType": [
            "name",
            "eventVariables",
            "entityTypes"
        ],
        "PutExternalModel": [
            "modelEndpoint",
            "modelSource",
            "invokeModelEndpointRoleArn",
            "inputConfiguration",
            "outputConfiguration",
            "modelEndpointStatus"
        ],
        "PutKMSEncryptionKey": [
            "kmsEncryptionKeyArn"
        ],
        "PutLabel": [
            "name"
        ],
        "PutOutcome": [
            "name"
        ],
        "SendEvent": [
            "eventId",
            "eventTypeName",
            "eventTimestamp",
            "eventVariables",
            "entities"
        ],
        "TagResource": [
            "resourceARN",
            "tags"
        ],
        "UntagResource": [
            "resourceARN",
            "tagKeys"
        ],
        "UpdateDetectorVersion": [
            "detectorId",
            "detectorVersionId",
            "externalModelEndpoints",
            "rules"
        ],
        "UpdateDetectorVersionMetadata": [
            "detectorId",
            "detectorVersionId",
            "description"
        ],
        "UpdateDetectorVersionStatus": [
            "detectorId",
            "detectorVersionId",
            "status"
        ],
        "UpdateEventLabel": [
            "eventId",
            "eventTypeName",
            "assignedLabel",
            "labelTimestamp"
        ],
        "UpdateList": [
            "name"
        ],
        "UpdateModel": [
            "modelId",
            "modelType"
        ],
        "UpdateModelVersion": [
            "modelId",
            "modelType",
            "majorVersionNumber"
        ],
        "UpdateModelVersionStatus": [
            "modelId",
            "modelType",
            "modelVersionNumber",
            "status"
        ],
        "UpdateRuleMetadata": [
            "rule",
            "description"
        ],
        "UpdateRuleVersion": [
            "rule",
            "expression",
            "language",
            "outcomes"
        ],
        "UpdateVariable": [
            "name"
        ]
    },
    "freetier": {
        "GetFreeTierUsage": ""
    },
    "fsx": {
        "AssociateFileSystemAliases": [
            "FileSystemId",
            "Aliases"
        ],
        "CancelDataRepositoryTask": [
            "TaskId"
        ],
        "CopyBackup": [
            "SourceBackupId"
        ],
        "CopySnapshotAndUpdateVolume": [
            "VolumeId",
            "SourceSnapshotARN"
        ],
        "CreateBackup": "",
        "CreateDataRepositoryAssociation": [
            "FileSystemId",
            "DataRepositoryPath"
        ],
        "CreateDataRepositoryTask": [
            "Type",
            "FileSystemId",
            "Report"
        ],
        "CreateFileCache": [
            "FileCacheType",
            "FileCacheTypeVersion",
            "StorageCapacity",
            "SubnetIds"
        ],
        "CreateFileSystem": [
            "FileSystemType",
            "StorageCapacity",
            "SubnetIds"
        ],
        "CreateFileSystemFromBackup": [
            "BackupId",
            "SubnetIds"
        ],
        "CreateSnapshot": [
            "Name",
            "VolumeId"
        ],
        "CreateStorageVirtualMachine": [
            "FileSystemId",
            "Name"
        ],
        "CreateVolume": [
            "VolumeType",
            "Name"
        ],
        "CreateVolumeFromBackup": [
            "BackupId",
            "Name"
        ],
        "DeleteBackup": [
            "BackupId"
        ],
        "DeleteDataRepositoryAssociation": [
            "AssociationId"
        ],
        "DeleteFileCache": [
            "FileCacheId"
        ],
        "DeleteFileSystem": [
            "FileSystemId"
        ],
        "DeleteSnapshot": [
            "SnapshotId"
        ],
        "DeleteStorageVirtualMachine": [
            "StorageVirtualMachineId"
        ],
        "DeleteVolume": [
            "VolumeId"
        ],
        "DescribeBackups": "",
        "DescribeDataRepositoryAssociations": "",
        "DescribeDataRepositoryTasks": "",
        "DescribeFileCaches": "",
        "DescribeFileSystemAliases": [
            "FileSystemId"
        ],
        "DescribeFileSystems": "",
        "DescribeSharedVpcConfiguration": "",
        "DescribeSnapshots": "",
        "DescribeStorageVirtualMachines": "",
        "DescribeVolumes": "",
        "DisassociateFileSystemAliases": [
            "FileSystemId",
            "Aliases"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ReleaseFileSystemNfsV3Locks": [
            "FileSystemId"
        ],
        "RestoreVolumeFromSnapshot": [
            "VolumeId",
            "SnapshotId"
        ],
        "StartMisconfiguredStateRecovery": [
            "FileSystemId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateDataRepositoryAssociation": [
            "AssociationId"
        ],
        "UpdateFileCache": [
            "FileCacheId"
        ],
        "UpdateFileSystem": [
            "FileSystemId"
        ],
        "UpdateSharedVpcConfiguration": "",
        "UpdateSnapshot": [
            "Name",
            "SnapshotId"
        ],
        "UpdateStorageVirtualMachine": [
            "StorageVirtualMachineId"
        ],
        "UpdateVolume": [
            "VolumeId"
        ]
    },
    "gamelift": {
        "AcceptMatch": [
            "TicketId",
            "PlayerIds",
            "AcceptanceType"
        ],
        "ClaimGameServer": [
            "GameServerGroupName"
        ],
        "CreateAlias": [
            "Name",
            "RoutingStrategy"
        ],
        "CreateBuild": "",
        "CreateFleet": [
            "Name"
        ],
        "CreateFleetLocations": [
            "FleetId",
            "Locations"
        ],
        "CreateGameServerGroup": [
            "GameServerGroupName",
            "RoleArn",
            "MinSize",
            "MaxSize",
            "LaunchTemplate",
            "InstanceDefinitions"
        ],
        "CreateGameSession": [
            "MaximumPlayerSessionCount"
        ],
        "CreateGameSessionQueue": [
            "Name"
        ],
        "CreateLocation": [
            "LocationName"
        ],
        "CreateMatchmakingConfiguration": [
            "Name",
            "RequestTimeoutSeconds",
            "AcceptanceRequired",
            "RuleSetName"
        ],
        "CreateMatchmakingRuleSet": [
            "Name",
            "RuleSetBody"
        ],
        "CreatePlayerSession": [
            "GameSessionId",
            "PlayerId"
        ],
        "CreatePlayerSessions": [
            "GameSessionId",
            "PlayerIds"
        ],
        "CreateScript": "",
        "CreateVpcPeeringAuthorization": [
            "GameLiftAwsAccountId",
            "PeerVpcId"
        ],
        "CreateVpcPeeringConnection": [
            "FleetId",
            "PeerVpcAwsAccountId",
            "PeerVpcId"
        ],
        "DeleteAlias": [
            "AliasId"
        ],
        "DeleteBuild": [
            "BuildId"
        ],
        "DeleteFleet": [
            "FleetId"
        ],
        "DeleteFleetLocations": [
            "FleetId",
            "Locations"
        ],
        "DeleteGameServerGroup": [
            "GameServerGroupName"
        ],
        "DeleteGameSessionQueue": [
            "Name"
        ],
        "DeleteLocation": [
            "LocationName"
        ],
        "DeleteMatchmakingConfiguration": [
            "Name"
        ],
        "DeleteMatchmakingRuleSet": [
            "Name"
        ],
        "DeleteScalingPolicy": [
            "Name",
            "FleetId"
        ],
        "DeleteScript": [
            "ScriptId"
        ],
        "DeleteVpcPeeringAuthorization": [
            "GameLiftAwsAccountId",
            "PeerVpcId"
        ],
        "DeleteVpcPeeringConnection": [
            "FleetId",
            "VpcPeeringConnectionId"
        ],
        "DeregisterCompute": [
            "FleetId",
            "ComputeName"
        ],
        "DeregisterGameServer": [
            "GameServerGroupName",
            "GameServerId"
        ],
        "DescribeAlias": [
            "AliasId"
        ],
        "DescribeBuild": [
            "BuildId"
        ],
        "DescribeCompute": [
            "FleetId",
            "ComputeName"
        ],
        "DescribeEC2InstanceLimits": "",
        "DescribeFleetAttributes": "",
        "DescribeFleetCapacity": "",
        "DescribeFleetEvents": [
            "FleetId"
        ],
        "DescribeFleetLocationAttributes": [
            "FleetId"
        ],
        "DescribeFleetLocationCapacity": [
            "FleetId",
            "Location"
        ],
        "DescribeFleetLocationUtilization": [
            "FleetId",
            "Location"
        ],
        "DescribeFleetPortSettings": [
            "FleetId"
        ],
        "DescribeFleetUtilization": "",
        "DescribeGameServer": [
            "GameServerGroupName",
            "GameServerId"
        ],
        "DescribeGameServerGroup": [
            "GameServerGroupName"
        ],
        "DescribeGameServerInstances": [
            "GameServerGroupName"
        ],
        "DescribeGameSessionDetails": "",
        "DescribeGameSessionPlacement": [
            "PlacementId"
        ],
        "DescribeGameSessionQueues": "",
        "DescribeGameSessions": "",
        "DescribeInstances": [
            "FleetId"
        ],
        "DescribeMatchmaking": [
            "TicketIds"
        ],
        "DescribeMatchmakingConfigurations": "",
        "DescribeMatchmakingRuleSets": "",
        "DescribePlayerSessions": "",
        "DescribeRuntimeConfiguration": [
            "FleetId"
        ],
        "DescribeScalingPolicies": [
            "FleetId"
        ],
        "DescribeScript": [
            "ScriptId"
        ],
        "DescribeVpcPeeringAuthorizations": "",
        "DescribeVpcPeeringConnections": "",
        "GetComputeAccess": [
            "FleetId",
            "ComputeName"
        ],
        "GetComputeAuthToken": [
            "FleetId",
            "ComputeName"
        ],
        "GetGameSessionLogUrl": [
            "GameSessionId"
        ],
        "GetInstanceAccess": [
            "FleetId",
            "InstanceId"
        ],
        "ListAliases": "",
        "ListBuilds": "",
        "ListCompute": [
            "FleetId"
        ],
        "ListFleets": "",
        "ListGameServerGroups": "",
        "ListGameServers": [
            "GameServerGroupName"
        ],
        "ListLocations": "",
        "ListScripts": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutScalingPolicy": [
            "Name",
            "FleetId",
            "MetricName"
        ],
        "RegisterCompute": [
            "FleetId",
            "ComputeName"
        ],
        "RegisterGameServer": [
            "GameServerGroupName",
            "GameServerId",
            "InstanceId"
        ],
        "RequestUploadCredentials": [
            "BuildId"
        ],
        "ResolveAlias": [
            "AliasId"
        ],
        "ResumeGameServerGroup": [
            "GameServerGroupName",
            "ResumeActions"
        ],
        "SearchGameSessions": "",
        "StartFleetActions": [
            "FleetId",
            "Actions"
        ],
        "StartGameSessionPlacement": [
            "PlacementId",
            "GameSessionQueueName",
            "MaximumPlayerSessionCount"
        ],
        "StartMatchBackfill": [
            "ConfigurationName",
            "Players"
        ],
        "StartMatchmaking": [
            "ConfigurationName",
            "Players"
        ],
        "StopFleetActions": [
            "FleetId",
            "Actions"
        ],
        "StopGameSessionPlacement": [
            "PlacementId"
        ],
        "StopMatchmaking": [
            "TicketId"
        ],
        "SuspendGameServerGroup": [
            "GameServerGroupName",
            "SuspendActions"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAlias": [
            "AliasId"
        ],
        "UpdateBuild": [
            "BuildId"
        ],
        "UpdateFleetAttributes": [
            "FleetId"
        ],
        "UpdateFleetCapacity": [
            "FleetId"
        ],
        "UpdateFleetPortSettings": [
            "FleetId"
        ],
        "UpdateGameServer": [
            "GameServerGroupName",
            "GameServerId"
        ],
        "UpdateGameServerGroup": [
            "GameServerGroupName"
        ],
        "UpdateGameSession": [
            "GameSessionId"
        ],
        "UpdateGameSessionQueue": [
            "Name"
        ],
        "UpdateMatchmakingConfiguration": [
            "Name"
        ],
        "UpdateRuntimeConfiguration": [
            "FleetId",
            "RuntimeConfiguration"
        ],
        "UpdateScript": [
            "ScriptId"
        ],
        "ValidateMatchmakingRuleSet": [
            "RuleSetBody"
        ]
    },
    "glacier": {
        "AbortMultipartUpload": [
            "accountId",
            "vaultName",
            "uploadId"
        ],
        "AbortVaultLock": [
            "accountId",
            "vaultName"
        ],
        "AddTagsToVault": [
            "accountId",
            "vaultName"
        ],
        "CompleteMultipartUpload": [
            "accountId",
            "vaultName",
            "uploadId"
        ],
        "CompleteVaultLock": [
            "accountId",
            "vaultName",
            "lockId"
        ],
        "CreateVault": [
            "accountId",
            "vaultName"
        ],
        "DeleteArchive": [
            "accountId",
            "vaultName",
            "archiveId"
        ],
        "DeleteVault": [
            "accountId",
            "vaultName"
        ],
        "DeleteVaultAccessPolicy": [
            "accountId",
            "vaultName"
        ],
        "DeleteVaultNotifications": [
            "accountId",
            "vaultName"
        ],
        "DescribeJob": [
            "accountId",
            "vaultName",
            "jobId"
        ],
        "DescribeVault": [
            "accountId",
            "vaultName"
        ],
        "GetDataRetrievalPolicy": [
            "accountId"
        ],
        "GetJobOutput": [
            "accountId",
            "vaultName",
            "jobId"
        ],
        "GetVaultAccessPolicy": [
            "accountId",
            "vaultName"
        ],
        "GetVaultLock": [
            "accountId",
            "vaultName"
        ],
        "GetVaultNotifications": [
            "accountId",
            "vaultName"
        ],
        "InitiateJob": [
            "accountId",
            "vaultName"
        ],
        "InitiateMultipartUpload": [
            "accountId",
            "vaultName"
        ],
        "InitiateVaultLock": [
            "accountId",
            "vaultName"
        ],
        "ListJobs": [
            "accountId",
            "vaultName"
        ],
        "ListMultipartUploads": [
            "accountId",
            "vaultName"
        ],
        "ListParts": [
            "accountId",
            "vaultName",
            "uploadId"
        ],
        "ListProvisionedCapacity": [
            "accountId"
        ],
        "ListTagsForVault": [
            "accountId",
            "vaultName"
        ],
        "ListVaults": [
            "accountId"
        ],
        "PurchaseProvisionedCapacity": [
            "accountId"
        ],
        "RemoveTagsFromVault": [
            "accountId",
            "vaultName"
        ],
        "SetDataRetrievalPolicy": [
            "accountId"
        ],
        "SetVaultAccessPolicy": [
            "accountId",
            "vaultName"
        ],
        "SetVaultNotifications": [
            "accountId",
            "vaultName"
        ],
        "UploadArchive": [
            "vaultName",
            "accountId"
        ],
        "UploadMultipartPart": [
            "accountId",
            "vaultName",
            "uploadId"
        ]
    },
    "globalaccelerator": {
        "AddCustomRoutingEndpoints": [
            "EndpointConfigurations",
            "EndpointGroupArn"
        ],
        "AddEndpoints": [
            "EndpointConfigurations",
            "EndpointGroupArn"
        ],
        "AdvertiseByoipCidr": [
            "Cidr"
        ],
        "AllowCustomRoutingTraffic": [
            "EndpointGroupArn",
            "EndpointId"
        ],
        "CreateAccelerator": [
            "Name",
            "IdempotencyToken"
        ],
        "CreateCrossAccountAttachment": [
            "Name",
            "IdempotencyToken"
        ],
        "CreateCustomRoutingAccelerator": [
            "Name",
            "IdempotencyToken"
        ],
        "CreateCustomRoutingEndpointGroup": [
            "ListenerArn",
            "EndpointGroupRegion",
            "DestinationConfigurations",
            "IdempotencyToken"
        ],
        "CreateCustomRoutingListener": [
            "AcceleratorArn",
            "PortRanges",
            "IdempotencyToken"
        ],
        "CreateEndpointGroup": [
            "ListenerArn",
            "EndpointGroupRegion",
            "IdempotencyToken"
        ],
        "CreateListener": [
            "AcceleratorArn",
            "PortRanges",
            "Protocol",
            "IdempotencyToken"
        ],
        "DeleteAccelerator": [
            "AcceleratorArn"
        ],
        "DeleteCrossAccountAttachment": [
            "AttachmentArn"
        ],
        "DeleteCustomRoutingAccelerator": [
            "AcceleratorArn"
        ],
        "DeleteCustomRoutingEndpointGroup": [
            "EndpointGroupArn"
        ],
        "DeleteCustomRoutingListener": [
            "ListenerArn"
        ],
        "DeleteEndpointGroup": [
            "EndpointGroupArn"
        ],
        "DeleteListener": [
            "ListenerArn"
        ],
        "DenyCustomRoutingTraffic": [
            "EndpointGroupArn",
            "EndpointId"
        ],
        "DeprovisionByoipCidr": [
            "Cidr"
        ],
        "DescribeAccelerator": [
            "AcceleratorArn"
        ],
        "DescribeAcceleratorAttributes": [
            "AcceleratorArn"
        ],
        "DescribeCrossAccountAttachment": [
            "AttachmentArn"
        ],
        "DescribeCustomRoutingAccelerator": [
            "AcceleratorArn"
        ],
        "DescribeCustomRoutingAcceleratorAttributes": [
            "AcceleratorArn"
        ],
        "DescribeCustomRoutingEndpointGroup": [
            "EndpointGroupArn"
        ],
        "DescribeCustomRoutingListener": [
            "ListenerArn"
        ],
        "DescribeEndpointGroup": [
            "EndpointGroupArn"
        ],
        "DescribeListener": [
            "ListenerArn"
        ],
        "ListAccelerators": "",
        "ListByoipCidrs": "",
        "ListCrossAccountAttachments": "",
        "ListCrossAccountResourceAccounts": "",
        "ListCrossAccountResources": [
            "ResourceOwnerAwsAccountId"
        ],
        "ListCustomRoutingAccelerators": "",
        "ListCustomRoutingEndpointGroups": [
            "ListenerArn"
        ],
        "ListCustomRoutingListeners": [
            "AcceleratorArn"
        ],
        "ListCustomRoutingPortMappings": [
            "AcceleratorArn"
        ],
        "ListCustomRoutingPortMappingsByDestination": [
            "EndpointId",
            "DestinationAddress"
        ],
        "ListEndpointGroups": [
            "ListenerArn"
        ],
        "ListListeners": [
            "AcceleratorArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ProvisionByoipCidr": [
            "Cidr",
            "CidrAuthorizationContext"
        ],
        "RemoveCustomRoutingEndpoints": [
            "EndpointIds",
            "EndpointGroupArn"
        ],
        "RemoveEndpoints": [
            "EndpointIdentifiers",
            "EndpointGroupArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAccelerator": [
            "AcceleratorArn"
        ],
        "UpdateAcceleratorAttributes": [
            "AcceleratorArn"
        ],
        "UpdateCrossAccountAttachment": [
            "AttachmentArn"
        ],
        "UpdateCustomRoutingAccelerator": [
            "AcceleratorArn"
        ],
        "UpdateCustomRoutingAcceleratorAttributes": [
            "AcceleratorArn"
        ],
        "UpdateCustomRoutingListener": [
            "ListenerArn",
            "PortRanges"
        ],
        "UpdateEndpointGroup": [
            "EndpointGroupArn"
        ],
        "UpdateListener": [
            "ListenerArn"
        ],
        "WithdrawByoipCidr": [
            "Cidr"
        ]
    },
    "glue": {
        "BatchCreatePartition": [
            "DatabaseName",
            "TableName",
            "PartitionInputList"
        ],
        "BatchDeleteConnection": [
            "ConnectionNameList"
        ],
        "BatchDeletePartition": [
            "DatabaseName",
            "TableName",
            "PartitionsToDelete"
        ],
        "BatchDeleteTable": [
            "DatabaseName",
            "TablesToDelete"
        ],
        "BatchDeleteTableVersion": [
            "DatabaseName",
            "TableName",
            "VersionIds"
        ],
        "BatchGetBlueprints": [
            "Names"
        ],
        "BatchGetCrawlers": [
            "CrawlerNames"
        ],
        "BatchGetCustomEntityTypes": [
            "Names"
        ],
        "BatchGetDataQualityResult": [
            "ResultIds"
        ],
        "BatchGetDevEndpoints": [
            "DevEndpointNames"
        ],
        "BatchGetJobs": [
            "JobNames"
        ],
        "BatchGetPartition": [
            "DatabaseName",
            "TableName",
            "PartitionsToGet"
        ],
        "BatchGetTableOptimizer": [
            "Entries"
        ],
        "BatchGetTriggers": [
            "TriggerNames"
        ],
        "BatchGetWorkflows": [
            "Names"
        ],
        "BatchStopJobRun": [
            "JobName",
            "JobRunIds"
        ],
        "BatchUpdatePartition": [
            "DatabaseName",
            "TableName",
            "Entries"
        ],
        "CancelDataQualityRuleRecommendationRun": [
            "RunId"
        ],
        "CancelDataQualityRulesetEvaluationRun": [
            "RunId"
        ],
        "CancelMLTaskRun": [
            "TransformId",
            "TaskRunId"
        ],
        "CancelStatement": [
            "SessionId",
            "Id"
        ],
        "CheckSchemaVersionValidity": [
            "DataFormat",
            "SchemaDefinition"
        ],
        "CreateBlueprint": [
            "Name",
            "BlueprintLocation"
        ],
        "CreateClassifier": "",
        "CreateConnection": [
            "ConnectionInput"
        ],
        "CreateCrawler": [
            "Name",
            "Role",
            "Targets"
        ],
        "CreateCustomEntityType": [
            "Name",
            "RegexString"
        ],
        "CreateDataQualityRuleset": [
            "Name",
            "Ruleset"
        ],
        "CreateDatabase": [
            "DatabaseInput"
        ],
        "CreateDevEndpoint": [
            "EndpointName",
            "RoleArn"
        ],
        "CreateJob": [
            "Name",
            "Role",
            "Command"
        ],
        "CreateMLTransform": [
            "Name",
            "InputRecordTables",
            "Parameters",
            "Role"
        ],
        "CreatePartition": [
            "DatabaseName",
            "TableName",
            "PartitionInput"
        ],
        "CreatePartitionIndex": [
            "DatabaseName",
            "TableName",
            "PartitionIndex"
        ],
        "CreateRegistry": [
            "RegistryName"
        ],
        "CreateSchema": [
            "SchemaName",
            "DataFormat"
        ],
        "CreateScript": "",
        "CreateSecurityConfiguration": [
            "Name",
            "EncryptionConfiguration"
        ],
        "CreateSession": [
            "Id",
            "Role",
            "Command"
        ],
        "CreateTable": [
            "DatabaseName",
            "TableInput"
        ],
        "CreateTableOptimizer": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "Type",
            "TableOptimizerConfiguration"
        ],
        "CreateTrigger": [
            "Name",
            "Type",
            "Actions"
        ],
        "CreateUserDefinedFunction": [
            "DatabaseName",
            "FunctionInput"
        ],
        "CreateWorkflow": [
            "Name"
        ],
        "DeleteBlueprint": [
            "Name"
        ],
        "DeleteClassifier": [
            "Name"
        ],
        "DeleteColumnStatisticsForPartition": [
            "DatabaseName",
            "TableName",
            "PartitionValues",
            "ColumnName"
        ],
        "DeleteColumnStatisticsForTable": [
            "DatabaseName",
            "TableName",
            "ColumnName"
        ],
        "DeleteConnection": [
            "ConnectionName"
        ],
        "DeleteCrawler": [
            "Name"
        ],
        "DeleteCustomEntityType": [
            "Name"
        ],
        "DeleteDataQualityRuleset": [
            "Name"
        ],
        "DeleteDatabase": [
            "Name"
        ],
        "DeleteDevEndpoint": [
            "EndpointName"
        ],
        "DeleteJob": [
            "JobName"
        ],
        "DeleteMLTransform": [
            "TransformId"
        ],
        "DeletePartition": [
            "DatabaseName",
            "TableName",
            "PartitionValues"
        ],
        "DeletePartitionIndex": [
            "DatabaseName",
            "TableName",
            "IndexName"
        ],
        "DeleteRegistry": [
            "RegistryId"
        ],
        "DeleteResourcePolicy": "",
        "DeleteSchema": [
            "SchemaId"
        ],
        "DeleteSchemaVersions": [
            "SchemaId",
            "Versions"
        ],
        "DeleteSecurityConfiguration": [
            "Name"
        ],
        "DeleteSession": [
            "Id"
        ],
        "DeleteTable": [
            "DatabaseName",
            "Name"
        ],
        "DeleteTableOptimizer": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "Type"
        ],
        "DeleteTableVersion": [
            "DatabaseName",
            "TableName",
            "VersionId"
        ],
        "DeleteTrigger": [
            "Name"
        ],
        "DeleteUserDefinedFunction": [
            "DatabaseName",
            "FunctionName"
        ],
        "DeleteWorkflow": [
            "Name"
        ],
        "GetBlueprint": [
            "Name"
        ],
        "GetBlueprintRun": [
            "BlueprintName",
            "RunId"
        ],
        "GetBlueprintRuns": [
            "BlueprintName"
        ],
        "GetCatalogImportStatus": "",
        "GetClassifier": [
            "Name"
        ],
        "GetClassifiers": "",
        "GetColumnStatisticsForPartition": [
            "DatabaseName",
            "TableName",
            "PartitionValues",
            "ColumnNames"
        ],
        "GetColumnStatisticsForTable": [
            "DatabaseName",
            "TableName",
            "ColumnNames"
        ],
        "GetColumnStatisticsTaskRun": [
            "ColumnStatisticsTaskRunId"
        ],
        "GetColumnStatisticsTaskRuns": [
            "DatabaseName",
            "TableName"
        ],
        "GetConnection": [
            "Name"
        ],
        "GetConnections": "",
        "GetCrawler": [
            "Name"
        ],
        "GetCrawlerMetrics": "",
        "GetCrawlers": "",
        "GetCustomEntityType": [
            "Name"
        ],
        "GetDataCatalogEncryptionSettings": "",
        "GetDataQualityResult": [
            "ResultId"
        ],
        "GetDataQualityRuleRecommendationRun": [
            "RunId"
        ],
        "GetDataQualityRuleset": [
            "Name"
        ],
        "GetDataQualityRulesetEvaluationRun": [
            "RunId"
        ],
        "GetDatabase": [
            "Name"
        ],
        "GetDatabases": "",
        "GetDataflowGraph": "",
        "GetDevEndpoint": [
            "EndpointName"
        ],
        "GetDevEndpoints": "",
        "GetJob": [
            "JobName"
        ],
        "GetJobBookmark": [
            "JobName"
        ],
        "GetJobRun": [
            "JobName",
            "RunId"
        ],
        "GetJobRuns": [
            "JobName"
        ],
        "GetJobs": "",
        "GetMLTaskRun": [
            "TransformId",
            "TaskRunId"
        ],
        "GetMLTaskRuns": [
            "TransformId"
        ],
        "GetMLTransform": [
            "TransformId"
        ],
        "GetMLTransforms": "",
        "GetMapping": [
            "Source"
        ],
        "GetPartition": [
            "DatabaseName",
            "TableName",
            "PartitionValues"
        ],
        "GetPartitionIndexes": [
            "DatabaseName",
            "TableName"
        ],
        "GetPartitions": [
            "DatabaseName",
            "TableName"
        ],
        "GetPlan": [
            "Mapping",
            "Source"
        ],
        "GetRegistry": [
            "RegistryId"
        ],
        "GetResourcePolicies": "",
        "GetResourcePolicy": "",
        "GetSchema": [
            "SchemaId"
        ],
        "GetSchemaByDefinition": [
            "SchemaId",
            "SchemaDefinition"
        ],
        "GetSchemaVersion": "",
        "GetSchemaVersionsDiff": [
            "SchemaId",
            "FirstSchemaVersionNumber",
            "SecondSchemaVersionNumber",
            "SchemaDiffType"
        ],
        "GetSecurityConfiguration": [
            "Name"
        ],
        "GetSecurityConfigurations": "",
        "GetSession": [
            "Id"
        ],
        "GetStatement": [
            "SessionId",
            "Id"
        ],
        "GetTable": [
            "DatabaseName",
            "Name"
        ],
        "GetTableOptimizer": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "Type"
        ],
        "GetTableVersion": [
            "DatabaseName",
            "TableName"
        ],
        "GetTableVersions": [
            "DatabaseName",
            "TableName"
        ],
        "GetTables": [
            "DatabaseName"
        ],
        "GetTags": [
            "ResourceArn"
        ],
        "GetTrigger": [
            "Name"
        ],
        "GetTriggers": "",
        "GetUnfilteredPartitionMetadata": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "PartitionValues",
            "SupportedPermissionTypes"
        ],
        "GetUnfilteredPartitionsMetadata": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "SupportedPermissionTypes"
        ],
        "GetUnfilteredTableMetadata": [
            "CatalogId",
            "DatabaseName",
            "Name",
            "SupportedPermissionTypes"
        ],
        "GetUserDefinedFunction": [
            "DatabaseName",
            "FunctionName"
        ],
        "GetUserDefinedFunctions": [
            "Pattern"
        ],
        "GetWorkflow": [
            "Name"
        ],
        "GetWorkflowRun": [
            "Name",
            "RunId"
        ],
        "GetWorkflowRunProperties": [
            "Name",
            "RunId"
        ],
        "GetWorkflowRuns": [
            "Name"
        ],
        "ImportCatalogToGlue": "",
        "ListBlueprints": "",
        "ListColumnStatisticsTaskRuns": "",
        "ListCrawlers": "",
        "ListCrawls": [
            "CrawlerName"
        ],
        "ListCustomEntityTypes": "",
        "ListDataQualityResults": "",
        "ListDataQualityRuleRecommendationRuns": "",
        "ListDataQualityRulesetEvaluationRuns": "",
        "ListDataQualityRulesets": "",
        "ListDevEndpoints": "",
        "ListJobs": "",
        "ListMLTransforms": "",
        "ListRegistries": "",
        "ListSchemaVersions": [
            "SchemaId"
        ],
        "ListSchemas": "",
        "ListSessions": "",
        "ListStatements": [
            "SessionId"
        ],
        "ListTableOptimizerRuns": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "Type"
        ],
        "ListTriggers": "",
        "ListWorkflows": "",
        "PutDataCatalogEncryptionSettings": [
            "DataCatalogEncryptionSettings"
        ],
        "PutResourcePolicy": [
            "PolicyInJson"
        ],
        "PutSchemaVersionMetadata": [
            "MetadataKeyValue"
        ],
        "PutWorkflowRunProperties": [
            "Name",
            "RunId",
            "RunProperties"
        ],
        "QuerySchemaVersionMetadata": "",
        "RegisterSchemaVersion": [
            "SchemaId",
            "SchemaDefinition"
        ],
        "RemoveSchemaVersionMetadata": [
            "MetadataKeyValue"
        ],
        "ResetJobBookmark": [
            "JobName"
        ],
        "ResumeWorkflowRun": [
            "Name",
            "RunId",
            "NodeIds"
        ],
        "RunStatement": [
            "SessionId",
            "Code"
        ],
        "SearchTables": "",
        "StartBlueprintRun": [
            "BlueprintName",
            "RoleArn"
        ],
        "StartColumnStatisticsTaskRun": [
            "DatabaseName",
            "TableName",
            "Role"
        ],
        "StartCrawler": [
            "Name"
        ],
        "StartCrawlerSchedule": [
            "CrawlerName"
        ],
        "StartDataQualityRuleRecommendationRun": [
            "DataSource",
            "Role"
        ],
        "StartDataQualityRulesetEvaluationRun": [
            "DataSource",
            "Role",
            "RulesetNames"
        ],
        "StartExportLabelsTaskRun": [
            "TransformId",
            "OutputS3Path"
        ],
        "StartImportLabelsTaskRun": [
            "TransformId",
            "InputS3Path"
        ],
        "StartJobRun": [
            "JobName"
        ],
        "StartMLEvaluationTaskRun": [
            "TransformId"
        ],
        "StartMLLabelingSetGenerationTaskRun": [
            "TransformId",
            "OutputS3Path"
        ],
        "StartTrigger": [
            "Name"
        ],
        "StartWorkflowRun": [
            "Name"
        ],
        "StopColumnStatisticsTaskRun": [
            "DatabaseName",
            "TableName"
        ],
        "StopCrawler": [
            "Name"
        ],
        "StopCrawlerSchedule": [
            "CrawlerName"
        ],
        "StopSession": [
            "Id"
        ],
        "StopTrigger": [
            "Name"
        ],
        "StopWorkflowRun": [
            "Name",
            "RunId"
        ],
        "TagResource": [
            "ResourceArn",
            "TagsToAdd"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagsToRemove"
        ],
        "UpdateBlueprint": [
            "Name",
            "BlueprintLocation"
        ],
        "UpdateClassifier": "",
        "UpdateColumnStatisticsForPartition": [
            "DatabaseName",
            "TableName",
            "PartitionValues",
            "ColumnStatisticsList"
        ],
        "UpdateColumnStatisticsForTable": [
            "DatabaseName",
            "TableName",
            "ColumnStatisticsList"
        ],
        "UpdateConnection": [
            "Name",
            "ConnectionInput"
        ],
        "UpdateCrawler": [
            "Name"
        ],
        "UpdateCrawlerSchedule": [
            "CrawlerName"
        ],
        "UpdateDataQualityRuleset": [
            "Name"
        ],
        "UpdateDatabase": [
            "Name",
            "DatabaseInput"
        ],
        "UpdateDevEndpoint": [
            "EndpointName"
        ],
        "UpdateJob": [
            "JobName",
            "JobUpdate"
        ],
        "UpdateJobFromSourceControl": "",
        "UpdateMLTransform": [
            "TransformId"
        ],
        "UpdatePartition": [
            "DatabaseName",
            "TableName",
            "PartitionValueList",
            "PartitionInput"
        ],
        "UpdateRegistry": [
            "RegistryId",
            "Description"
        ],
        "UpdateSchema": [
            "SchemaId"
        ],
        "UpdateSourceControlFromJob": "",
        "UpdateTable": [
            "DatabaseName",
            "TableInput"
        ],
        "UpdateTableOptimizer": [
            "CatalogId",
            "DatabaseName",
            "TableName",
            "Type",
            "TableOptimizerConfiguration"
        ],
        "UpdateTrigger": [
            "Name",
            "TriggerUpdate"
        ],
        "UpdateUserDefinedFunction": [
            "DatabaseName",
            "FunctionName",
            "FunctionInput"
        ],
        "UpdateWorkflow": [
            "Name"
        ]
    },
    "grafana": {
        "AssociateLicense": [
            "licenseType",
            "workspaceId"
        ],
        "CreateWorkspace": [
            "accountAccessType",
            "authenticationProviders",
            "permissionType"
        ],
        "CreateWorkspaceApiKey": [
            "keyName",
            "keyRole",
            "secondsToLive",
            "workspaceId"
        ],
        "DeleteWorkspace": [
            "workspaceId"
        ],
        "DeleteWorkspaceApiKey": [
            "keyName",
            "workspaceId"
        ],
        "DescribeWorkspace": [
            "workspaceId"
        ],
        "DescribeWorkspaceAuthentication": [
            "workspaceId"
        ],
        "DescribeWorkspaceConfiguration": [
            "workspaceId"
        ],
        "DisassociateLicense": [
            "licenseType",
            "workspaceId"
        ],
        "ListPermissions": [
            "workspaceId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListVersions": "",
        "ListWorkspaces": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdatePermissions": [
            "updateInstructionBatch",
            "workspaceId"
        ],
        "UpdateWorkspace": [
            "workspaceId"
        ],
        "UpdateWorkspaceAuthentication": [
            "authenticationProviders",
            "workspaceId"
        ],
        "UpdateWorkspaceConfiguration": [
            "configuration",
            "workspaceId"
        ]
    },
    "greengrass": {
        "AssociateRoleToGroup": [
            "GroupId",
            "RoleArn"
        ],
        "AssociateServiceRoleToAccount": [
            "RoleArn"
        ],
        "CreateConnectorDefinition": "",
        "CreateConnectorDefinitionVersion": [
            "ConnectorDefinitionId"
        ],
        "CreateCoreDefinition": "",
        "CreateCoreDefinitionVersion": [
            "CoreDefinitionId"
        ],
        "CreateDeployment": [
            "GroupId",
            "DeploymentType"
        ],
        "CreateDeviceDefinition": "",
        "CreateDeviceDefinitionVersion": [
            "DeviceDefinitionId"
        ],
        "CreateFunctionDefinition": "",
        "CreateFunctionDefinitionVersion": [
            "FunctionDefinitionId"
        ],
        "CreateGroup": [
            "Name"
        ],
        "CreateGroupCertificateAuthority": [
            "GroupId"
        ],
        "CreateGroupVersion": [
            "GroupId"
        ],
        "CreateLoggerDefinition": "",
        "CreateLoggerDefinitionVersion": [
            "LoggerDefinitionId"
        ],
        "CreateResourceDefinition": "",
        "CreateResourceDefinitionVersion": [
            "ResourceDefinitionId"
        ],
        "CreateSoftwareUpdateJob": [
            "S3UrlSignerRole",
            "UpdateTargetsArchitecture",
            "SoftwareToUpdate",
            "UpdateTargets",
            "UpdateTargetsOperatingSystem"
        ],
        "CreateSubscriptionDefinition": "",
        "CreateSubscriptionDefinitionVersion": [
            "SubscriptionDefinitionId"
        ],
        "DeleteConnectorDefinition": [
            "ConnectorDefinitionId"
        ],
        "DeleteCoreDefinition": [
            "CoreDefinitionId"
        ],
        "DeleteDeviceDefinition": [
            "DeviceDefinitionId"
        ],
        "DeleteFunctionDefinition": [
            "FunctionDefinitionId"
        ],
        "DeleteGroup": [
            "GroupId"
        ],
        "DeleteLoggerDefinition": [
            "LoggerDefinitionId"
        ],
        "DeleteResourceDefinition": [
            "ResourceDefinitionId"
        ],
        "DeleteSubscriptionDefinition": [
            "SubscriptionDefinitionId"
        ],
        "DisassociateRoleFromGroup": [
            "GroupId"
        ],
        "DisassociateServiceRoleFromAccount": "",
        "GetAssociatedRole": [
            "GroupId"
        ],
        "GetBulkDeploymentStatus": [
            "BulkDeploymentId"
        ],
        "GetConnectivityInfo": [
            "ThingName"
        ],
        "GetConnectorDefinition": [
            "ConnectorDefinitionId"
        ],
        "GetConnectorDefinitionVersion": [
            "ConnectorDefinitionId",
            "ConnectorDefinitionVersionId"
        ],
        "GetCoreDefinition": [
            "CoreDefinitionId"
        ],
        "GetCoreDefinitionVersion": [
            "CoreDefinitionId",
            "CoreDefinitionVersionId"
        ],
        "GetDeploymentStatus": [
            "GroupId",
            "DeploymentId"
        ],
        "GetDeviceDefinition": [
            "DeviceDefinitionId"
        ],
        "GetDeviceDefinitionVersion": [
            "DeviceDefinitionVersionId",
            "DeviceDefinitionId"
        ],
        "GetFunctionDefinition": [
            "FunctionDefinitionId"
        ],
        "GetFunctionDefinitionVersion": [
            "FunctionDefinitionId",
            "FunctionDefinitionVersionId"
        ],
        "GetGroup": [
            "GroupId"
        ],
        "GetGroupCertificateAuthority": [
            "CertificateAuthorityId",
            "GroupId"
        ],
        "GetGroupCertificateConfiguration": [
            "GroupId"
        ],
        "GetGroupVersion": [
            "GroupVersionId",
            "GroupId"
        ],
        "GetLoggerDefinition": [
            "LoggerDefinitionId"
        ],
        "GetLoggerDefinitionVersion": [
            "LoggerDefinitionVersionId",
            "LoggerDefinitionId"
        ],
        "GetResourceDefinition": [
            "ResourceDefinitionId"
        ],
        "GetResourceDefinitionVersion": [
            "ResourceDefinitionVersionId",
            "ResourceDefinitionId"
        ],
        "GetServiceRoleForAccount": "",
        "GetSubscriptionDefinition": [
            "SubscriptionDefinitionId"
        ],
        "GetSubscriptionDefinitionVersion": [
            "SubscriptionDefinitionId",
            "SubscriptionDefinitionVersionId"
        ],
        "GetThingRuntimeConfiguration": [
            "ThingName"
        ],
        "ListBulkDeploymentDetailedReports": [
            "BulkDeploymentId"
        ],
        "ListBulkDeployments": "",
        "ListConnectorDefinitionVersions": [
            "ConnectorDefinitionId"
        ],
        "ListConnectorDefinitions": "",
        "ListCoreDefinitionVersions": [
            "CoreDefinitionId"
        ],
        "ListCoreDefinitions": "",
        "ListDeployments": [
            "GroupId"
        ],
        "ListDeviceDefinitionVersions": [
            "DeviceDefinitionId"
        ],
        "ListDeviceDefinitions": "",
        "ListFunctionDefinitionVersions": [
            "FunctionDefinitionId"
        ],
        "ListFunctionDefinitions": "",
        "ListGroupCertificateAuthorities": [
            "GroupId"
        ],
        "ListGroupVersions": [
            "GroupId"
        ],
        "ListGroups": "",
        "ListLoggerDefinitionVersions": [
            "LoggerDefinitionId"
        ],
        "ListLoggerDefinitions": "",
        "ListResourceDefinitionVersions": [
            "ResourceDefinitionId"
        ],
        "ListResourceDefinitions": "",
        "ListSubscriptionDefinitionVersions": [
            "SubscriptionDefinitionId"
        ],
        "ListSubscriptionDefinitions": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ResetDeployments": [
            "GroupId"
        ],
        "StartBulkDeployment": [
            "ExecutionRoleArn",
            "InputFileUri"
        ],
        "StopBulkDeployment": [
            "BulkDeploymentId"
        ],
        "TagResource": [
            "ResourceArn"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateConnectivityInfo": [
            "ThingName"
        ],
        "UpdateConnectorDefinition": [
            "ConnectorDefinitionId"
        ],
        "UpdateCoreDefinition": [
            "CoreDefinitionId"
        ],
        "UpdateDeviceDefinition": [
            "DeviceDefinitionId"
        ],
        "UpdateFunctionDefinition": [
            "FunctionDefinitionId"
        ],
        "UpdateGroup": [
            "GroupId"
        ],
        "UpdateGroupCertificateConfiguration": [
            "GroupId"
        ],
        "UpdateLoggerDefinition": [
            "LoggerDefinitionId"
        ],
        "UpdateResourceDefinition": [
            "ResourceDefinitionId"
        ],
        "UpdateSubscriptionDefinition": [
            "SubscriptionDefinitionId"
        ],
        "UpdateThingRuntimeConfiguration": [
            "ThingName"
        ]
    },
    "greengrassv2": {
        "AssociateServiceRoleToAccount": [
            "roleArn"
        ],
        "BatchAssociateClientDeviceWithCoreDevice": [
            "coreDeviceThingName"
        ],
        "BatchDisassociateClientDeviceFromCoreDevice": [
            "coreDeviceThingName"
        ],
        "CancelDeployment": [
            "deploymentId"
        ],
        "CreateComponentVersion": "",
        "CreateDeployment": [
            "targetArn"
        ],
        "DeleteComponent": [
            "arn"
        ],
        "DeleteCoreDevice": [
            "coreDeviceThingName"
        ],
        "DeleteDeployment": [
            "deploymentId"
        ],
        "DescribeComponent": [
            "arn"
        ],
        "DisassociateServiceRoleFromAccount": "",
        "GetComponent": [
            "arn"
        ],
        "GetComponentVersionArtifact": [
            "arn",
            "artifactName"
        ],
        "GetConnectivityInfo": [
            "thingName"
        ],
        "GetCoreDevice": [
            "coreDeviceThingName"
        ],
        "GetDeployment": [
            "deploymentId"
        ],
        "GetServiceRoleForAccount": "",
        "ListClientDevicesAssociatedWithCoreDevice": [
            "coreDeviceThingName"
        ],
        "ListComponentVersions": [
            "arn"
        ],
        "ListComponents": "",
        "ListCoreDevices": "",
        "ListDeployments": "",
        "ListEffectiveDeployments": [
            "coreDeviceThingName"
        ],
        "ListInstalledComponents": [
            "coreDeviceThingName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ResolveComponentCandidates": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateConnectivityInfo": [
            "thingName",
            "connectivityInfo"
        ]
    },
    "groundstation": {
        "CancelContact": [
            "contactId"
        ],
        "CreateConfig": [
            "configData",
            "name"
        ],
        "CreateDataflowEndpointGroup": [
            "endpointDetails"
        ],
        "CreateEphemeris": [
            "name",
            "satelliteId"
        ],
        "CreateMissionProfile": [
            "dataflowEdges",
            "minimumViableContactDurationSeconds",
            "name",
            "trackingConfigArn"
        ],
        "DeleteConfig": [
            "configId",
            "configType"
        ],
        "DeleteDataflowEndpointGroup": [
            "dataflowEndpointGroupId"
        ],
        "DeleteEphemeris": [
            "ephemerisId"
        ],
        "DeleteMissionProfile": [
            "missionProfileId"
        ],
        "DescribeContact": [
            "contactId"
        ],
        "DescribeEphemeris": [
            "ephemerisId"
        ],
        "GetAgentConfiguration": [
            "agentId"
        ],
        "GetConfig": [
            "configId",
            "configType"
        ],
        "GetDataflowEndpointGroup": [
            "dataflowEndpointGroupId"
        ],
        "GetMinuteUsage": [
            "month",
            "year"
        ],
        "GetMissionProfile": [
            "missionProfileId"
        ],
        "GetSatellite": [
            "satelliteId"
        ],
        "ListConfigs": "",
        "ListContacts": [
            "endTime",
            "startTime",
            "statusList"
        ],
        "ListDataflowEndpointGroups": "",
        "ListEphemerides": [
            "endTime",
            "satelliteId",
            "startTime"
        ],
        "ListGroundStations": "",
        "ListMissionProfiles": "",
        "ListSatellites": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterAgent": [
            "agentDetails",
            "discoveryData"
        ],
        "ReserveContact": [
            "endTime",
            "groundStation",
            "missionProfileArn",
            "satelliteArn",
            "startTime"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAgentStatus": [
            "agentId",
            "aggregateStatus",
            "componentStatuses",
            "taskId"
        ],
        "UpdateConfig": [
            "configData",
            "configId",
            "configType",
            "name"
        ],
        "UpdateEphemeris": [
            "enabled",
            "ephemerisId"
        ],
        "UpdateMissionProfile": [
            "missionProfileId"
        ]
    },
    "guardduty": {
        "AcceptAdministratorInvitation": [
            "DetectorId",
            "AdministratorId",
            "InvitationId"
        ],
        "AcceptInvitation": [
            "DetectorId",
            "MasterId",
            "InvitationId"
        ],
        "ArchiveFindings": [
            "DetectorId",
            "FindingIds"
        ],
        "CreateDetector": [
            "Enable"
        ],
        "CreateFilter": [
            "DetectorId",
            "Name",
            "FindingCriteria"
        ],
        "CreateIPSet": [
            "DetectorId",
            "Name",
            "Format",
            "Location",
            "Activate"
        ],
        "CreateMembers": [
            "DetectorId",
            "AccountDetails"
        ],
        "CreatePublishingDestination": [
            "DetectorId",
            "DestinationType",
            "DestinationProperties"
        ],
        "CreateSampleFindings": [
            "DetectorId"
        ],
        "CreateThreatIntelSet": [
            "DetectorId",
            "Name",
            "Format",
            "Location",
            "Activate"
        ],
        "DeclineInvitations": [
            "AccountIds"
        ],
        "DeleteDetector": [
            "DetectorId"
        ],
        "DeleteFilter": [
            "DetectorId",
            "FilterName"
        ],
        "DeleteIPSet": [
            "DetectorId",
            "IpSetId"
        ],
        "DeleteInvitations": [
            "AccountIds"
        ],
        "DeleteMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "DeletePublishingDestination": [
            "DetectorId",
            "DestinationId"
        ],
        "DeleteThreatIntelSet": [
            "DetectorId",
            "ThreatIntelSetId"
        ],
        "DescribeMalwareScans": [
            "DetectorId"
        ],
        "DescribeOrganizationConfiguration": [
            "DetectorId"
        ],
        "DescribePublishingDestination": [
            "DetectorId",
            "DestinationId"
        ],
        "DisableOrganizationAdminAccount": [
            "AdminAccountId"
        ],
        "DisassociateFromAdministratorAccount": [
            "DetectorId"
        ],
        "DisassociateFromMasterAccount": [
            "DetectorId"
        ],
        "DisassociateMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "EnableOrganizationAdminAccount": [
            "AdminAccountId"
        ],
        "GetAdministratorAccount": [
            "DetectorId"
        ],
        "GetCoverageStatistics": [
            "DetectorId",
            "StatisticsType"
        ],
        "GetDetector": [
            "DetectorId"
        ],
        "GetFilter": [
            "DetectorId",
            "FilterName"
        ],
        "GetFindings": [
            "DetectorId",
            "FindingIds"
        ],
        "GetFindingsStatistics": [
            "DetectorId",
            "FindingStatisticTypes"
        ],
        "GetIPSet": [
            "DetectorId",
            "IpSetId"
        ],
        "GetInvitationsCount": "",
        "GetMalwareScanSettings": [
            "DetectorId"
        ],
        "GetMasterAccount": [
            "DetectorId"
        ],
        "GetMemberDetectors": [
            "DetectorId",
            "AccountIds"
        ],
        "GetMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "GetOrganizationStatistics": "",
        "GetRemainingFreeTrialDays": [
            "DetectorId"
        ],
        "GetThreatIntelSet": [
            "DetectorId",
            "ThreatIntelSetId"
        ],
        "GetUsageStatistics": [
            "DetectorId",
            "UsageStatisticType",
            "UsageCriteria"
        ],
        "InviteMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "ListCoverage": [
            "DetectorId"
        ],
        "ListDetectors": "",
        "ListFilters": [
            "DetectorId"
        ],
        "ListFindings": [
            "DetectorId"
        ],
        "ListIPSets": [
            "DetectorId"
        ],
        "ListInvitations": "",
        "ListMembers": [
            "DetectorId"
        ],
        "ListOrganizationAdminAccounts": "",
        "ListPublishingDestinations": [
            "DetectorId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListThreatIntelSets": [
            "DetectorId"
        ],
        "StartMalwareScan": [
            "ResourceArn"
        ],
        "StartMonitoringMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "StopMonitoringMembers": [
            "DetectorId",
            "AccountIds"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UnarchiveFindings": [
            "DetectorId",
            "FindingIds"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDetector": [
            "DetectorId"
        ],
        "UpdateFilter": [
            "DetectorId",
            "FilterName"
        ],
        "UpdateFindingsFeedback": [
            "DetectorId",
            "FindingIds",
            "Feedback"
        ],
        "UpdateIPSet": [
            "DetectorId",
            "IpSetId"
        ],
        "UpdateMalwareScanSettings": [
            "DetectorId"
        ],
        "UpdateMemberDetectors": [
            "DetectorId",
            "AccountIds"
        ],
        "UpdateOrganizationConfiguration": [
            "DetectorId"
        ],
        "UpdatePublishingDestination": [
            "DetectorId",
            "DestinationId"
        ],
        "UpdateThreatIntelSet": [
            "DetectorId",
            "ThreatIntelSetId"
        ]
    },
    "health": {
        "DescribeAffectedAccountsForOrganization": [
            "eventArn"
        ],
        "DescribeAffectedEntities": [
            "filter"
        ],
        "DescribeAffectedEntitiesForOrganization": "",
        "DescribeEntityAggregates": "",
        "DescribeEntityAggregatesForOrganization": [
            "eventArns"
        ],
        "DescribeEventAggregates": [
            "aggregateField"
        ],
        "DescribeEventDetails": [
            "eventArns"
        ],
        "DescribeEventDetailsForOrganization": [
            "organizationEventDetailFilters"
        ],
        "DescribeEventTypes": "",
        "DescribeEvents": "",
        "DescribeEventsForOrganization": "",
        "DescribeHealthServiceStatusForOrganization": "",
        "DisableHealthServiceAccessForOrganization": "",
        "EnableHealthServiceAccessForOrganization": ""
    },
    "healthlake": {
        "CreateFHIRDatastore": [
            "DatastoreTypeVersion"
        ],
        "DeleteFHIRDatastore": [
            "DatastoreId"
        ],
        "DescribeFHIRDatastore": [
            "DatastoreId"
        ],
        "DescribeFHIRExportJob": [
            "DatastoreId",
            "JobId"
        ],
        "DescribeFHIRImportJob": [
            "DatastoreId",
            "JobId"
        ],
        "ListFHIRDatastores": "",
        "ListFHIRExportJobs": [
            "DatastoreId"
        ],
        "ListFHIRImportJobs": [
            "DatastoreId"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "StartFHIRExportJob": [
            "OutputDataConfig",
            "DatastoreId",
            "DataAccessRoleArn",
            "ClientToken"
        ],
        "StartFHIRImportJob": [
            "InputDataConfig",
            "JobOutputDataConfig",
            "DatastoreId",
            "DataAccessRoleArn",
            "ClientToken"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ]
    },
    "honeycode": {
        "BatchCreateTableRows": [
            "workbookId",
            "tableId",
            "rowsToCreate"
        ],
        "BatchDeleteTableRows": [
            "workbookId",
            "tableId",
            "rowIds"
        ],
        "BatchUpdateTableRows": [
            "workbookId",
            "tableId",
            "rowsToUpdate"
        ],
        "BatchUpsertTableRows": [
            "workbookId",
            "tableId",
            "rowsToUpsert"
        ],
        "DescribeTableDataImportJob": [
            "workbookId",
            "tableId",
            "jobId"
        ],
        "GetScreenData": [
            "workbookId",
            "appId",
            "screenId"
        ],
        "InvokeScreenAutomation": [
            "workbookId",
            "appId",
            "screenId",
            "screenAutomationId"
        ],
        "ListTableColumns": [
            "workbookId",
            "tableId"
        ],
        "ListTableRows": [
            "workbookId",
            "tableId"
        ],
        "ListTables": [
            "workbookId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "QueryTableRows": [
            "workbookId",
            "tableId",
            "filterFormula"
        ],
        "StartTableDataImportJob": [
            "workbookId",
            "dataSource",
            "dataFormat",
            "destinationTableId",
            "importOptions",
            "clientRequestToken"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "iam": {
        "AddClientIDToOpenIDConnectProvider": [
            "OpenIDConnectProviderArn",
            "ClientID"
        ],
        "AddRoleToInstanceProfile": [
            "InstanceProfileName",
            "RoleName"
        ],
        "AddUserToGroup": [
            "GroupName",
            "UserName"
        ],
        "AttachGroupPolicy": [
            "GroupName",
            "PolicyArn"
        ],
        "AttachRolePolicy": [
            "RoleName",
            "PolicyArn"
        ],
        "AttachUserPolicy": [
            "UserName",
            "PolicyArn"
        ],
        "ChangePassword": [
            "OldPassword",
            "NewPassword"
        ],
        "CreateAccessKey": "",
        "CreateAccountAlias": [
            "AccountAlias"
        ],
        "CreateGroup": [
            "GroupName"
        ],
        "CreateInstanceProfile": [
            "InstanceProfileName"
        ],
        "CreateLoginProfile": [
            "UserName",
            "Password"
        ],
        "CreateOpenIDConnectProvider": [
            "Url",
            "ThumbprintList"
        ],
        "CreatePolicy": [
            "PolicyName",
            "PolicyDocument"
        ],
        "CreatePolicyVersion": [
            "PolicyArn",
            "PolicyDocument"
        ],
        "CreateRole": [
            "RoleName",
            "AssumeRolePolicyDocument"
        ],
        "CreateSAMLProvider": [
            "SAMLMetadataDocument",
            "Name"
        ],
        "CreateServiceLinkedRole": [
            "AWSServiceName"
        ],
        "CreateServiceSpecificCredential": [
            "UserName",
            "ServiceName"
        ],
        "CreateUser": [
            "UserName"
        ],
        "CreateVirtualMFADevice": [
            "VirtualMFADeviceName"
        ],
        "DeactivateMFADevice": [
            "UserName",
            "SerialNumber"
        ],
        "DeleteAccessKey": [
            "AccessKeyId"
        ],
        "DeleteAccountAlias": [
            "AccountAlias"
        ],
        "DeleteAccountPasswordPolicy": "",
        "DeleteGroup": [
            "GroupName"
        ],
        "DeleteGroupPolicy": [
            "GroupName",
            "PolicyName"
        ],
        "DeleteInstanceProfile": [
            "InstanceProfileName"
        ],
        "DeleteLoginProfile": [
            "UserName"
        ],
        "DeleteOpenIDConnectProvider": [
            "OpenIDConnectProviderArn"
        ],
        "DeletePolicy": [
            "PolicyArn"
        ],
        "DeletePolicyVersion": [
            "PolicyArn",
            "VersionId"
        ],
        "DeleteRole": [
            "RoleName"
        ],
        "DeleteRolePermissionsBoundary": [
            "RoleName"
        ],
        "DeleteRolePolicy": [
            "RoleName",
            "PolicyName"
        ],
        "DeleteSAMLProvider": [
            "SAMLProviderArn"
        ],
        "DeleteSSHPublicKey": [
            "UserName",
            "SSHPublicKeyId"
        ],
        "DeleteServerCertificate": [
            "ServerCertificateName"
        ],
        "DeleteServiceLinkedRole": [
            "RoleName"
        ],
        "DeleteServiceSpecificCredential": [
            "ServiceSpecificCredentialId"
        ],
        "DeleteSigningCertificate": [
            "CertificateId"
        ],
        "DeleteUser": [
            "UserName"
        ],
        "DeleteUserPermissionsBoundary": [
            "UserName"
        ],
        "DeleteUserPolicy": [
            "UserName",
            "PolicyName"
        ],
        "DeleteVirtualMFADevice": [
            "SerialNumber"
        ],
        "DetachGroupPolicy": [
            "GroupName",
            "PolicyArn"
        ],
        "DetachRolePolicy": [
            "RoleName",
            "PolicyArn"
        ],
        "DetachUserPolicy": [
            "UserName",
            "PolicyArn"
        ],
        "EnableMFADevice": [
            "UserName",
            "SerialNumber",
            "AuthenticationCode1",
            "AuthenticationCode2"
        ],
        "GenerateCredentialReport": "",
        "GenerateOrganizationsAccessReport": [
            "EntityPath"
        ],
        "GenerateServiceLastAccessedDetails": [
            "Arn"
        ],
        "GetAccessKeyLastUsed": [
            "AccessKeyId"
        ],
        "GetAccountAuthorizationDetails": "",
        "GetAccountPasswordPolicy": "",
        "GetAccountSummary": "",
        "GetContextKeysForCustomPolicy": [
            "PolicyInputList"
        ],
        "GetContextKeysForPrincipalPolicy": [
            "PolicySourceArn"
        ],
        "GetCredentialReport": "",
        "GetGroup": [
            "GroupName"
        ],
        "GetGroupPolicy": [
            "GroupName",
            "PolicyName"
        ],
        "GetInstanceProfile": [
            "InstanceProfileName"
        ],
        "GetLoginProfile": [
            "UserName"
        ],
        "GetMFADevice": [
            "SerialNumber"
        ],
        "GetOpenIDConnectProvider": [
            "OpenIDConnectProviderArn"
        ],
        "GetOrganizationsAccessReport": [
            "JobId"
        ],
        "GetPolicy": [
            "PolicyArn"
        ],
        "GetPolicyVersion": [
            "PolicyArn",
            "VersionId"
        ],
        "GetRole": [
            "RoleName"
        ],
        "GetRolePolicy": [
            "RoleName",
            "PolicyName"
        ],
        "GetSAMLProvider": [
            "SAMLProviderArn"
        ],
        "GetSSHPublicKey": [
            "UserName",
            "SSHPublicKeyId",
            "Encoding"
        ],
        "GetServerCertificate": [
            "ServerCertificateName"
        ],
        "GetServiceLastAccessedDetails": [
            "JobId"
        ],
        "GetServiceLastAccessedDetailsWithEntities": [
            "JobId",
            "ServiceNamespace"
        ],
        "GetServiceLinkedRoleDeletionStatus": [
            "DeletionTaskId"
        ],
        "GetUser": "",
        "GetUserPolicy": [
            "UserName",
            "PolicyName"
        ],
        "ListAccessKeys": "",
        "ListAccountAliases": "",
        "ListAttachedGroupPolicies": [
            "GroupName"
        ],
        "ListAttachedRolePolicies": [
            "RoleName"
        ],
        "ListAttachedUserPolicies": [
            "UserName"
        ],
        "ListEntitiesForPolicy": [
            "PolicyArn"
        ],
        "ListGroupPolicies": [
            "GroupName"
        ],
        "ListGroups": "",
        "ListGroupsForUser": [
            "UserName"
        ],
        "ListInstanceProfileTags": [
            "InstanceProfileName"
        ],
        "ListInstanceProfiles": "",
        "ListInstanceProfilesForRole": [
            "RoleName"
        ],
        "ListMFADeviceTags": [
            "SerialNumber"
        ],
        "ListMFADevices": "",
        "ListOpenIDConnectProviderTags": [
            "OpenIDConnectProviderArn"
        ],
        "ListOpenIDConnectProviders": "",
        "ListPolicies": "",
        "ListPoliciesGrantingServiceAccess": [
            "Arn",
            "ServiceNamespaces"
        ],
        "ListPolicyTags": [
            "PolicyArn"
        ],
        "ListPolicyVersions": [
            "PolicyArn"
        ],
        "ListRolePolicies": [
            "RoleName"
        ],
        "ListRoleTags": [
            "RoleName"
        ],
        "ListRoles": "",
        "ListSAMLProviderTags": [
            "SAMLProviderArn"
        ],
        "ListSAMLProviders": "",
        "ListSSHPublicKeys": "",
        "ListServerCertificateTags": [
            "ServerCertificateName"
        ],
        "ListServerCertificates": "",
        "ListServiceSpecificCredentials": "",
        "ListSigningCertificates": "",
        "ListUserPolicies": [
            "UserName"
        ],
        "ListUserTags": [
            "UserName"
        ],
        "ListUsers": "",
        "ListVirtualMFADevices": "",
        "PutGroupPolicy": [
            "GroupName",
            "PolicyName",
            "PolicyDocument"
        ],
        "PutRolePermissionsBoundary": [
            "RoleName",
            "PermissionsBoundary"
        ],
        "PutRolePolicy": [
            "RoleName",
            "PolicyName",
            "PolicyDocument"
        ],
        "PutUserPermissionsBoundary": [
            "UserName",
            "PermissionsBoundary"
        ],
        "PutUserPolicy": [
            "UserName",
            "PolicyName",
            "PolicyDocument"
        ],
        "RemoveClientIDFromOpenIDConnectProvider": [
            "OpenIDConnectProviderArn",
            "ClientID"
        ],
        "RemoveRoleFromInstanceProfile": [
            "InstanceProfileName",
            "RoleName"
        ],
        "RemoveUserFromGroup": [
            "GroupName",
            "UserName"
        ],
        "ResetServiceSpecificCredential": [
            "ServiceSpecificCredentialId"
        ],
        "ResyncMFADevice": [
            "UserName",
            "SerialNumber",
            "AuthenticationCode1",
            "AuthenticationCode2"
        ],
        "SetDefaultPolicyVersion": [
            "PolicyArn",
            "VersionId"
        ],
        "SetSecurityTokenServicePreferences": [
            "GlobalEndpointTokenVersion"
        ],
        "SimulateCustomPolicy": [
            "PolicyInputList",
            "ActionNames"
        ],
        "SimulatePrincipalPolicy": [
            "PolicySourceArn",
            "ActionNames"
        ],
        "TagInstanceProfile": [
            "InstanceProfileName",
            "Tags"
        ],
        "TagMFADevice": [
            "SerialNumber",
            "Tags"
        ],
        "TagOpenIDConnectProvider": [
            "OpenIDConnectProviderArn",
            "Tags"
        ],
        "TagPolicy": [
            "PolicyArn",
            "Tags"
        ],
        "TagRole": [
            "RoleName",
            "Tags"
        ],
        "TagSAMLProvider": [
            "SAMLProviderArn",
            "Tags"
        ],
        "TagServerCertificate": [
            "ServerCertificateName",
            "Tags"
        ],
        "TagUser": [
            "UserName",
            "Tags"
        ],
        "UntagInstanceProfile": [
            "InstanceProfileName",
            "TagKeys"
        ],
        "UntagMFADevice": [
            "SerialNumber",
            "TagKeys"
        ],
        "UntagOpenIDConnectProvider": [
            "OpenIDConnectProviderArn",
            "TagKeys"
        ],
        "UntagPolicy": [
            "PolicyArn",
            "TagKeys"
        ],
        "UntagRole": [
            "RoleName",
            "TagKeys"
        ],
        "UntagSAMLProvider": [
            "SAMLProviderArn",
            "TagKeys"
        ],
        "UntagServerCertificate": [
            "ServerCertificateName",
            "TagKeys"
        ],
        "UntagUser": [
            "UserName",
            "TagKeys"
        ],
        "UpdateAccessKey": [
            "AccessKeyId",
            "Status"
        ],
        "UpdateAccountPasswordPolicy": "",
        "UpdateAssumeRolePolicy": [
            "RoleName",
            "PolicyDocument"
        ],
        "UpdateGroup": [
            "GroupName"
        ],
        "UpdateLoginProfile": [
            "UserName"
        ],
        "UpdateOpenIDConnectProviderThumbprint": [
            "OpenIDConnectProviderArn",
            "ThumbprintList"
        ],
        "UpdateRole": [
            "RoleName"
        ],
        "UpdateRoleDescription": [
            "RoleName",
            "Description"
        ],
        "UpdateSAMLProvider": [
            "SAMLMetadataDocument",
            "SAMLProviderArn"
        ],
        "UpdateSSHPublicKey": [
            "UserName",
            "SSHPublicKeyId",
            "Status"
        ],
        "UpdateServerCertificate": [
            "ServerCertificateName"
        ],
        "UpdateServiceSpecificCredential": [
            "ServiceSpecificCredentialId",
            "Status"
        ],
        "UpdateSigningCertificate": [
            "CertificateId",
            "Status"
        ],
        "UpdateUser": [
            "UserName"
        ],
        "UploadSSHPublicKey": [
            "UserName",
            "SSHPublicKeyBody"
        ],
        "UploadServerCertificate": [
            "ServerCertificateName",
            "CertificateBody",
            "PrivateKey"
        ],
        "UploadSigningCertificate": [
            "CertificateBody"
        ]
    },
    "identitystore": {
        "CreateGroup": [
            "IdentityStoreId"
        ],
        "CreateGroupMembership": [
            "IdentityStoreId",
            "GroupId",
            "MemberId"
        ],
        "CreateUser": [
            "IdentityStoreId"
        ],
        "DeleteGroup": [
            "IdentityStoreId",
            "GroupId"
        ],
        "DeleteGroupMembership": [
            "IdentityStoreId",
            "MembershipId"
        ],
        "DeleteUser": [
            "IdentityStoreId",
            "UserId"
        ],
        "DescribeGroup": [
            "IdentityStoreId",
            "GroupId"
        ],
        "DescribeGroupMembership": [
            "IdentityStoreId",
            "MembershipId"
        ],
        "DescribeUser": [
            "IdentityStoreId",
            "UserId"
        ],
        "GetGroupId": [
            "IdentityStoreId",
            "AlternateIdentifier"
        ],
        "GetGroupMembershipId": [
            "IdentityStoreId",
            "GroupId",
            "MemberId"
        ],
        "GetUserId": [
            "IdentityStoreId",
            "AlternateIdentifier"
        ],
        "IsMemberInGroups": [
            "IdentityStoreId",
            "MemberId",
            "GroupIds"
        ],
        "ListGroupMemberships": [
            "IdentityStoreId",
            "GroupId"
        ],
        "ListGroupMembershipsForMember": [
            "IdentityStoreId",
            "MemberId"
        ],
        "ListGroups": [
            "IdentityStoreId"
        ],
        "ListUsers": [
            "IdentityStoreId"
        ],
        "UpdateGroup": [
            "IdentityStoreId",
            "GroupId",
            "Operations"
        ],
        "UpdateUser": [
            "IdentityStoreId",
            "UserId",
            "Operations"
        ]
    },
    "imagebuilder": {
        "CancelImageCreation": [
            "imageBuildVersionArn",
            "clientToken"
        ],
        "CancelLifecycleExecution": [
            "lifecycleExecutionId",
            "clientToken"
        ],
        "CreateComponent": [
            "name",
            "semanticVersion",
            "platform",
            "clientToken"
        ],
        "CreateContainerRecipe": [
            "containerType",
            "name",
            "semanticVersion",
            "components",
            "parentImage",
            "targetRepository",
            "clientToken"
        ],
        "CreateDistributionConfiguration": [
            "name",
            "distributions",
            "clientToken"
        ],
        "CreateImage": [
            "infrastructureConfigurationArn",
            "clientToken"
        ],
        "CreateImagePipeline": [
            "name",
            "infrastructureConfigurationArn",
            "clientToken"
        ],
        "CreateImageRecipe": [
            "name",
            "semanticVersion",
            "components",
            "parentImage",
            "clientToken"
        ],
        "CreateInfrastructureConfiguration": [
            "name",
            "instanceProfileName",
            "clientToken"
        ],
        "CreateLifecyclePolicy": [
            "name",
            "executionRole",
            "resourceType",
            "policyDetails",
            "resourceSelection",
            "clientToken"
        ],
        "CreateWorkflow": [
            "name",
            "semanticVersion",
            "clientToken",
            "type"
        ],
        "DeleteComponent": [
            "componentBuildVersionArn"
        ],
        "DeleteContainerRecipe": [
            "containerRecipeArn"
        ],
        "DeleteDistributionConfiguration": [
            "distributionConfigurationArn"
        ],
        "DeleteImage": [
            "imageBuildVersionArn"
        ],
        "DeleteImagePipeline": [
            "imagePipelineArn"
        ],
        "DeleteImageRecipe": [
            "imageRecipeArn"
        ],
        "DeleteInfrastructureConfiguration": [
            "infrastructureConfigurationArn"
        ],
        "DeleteLifecyclePolicy": [
            "lifecyclePolicyArn"
        ],
        "DeleteWorkflow": [
            "workflowBuildVersionArn"
        ],
        "GetComponent": [
            "componentBuildVersionArn"
        ],
        "GetComponentPolicy": [
            "componentArn"
        ],
        "GetContainerRecipe": [
            "containerRecipeArn"
        ],
        "GetContainerRecipePolicy": [
            "containerRecipeArn"
        ],
        "GetDistributionConfiguration": [
            "distributionConfigurationArn"
        ],
        "GetImage": [
            "imageBuildVersionArn"
        ],
        "GetImagePipeline": [
            "imagePipelineArn"
        ],
        "GetImagePolicy": [
            "imageArn"
        ],
        "GetImageRecipe": [
            "imageRecipeArn"
        ],
        "GetImageRecipePolicy": [
            "imageRecipeArn"
        ],
        "GetInfrastructureConfiguration": [
            "infrastructureConfigurationArn"
        ],
        "GetLifecycleExecution": [
            "lifecycleExecutionId"
        ],
        "GetLifecyclePolicy": [
            "lifecyclePolicyArn"
        ],
        "GetWorkflow": [
            "workflowBuildVersionArn"
        ],
        "GetWorkflowExecution": [
            "workflowExecutionId"
        ],
        "GetWorkflowStepExecution": [
            "stepExecutionId"
        ],
        "ImportComponent": [
            "name",
            "semanticVersion",
            "type",
            "format",
            "platform",
            "clientToken"
        ],
        "ImportVmImage": [
            "name",
            "semanticVersion",
            "platform",
            "vmImportTaskId",
            "clientToken"
        ],
        "ListComponentBuildVersions": [
            "componentVersionArn"
        ],
        "ListComponents": "",
        "ListContainerRecipes": "",
        "ListDistributionConfigurations": "",
        "ListImageBuildVersions": [
            "imageVersionArn"
        ],
        "ListImagePackages": [
            "imageBuildVersionArn"
        ],
        "ListImagePipelineImages": [
            "imagePipelineArn"
        ],
        "ListImagePipelines": "",
        "ListImageRecipes": "",
        "ListImageScanFindingAggregations": "",
        "ListImageScanFindings": "",
        "ListImages": "",
        "ListInfrastructureConfigurations": "",
        "ListLifecycleExecutionResources": [
            "lifecycleExecutionId"
        ],
        "ListLifecycleExecutions": [
            "resourceArn"
        ],
        "ListLifecyclePolicies": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWaitingWorkflowSteps": "",
        "ListWorkflowBuildVersions": [
            "workflowVersionArn"
        ],
        "ListWorkflowExecutions": [
            "imageBuildVersionArn"
        ],
        "ListWorkflowStepExecutions": [
            "workflowExecutionId"
        ],
        "ListWorkflows": "",
        "PutComponentPolicy": [
            "componentArn",
            "policy"
        ],
        "PutContainerRecipePolicy": [
            "containerRecipeArn",
            "policy"
        ],
        "PutImagePolicy": [
            "imageArn",
            "policy"
        ],
        "PutImageRecipePolicy": [
            "imageRecipeArn",
            "policy"
        ],
        "SendWorkflowStepAction": [
            "stepExecutionId",
            "imageBuildVersionArn",
            "action",
            "clientToken"
        ],
        "StartImagePipelineExecution": [
            "imagePipelineArn",
            "clientToken"
        ],
        "StartResourceStateUpdate": [
            "resourceArn",
            "state",
            "clientToken"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDistributionConfiguration": [
            "distributionConfigurationArn",
            "distributions",
            "clientToken"
        ],
        "UpdateImagePipeline": [
            "imagePipelineArn",
            "infrastructureConfigurationArn",
            "clientToken"
        ],
        "UpdateInfrastructureConfiguration": [
            "infrastructureConfigurationArn",
            "instanceProfileName",
            "clientToken"
        ],
        "UpdateLifecyclePolicy": [
            "lifecyclePolicyArn",
            "executionRole",
            "resourceType",
            "policyDetails",
            "resourceSelection",
            "clientToken"
        ]
    },
    "importexport": {
        "CancelJob": [
            "JobId"
        ],
        "CreateJob": [
            "JobType",
            "Manifest",
            "ValidateOnly"
        ],
        "GetShippingLabel": [
            "jobIds"
        ],
        "GetStatus": [
            "JobId"
        ],
        "ListJobs": "",
        "UpdateJob": [
            "JobId",
            "Manifest",
            "JobType",
            "ValidateOnly"
        ]
    },
    "inspector": {
        "AddAttributesToFindings": [
            "findingArns",
            "attributes"
        ],
        "CreateAssessmentTarget": [
            "assessmentTargetName"
        ],
        "CreateAssessmentTemplate": [
            "assessmentTargetArn",
            "assessmentTemplateName",
            "durationInSeconds",
            "rulesPackageArns"
        ],
        "CreateExclusionsPreview": [
            "assessmentTemplateArn"
        ],
        "CreateResourceGroup": [
            "resourceGroupTags"
        ],
        "DeleteAssessmentRun": [
            "assessmentRunArn"
        ],
        "DeleteAssessmentTarget": [
            "assessmentTargetArn"
        ],
        "DeleteAssessmentTemplate": [
            "assessmentTemplateArn"
        ],
        "DescribeAssessmentRuns": [
            "assessmentRunArns"
        ],
        "DescribeAssessmentTargets": [
            "assessmentTargetArns"
        ],
        "DescribeAssessmentTemplates": [
            "assessmentTemplateArns"
        ],
        "DescribeCrossAccountAccessRole": "",
        "DescribeExclusions": [
            "exclusionArns"
        ],
        "DescribeFindings": [
            "findingArns"
        ],
        "DescribeResourceGroups": [
            "resourceGroupArns"
        ],
        "DescribeRulesPackages": [
            "rulesPackageArns"
        ],
        "GetAssessmentReport": [
            "assessmentRunArn",
            "reportFileFormat",
            "reportType"
        ],
        "GetExclusionsPreview": [
            "assessmentTemplateArn",
            "previewToken"
        ],
        "GetTelemetryMetadata": [
            "assessmentRunArn"
        ],
        "ListAssessmentRunAgents": [
            "assessmentRunArn"
        ],
        "ListAssessmentRuns": "",
        "ListAssessmentTargets": "",
        "ListAssessmentTemplates": "",
        "ListEventSubscriptions": "",
        "ListExclusions": [
            "assessmentRunArn"
        ],
        "ListFindings": "",
        "ListRulesPackages": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PreviewAgents": [
            "previewAgentsArn"
        ],
        "RegisterCrossAccountAccessRole": [
            "roleArn"
        ],
        "RemoveAttributesFromFindings": [
            "findingArns",
            "attributeKeys"
        ],
        "SetTagsForResource": [
            "resourceArn"
        ],
        "StartAssessmentRun": [
            "assessmentTemplateArn"
        ],
        "StopAssessmentRun": [
            "assessmentRunArn"
        ],
        "SubscribeToEvent": [
            "resourceArn",
            "event",
            "topicArn"
        ],
        "UnsubscribeFromEvent": [
            "resourceArn",
            "event",
            "topicArn"
        ],
        "UpdateAssessmentTarget": [
            "assessmentTargetArn",
            "assessmentTargetName"
        ]
    },
    "inspector-scan": {
        "ScanSbom": [
            "sbom"
        ]
    },
    "inspector2": {
        "AssociateMember": [
            "accountId"
        ],
        "BatchGetAccountStatus": "",
        "BatchGetCodeSnippet": [
            "findingArns"
        ],
        "BatchGetFindingDetails": [
            "findingArns"
        ],
        "BatchGetFreeTrialInfo": [
            "accountIds"
        ],
        "BatchGetMemberEc2DeepInspectionStatus": "",
        "BatchUpdateMemberEc2DeepInspectionStatus": [
            "accountIds"
        ],
        "CancelFindingsReport": [
            "reportId"
        ],
        "CancelSbomExport": [
            "reportId"
        ],
        "CreateCisScanConfiguration": [
            "scanName",
            "schedule",
            "securityLevel",
            "targets"
        ],
        "CreateFilter": [
            "action",
            "filterCriteria",
            "name"
        ],
        "CreateFindingsReport": [
            "reportFormat",
            "s3Destination"
        ],
        "CreateSbomExport": [
            "reportFormat",
            "s3Destination"
        ],
        "DeleteCisScanConfiguration": [
            "scanConfigurationArn"
        ],
        "DeleteFilter": [
            "arn"
        ],
        "DescribeOrganizationConfiguration": "",
        "Disable": "",
        "DisableDelegatedAdminAccount": [
            "delegatedAdminAccountId"
        ],
        "DisassociateMember": [
            "accountId"
        ],
        "Enable": [
            "resourceTypes"
        ],
        "EnableDelegatedAdminAccount": [
            "delegatedAdminAccountId"
        ],
        "GetCisScanReport": [
            "scanArn"
        ],
        "GetCisScanResultDetails": [
            "accountId",
            "scanArn",
            "targetResourceId"
        ],
        "GetConfiguration": "",
        "GetDelegatedAdminAccount": "",
        "GetEc2DeepInspectionConfiguration": "",
        "GetEncryptionKey": [
            "resourceType",
            "scanType"
        ],
        "GetFindingsReportStatus": "",
        "GetMember": [
            "accountId"
        ],
        "GetSbomExport": [
            "reportId"
        ],
        "ListAccountPermissions": "",
        "ListCisScanConfigurations": "",
        "ListCisScanResultsAggregatedByChecks": [
            "scanArn"
        ],
        "ListCisScanResultsAggregatedByTargetResource": [
            "scanArn"
        ],
        "ListCisScans": "",
        "ListCoverage": "",
        "ListCoverageStatistics": "",
        "ListDelegatedAdminAccounts": "",
        "ListFilters": "",
        "ListFindingAggregations": [
            "aggregationType"
        ],
        "ListFindings": "",
        "ListMembers": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListUsageTotals": "",
        "ResetEncryptionKey": [
            "resourceType",
            "scanType"
        ],
        "SearchVulnerabilities": [
            "filterCriteria"
        ],
        "SendCisSessionHealth": [
            "scanJobId",
            "sessionToken"
        ],
        "SendCisSessionTelemetry": [
            "messages",
            "scanJobId",
            "sessionToken"
        ],
        "StartCisSession": [
            "message",
            "scanJobId"
        ],
        "StopCisSession": [
            "message",
            "scanJobId",
            "sessionToken"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCisScanConfiguration": [
            "scanConfigurationArn"
        ],
        "UpdateConfiguration": [
            "ecrConfiguration"
        ],
        "UpdateEc2DeepInspectionConfiguration": "",
        "UpdateEncryptionKey": [
            "kmsKeyId",
            "resourceType",
            "scanType"
        ],
        "UpdateFilter": [
            "filterArn"
        ],
        "UpdateOrgEc2DeepInspectionConfiguration": [
            "orgPackagePaths"
        ],
        "UpdateOrganizationConfiguration": [
            "autoEnable"
        ]
    },
    "internetmonitor": {
        "CreateMonitor": [
            "MonitorName"
        ],
        "DeleteMonitor": [
            "MonitorName"
        ],
        "GetHealthEvent": [
            "MonitorName",
            "EventId"
        ],
        "GetMonitor": [
            "MonitorName"
        ],
        "GetQueryResults": [
            "MonitorName",
            "QueryId"
        ],
        "GetQueryStatus": [
            "MonitorName",
            "QueryId"
        ],
        "ListHealthEvents": [
            "MonitorName"
        ],
        "ListMonitors": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartQuery": [
            "MonitorName",
            "StartTime",
            "EndTime",
            "QueryType"
        ],
        "StopQuery": [
            "MonitorName",
            "QueryId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateMonitor": [
            "MonitorName"
        ]
    },
    "iot": {
        "AcceptCertificateTransfer": [
            "certificateId"
        ],
        "AddThingToBillingGroup": "",
        "AddThingToThingGroup": "",
        "AssociateTargetsWithJob": [
            "targets",
            "jobId"
        ],
        "AttachPolicy": [
            "policyName",
            "target"
        ],
        "AttachPrincipalPolicy": [
            "policyName",
            "principal"
        ],
        "AttachSecurityProfile": [
            "securityProfileName",
            "securityProfileTargetArn"
        ],
        "AttachThingPrincipal": [
            "thingName",
            "principal"
        ],
        "CancelAuditMitigationActionsTask": [
            "taskId"
        ],
        "CancelAuditTask": [
            "taskId"
        ],
        "CancelCertificateTransfer": [
            "certificateId"
        ],
        "CancelDetectMitigationActionsTask": [
            "taskId"
        ],
        "CancelJob": [
            "jobId"
        ],
        "CancelJobExecution": [
            "jobId",
            "thingName"
        ],
        "ClearDefaultAuthorizer": "",
        "ConfirmTopicRuleDestination": [
            "confirmationToken"
        ],
        "CreateAuditSuppression": [
            "checkName",
            "resourceIdentifier",
            "clientRequestToken"
        ],
        "CreateAuthorizer": [
            "authorizerName",
            "authorizerFunctionArn"
        ],
        "CreateBillingGroup": [
            "billingGroupName"
        ],
        "CreateCertificateFromCsr": [
            "certificateSigningRequest"
        ],
        "CreateCertificateProvider": [
            "certificateProviderName",
            "lambdaFunctionArn",
            "accountDefaultForOperations"
        ],
        "CreateCustomMetric": [
            "metricName",
            "metricType",
            "clientRequestToken"
        ],
        "CreateDimension": [
            "name",
            "type",
            "stringValues",
            "clientRequestToken"
        ],
        "CreateDomainConfiguration": [
            "domainConfigurationName"
        ],
        "CreateDynamicThingGroup": [
            "thingGroupName",
            "queryString"
        ],
        "CreateFleetMetric": [
            "metricName",
            "queryString",
            "aggregationType",
            "period",
            "aggregationField"
        ],
        "CreateJob": [
            "jobId",
            "targets"
        ],
        "CreateJobTemplate": [
            "jobTemplateId",
            "description"
        ],
        "CreateKeysAndCertificate": "",
        "CreateMitigationAction": [
            "actionName",
            "roleArn",
            "actionParams"
        ],
        "CreateOTAUpdate": [
            "otaUpdateId",
            "targets",
            "files",
            "roleArn"
        ],
        "CreatePackage": [
            "packageName"
        ],
        "CreatePackageVersion": [
            "packageName",
            "versionName"
        ],
        "CreatePolicy": [
            "policyName",
            "policyDocument"
        ],
        "CreatePolicyVersion": [
            "policyName",
            "policyDocument"
        ],
        "CreateProvisioningClaim": [
            "templateName"
        ],
        "CreateProvisioningTemplate": [
            "templateName",
            "templateBody",
            "provisioningRoleArn"
        ],
        "CreateProvisioningTemplateVersion": [
            "templateName",
            "templateBody"
        ],
        "CreateRoleAlias": [
            "roleAlias",
            "roleArn"
        ],
        "CreateScheduledAudit": [
            "frequency",
            "targetCheckNames",
            "scheduledAuditName"
        ],
        "CreateSecurityProfile": [
            "securityProfileName"
        ],
        "CreateStream": [
            "streamId",
            "files",
            "roleArn"
        ],
        "CreateThing": [
            "thingName"
        ],
        "CreateThingGroup": [
            "thingGroupName"
        ],
        "CreateThingType": [
            "thingTypeName"
        ],
        "CreateTopicRule": [
            "ruleName",
            "topicRulePayload"
        ],
        "CreateTopicRuleDestination": [
            "destinationConfiguration"
        ],
        "DeleteAccountAuditConfiguration": "",
        "DeleteAuditSuppression": [
            "checkName",
            "resourceIdentifier"
        ],
        "DeleteAuthorizer": [
            "authorizerName"
        ],
        "DeleteBillingGroup": [
            "billingGroupName"
        ],
        "DeleteCACertificate": [
            "certificateId"
        ],
        "DeleteCertificate": [
            "certificateId"
        ],
        "DeleteCertificateProvider": [
            "certificateProviderName"
        ],
        "DeleteCustomMetric": [
            "metricName"
        ],
        "DeleteDimension": [
            "name"
        ],
        "DeleteDomainConfiguration": [
            "domainConfigurationName"
        ],
        "DeleteDynamicThingGroup": [
            "thingGroupName"
        ],
        "DeleteFleetMetric": [
            "metricName"
        ],
        "DeleteJob": [
            "jobId"
        ],
        "DeleteJobExecution": [
            "jobId",
            "thingName",
            "executionNumber"
        ],
        "DeleteJobTemplate": [
            "jobTemplateId"
        ],
        "DeleteMitigationAction": [
            "actionName"
        ],
        "DeleteOTAUpdate": [
            "otaUpdateId"
        ],
        "DeletePackage": [
            "packageName"
        ],
        "DeletePackageVersion": [
            "packageName",
            "versionName"
        ],
        "DeletePolicy": [
            "policyName"
        ],
        "DeletePolicyVersion": [
            "policyName",
            "policyVersionId"
        ],
        "DeleteProvisioningTemplate": [
            "templateName"
        ],
        "DeleteProvisioningTemplateVersion": [
            "templateName",
            "versionId"
        ],
        "DeleteRegistrationCode": "",
        "DeleteRoleAlias": [
            "roleAlias"
        ],
        "DeleteScheduledAudit": [
            "scheduledAuditName"
        ],
        "DeleteSecurityProfile": [
            "securityProfileName"
        ],
        "DeleteStream": [
            "streamId"
        ],
        "DeleteThing": [
            "thingName"
        ],
        "DeleteThingGroup": [
            "thingGroupName"
        ],
        "DeleteThingType": [
            "thingTypeName"
        ],
        "DeleteTopicRule": [
            "ruleName"
        ],
        "DeleteTopicRuleDestination": [
            "arn"
        ],
        "DeleteV2LoggingLevel": [
            "targetType",
            "targetName"
        ],
        "DeprecateThingType": [
            "thingTypeName"
        ],
        "DescribeAccountAuditConfiguration": "",
        "DescribeAuditFinding": [
            "findingId"
        ],
        "DescribeAuditMitigationActionsTask": [
            "taskId"
        ],
        "DescribeAuditSuppression": [
            "checkName",
            "resourceIdentifier"
        ],
        "DescribeAuditTask": [
            "taskId"
        ],
        "DescribeAuthorizer": [
            "authorizerName"
        ],
        "DescribeBillingGroup": [
            "billingGroupName"
        ],
        "DescribeCACertificate": [
            "certificateId"
        ],
        "DescribeCertificate": [
            "certificateId"
        ],
        "DescribeCertificateProvider": [
            "certificateProviderName"
        ],
        "DescribeCustomMetric": [
            "metricName"
        ],
        "DescribeDefaultAuthorizer": "",
        "DescribeDetectMitigationActionsTask": [
            "taskId"
        ],
        "DescribeDimension": [
            "name"
        ],
        "DescribeDomainConfiguration": [
            "domainConfigurationName"
        ],
        "DescribeEndpoint": "",
        "DescribeEventConfigurations": "",
        "DescribeFleetMetric": [
            "metricName"
        ],
        "DescribeIndex": [
            "indexName"
        ],
        "DescribeJob": [
            "jobId"
        ],
        "DescribeJobExecution": [
            "jobId",
            "thingName"
        ],
        "DescribeJobTemplate": [
            "jobTemplateId"
        ],
        "DescribeManagedJobTemplate": [
            "templateName"
        ],
        "DescribeMitigationAction": [
            "actionName"
        ],
        "DescribeProvisioningTemplate": [
            "templateName"
        ],
        "DescribeProvisioningTemplateVersion": [
            "templateName",
            "versionId"
        ],
        "DescribeRoleAlias": [
            "roleAlias"
        ],
        "DescribeScheduledAudit": [
            "scheduledAuditName"
        ],
        "DescribeSecurityProfile": [
            "securityProfileName"
        ],
        "DescribeStream": [
            "streamId"
        ],
        "DescribeThing": [
            "thingName"
        ],
        "DescribeThingGroup": [
            "thingGroupName"
        ],
        "DescribeThingRegistrationTask": [
            "taskId"
        ],
        "DescribeThingType": [
            "thingTypeName"
        ],
        "DetachPolicy": [
            "policyName",
            "target"
        ],
        "DetachPrincipalPolicy": [
            "policyName",
            "principal"
        ],
        "DetachSecurityProfile": [
            "securityProfileName",
            "securityProfileTargetArn"
        ],
        "DetachThingPrincipal": [
            "thingName",
            "principal"
        ],
        "DisableTopicRule": [
            "ruleName"
        ],
        "EnableTopicRule": [
            "ruleName"
        ],
        "GetBehaviorModelTrainingSummaries": "",
        "GetBucketsAggregation": [
            "queryString",
            "aggregationField",
            "bucketsAggregationType"
        ],
        "GetCardinality": [
            "queryString"
        ],
        "GetEffectivePolicies": "",
        "GetIndexingConfiguration": "",
        "GetJobDocument": [
            "jobId"
        ],
        "GetLoggingOptions": "",
        "GetOTAUpdate": [
            "otaUpdateId"
        ],
        "GetPackage": [
            "packageName"
        ],
        "GetPackageConfiguration": "",
        "GetPackageVersion": [
            "packageName",
            "versionName"
        ],
        "GetPercentiles": [
            "queryString"
        ],
        "GetPolicy": [
            "policyName"
        ],
        "GetPolicyVersion": [
            "policyName",
            "policyVersionId"
        ],
        "GetRegistrationCode": "",
        "GetStatistics": [
            "queryString"
        ],
        "GetTopicRule": [
            "ruleName"
        ],
        "GetTopicRuleDestination": [
            "arn"
        ],
        "GetV2LoggingOptions": "",
        "ListActiveViolations": "",
        "ListAttachedPolicies": [
            "target"
        ],
        "ListAuditFindings": "",
        "ListAuditMitigationActionsExecutions": [
            "taskId",
            "findingId"
        ],
        "ListAuditMitigationActionsTasks": [
            "startTime",
            "endTime"
        ],
        "ListAuditSuppressions": "",
        "ListAuditTasks": [
            "startTime",
            "endTime"
        ],
        "ListAuthorizers": "",
        "ListBillingGroups": "",
        "ListCACertificates": "",
        "ListCertificateProviders": "",
        "ListCertificates": "",
        "ListCertificatesByCA": [
            "caCertificateId"
        ],
        "ListCustomMetrics": "",
        "ListDetectMitigationActionsExecutions": "",
        "ListDetectMitigationActionsTasks": [
            "startTime",
            "endTime"
        ],
        "ListDimensions": "",
        "ListDomainConfigurations": "",
        "ListFleetMetrics": "",
        "ListIndices": "",
        "ListJobExecutionsForJob": [
            "jobId"
        ],
        "ListJobExecutionsForThing": [
            "thingName"
        ],
        "ListJobTemplates": "",
        "ListJobs": "",
        "ListManagedJobTemplates": "",
        "ListMetricValues": [
            "thingName",
            "metricName",
            "startTime",
            "endTime"
        ],
        "ListMitigationActions": "",
        "ListOTAUpdates": "",
        "ListOutgoingCertificates": "",
        "ListPackageVersions": [
            "packageName"
        ],
        "ListPackages": "",
        "ListPolicies": "",
        "ListPolicyPrincipals": [
            "policyName"
        ],
        "ListPolicyVersions": [
            "policyName"
        ],
        "ListPrincipalPolicies": [
            "principal"
        ],
        "ListPrincipalThings": [
            "principal"
        ],
        "ListProvisioningTemplateVersions": [
            "templateName"
        ],
        "ListProvisioningTemplates": "",
        "ListRelatedResourcesForAuditFinding": [
            "findingId"
        ],
        "ListRoleAliases": "",
        "ListScheduledAudits": "",
        "ListSecurityProfiles": "",
        "ListSecurityProfilesForTarget": [
            "securityProfileTargetArn"
        ],
        "ListStreams": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTargetsForPolicy": [
            "policyName"
        ],
        "ListTargetsForSecurityProfile": [
            "securityProfileName"
        ],
        "ListThingGroups": "",
        "ListThingGroupsForThing": [
            "thingName"
        ],
        "ListThingPrincipals": [
            "thingName"
        ],
        "ListThingRegistrationTaskReports": [
            "taskId",
            "reportType"
        ],
        "ListThingRegistrationTasks": "",
        "ListThingTypes": "",
        "ListThings": "",
        "ListThingsInBillingGroup": [
            "billingGroupName"
        ],
        "ListThingsInThingGroup": [
            "thingGroupName"
        ],
        "ListTopicRuleDestinations": "",
        "ListTopicRules": "",
        "ListV2LoggingLevels": "",
        "ListViolationEvents": [
            "startTime",
            "endTime"
        ],
        "PutVerificationStateOnViolation": [
            "violationId",
            "verificationState"
        ],
        "RegisterCACertificate": [
            "caCertificate"
        ],
        "RegisterCertificate": [
            "certificatePem"
        ],
        "RegisterCertificateWithoutCA": [
            "certificatePem"
        ],
        "RegisterThing": [
            "templateBody"
        ],
        "RejectCertificateTransfer": [
            "certificateId"
        ],
        "RemoveThingFromBillingGroup": "",
        "RemoveThingFromThingGroup": "",
        "ReplaceTopicRule": [
            "ruleName",
            "topicRulePayload"
        ],
        "SearchIndex": [
            "queryString"
        ],
        "SetDefaultAuthorizer": [
            "authorizerName"
        ],
        "SetDefaultPolicyVersion": [
            "policyName",
            "policyVersionId"
        ],
        "SetLoggingOptions": [
            "loggingOptionsPayload"
        ],
        "SetV2LoggingLevel": [
            "logTarget",
            "logLevel"
        ],
        "SetV2LoggingOptions": "",
        "StartAuditMitigationActionsTask": [
            "taskId",
            "target",
            "auditCheckToActionsMapping",
            "clientRequestToken"
        ],
        "StartDetectMitigationActionsTask": [
            "taskId",
            "target",
            "actions",
            "clientRequestToken"
        ],
        "StartOnDemandAuditTask": [
            "targetCheckNames"
        ],
        "StartThingRegistrationTask": [
            "templateBody",
            "inputFileBucket",
            "inputFileKey",
            "roleArn"
        ],
        "StopThingRegistrationTask": [
            "taskId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestAuthorization": [
            "authInfos"
        ],
        "TestInvokeAuthorizer": [
            "authorizerName"
        ],
        "TransferCertificate": [
            "certificateId",
            "targetAwsAccount"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccountAuditConfiguration": "",
        "UpdateAuditSuppression": [
            "checkName",
            "resourceIdentifier"
        ],
        "UpdateAuthorizer": [
            "authorizerName"
        ],
        "UpdateBillingGroup": [
            "billingGroupName",
            "billingGroupProperties"
        ],
        "UpdateCACertificate": [
            "certificateId"
        ],
        "UpdateCertificate": [
            "certificateId",
            "newStatus"
        ],
        "UpdateCertificateProvider": [
            "certificateProviderName"
        ],
        "UpdateCustomMetric": [
            "metricName",
            "displayName"
        ],
        "UpdateDimension": [
            "name",
            "stringValues"
        ],
        "UpdateDomainConfiguration": [
            "domainConfigurationName"
        ],
        "UpdateDynamicThingGroup": [
            "thingGroupName",
            "thingGroupProperties"
        ],
        "UpdateEventConfigurations": "",
        "UpdateFleetMetric": [
            "metricName",
            "indexName"
        ],
        "UpdateIndexingConfiguration": "",
        "UpdateJob": [
            "jobId"
        ],
        "UpdateMitigationAction": [
            "actionName"
        ],
        "UpdatePackage": [
            "packageName"
        ],
        "UpdatePackageConfiguration": "",
        "UpdatePackageVersion": [
            "packageName",
            "versionName"
        ],
        "UpdateProvisioningTemplate": [
            "templateName"
        ],
        "UpdateRoleAlias": [
            "roleAlias"
        ],
        "UpdateScheduledAudit": [
            "scheduledAuditName"
        ],
        "UpdateSecurityProfile": [
            "securityProfileName"
        ],
        "UpdateStream": [
            "streamId"
        ],
        "UpdateThing": [
            "thingName"
        ],
        "UpdateThingGroup": [
            "thingGroupName",
            "thingGroupProperties"
        ],
        "UpdateThingGroupsForThing": "",
        "UpdateTopicRuleDestination": [
            "arn",
            "status"
        ],
        "ValidateSecurityProfileBehaviors": [
            "behaviors"
        ]
    },
    "iot-data": {
        "DeleteThingShadow": [
            "thingName"
        ],
        "GetRetainedMessage": [
            "topic"
        ],
        "GetThingShadow": [
            "thingName"
        ],
        "ListNamedShadowsForThing": [
            "thingName"
        ],
        "ListRetainedMessages": "",
        "Publish": [
            "topic"
        ],
        "UpdateThingShadow": [
            "thingName",
            "payload"
        ]
    },
    "iot-jobs-data": {
        "DescribeJobExecution": [
            "jobId",
            "thingName"
        ],
        "GetPendingJobExecutions": [
            "thingName"
        ],
        "StartNextPendingJobExecution": [
            "thingName"
        ],
        "UpdateJobExecution": [
            "jobId",
            "thingName",
            "status"
        ]
    },
    "devices": {
        "ClaimDevicesByClaimCode": [
            "ClaimCode"
        ],
        "DescribeDevice": [
            "DeviceId"
        ],
        "FinalizeDeviceClaim": [
            "DeviceId"
        ],
        "GetDeviceMethods": [
            "DeviceId"
        ],
        "InitiateDeviceClaim": [
            "DeviceId"
        ],
        "InvokeDeviceMethod": [
            "DeviceId"
        ],
        "ListDeviceEvents": [
            "DeviceId",
            "FromTimeStamp",
            "ToTimeStamp"
        ],
        "ListDevices": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UnclaimDevice": [
            "DeviceId"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateDeviceState": [
            "DeviceId"
        ]
    },
    "iot1click-projects": {
        "AssociateDeviceWithPlacement": [
            "projectName",
            "placementName",
            "deviceId",
            "deviceTemplateName"
        ],
        "CreatePlacement": [
            "placementName",
            "projectName"
        ],
        "CreateProject": [
            "projectName"
        ],
        "DeletePlacement": [
            "placementName",
            "projectName"
        ],
        "DeleteProject": [
            "projectName"
        ],
        "DescribePlacement": [
            "placementName",
            "projectName"
        ],
        "DescribeProject": [
            "projectName"
        ],
        "DisassociateDeviceFromPlacement": [
            "projectName",
            "placementName",
            "deviceTemplateName"
        ],
        "GetDevicesInPlacement": [
            "projectName",
            "placementName"
        ],
        "ListPlacements": [
            "projectName"
        ],
        "ListProjects": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdatePlacement": [
            "placementName",
            "projectName"
        ],
        "UpdateProject": [
            "projectName"
        ]
    },
    "iotanalytics": {
        "BatchPutMessage": [
            "channelName",
            "messages"
        ],
        "CancelPipelineReprocessing": [
            "pipelineName",
            "reprocessingId"
        ],
        "CreateChannel": [
            "channelName"
        ],
        "CreateDataset": [
            "datasetName",
            "actions"
        ],
        "CreateDatasetContent": [
            "datasetName"
        ],
        "CreateDatastore": [
            "datastoreName"
        ],
        "CreatePipeline": [
            "pipelineName",
            "pipelineActivities"
        ],
        "DeleteChannel": [
            "channelName"
        ],
        "DeleteDataset": [
            "datasetName"
        ],
        "DeleteDatasetContent": [
            "datasetName"
        ],
        "DeleteDatastore": [
            "datastoreName"
        ],
        "DeletePipeline": [
            "pipelineName"
        ],
        "DescribeChannel": [
            "channelName"
        ],
        "DescribeDataset": [
            "datasetName"
        ],
        "DescribeDatastore": [
            "datastoreName"
        ],
        "DescribeLoggingOptions": "",
        "DescribePipeline": [
            "pipelineName"
        ],
        "GetDatasetContent": [
            "datasetName"
        ],
        "ListChannels": "",
        "ListDatasetContents": [
            "datasetName"
        ],
        "ListDatasets": "",
        "ListDatastores": "",
        "ListPipelines": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutLoggingOptions": [
            "loggingOptions"
        ],
        "RunPipelineActivity": [
            "pipelineActivity",
            "payloads"
        ],
        "SampleChannelData": [
            "channelName"
        ],
        "StartPipelineReprocessing": [
            "pipelineName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateChannel": [
            "channelName"
        ],
        "UpdateDataset": [
            "datasetName",
            "actions"
        ],
        "UpdateDatastore": [
            "datastoreName"
        ],
        "UpdatePipeline": [
            "pipelineName",
            "pipelineActivities"
        ]
    },
    "iotdeviceadvisor": {
        "CreateSuiteDefinition": [
            "suiteDefinitionConfiguration"
        ],
        "DeleteSuiteDefinition": [
            "suiteDefinitionId"
        ],
        "GetEndpoint": "",
        "GetSuiteDefinition": [
            "suiteDefinitionId"
        ],
        "GetSuiteRun": [
            "suiteDefinitionId",
            "suiteRunId"
        ],
        "GetSuiteRunReport": [
            "suiteDefinitionId",
            "suiteRunId"
        ],
        "ListSuiteDefinitions": "",
        "ListSuiteRuns": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartSuiteRun": [
            "suiteDefinitionId",
            "suiteRunConfiguration"
        ],
        "StopSuiteRun": [
            "suiteDefinitionId",
            "suiteRunId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateSuiteDefinition": [
            "suiteDefinitionId",
            "suiteDefinitionConfiguration"
        ]
    },
    "iotevents": {
        "CreateAlarmModel": [
            "alarmModelName",
            "roleArn",
            "alarmRule"
        ],
        "CreateDetectorModel": [
            "detectorModelName",
            "detectorModelDefinition",
            "roleArn"
        ],
        "CreateInput": [
            "inputName",
            "inputDefinition"
        ],
        "DeleteAlarmModel": [
            "alarmModelName"
        ],
        "DeleteDetectorModel": [
            "detectorModelName"
        ],
        "DeleteInput": [
            "inputName"
        ],
        "DescribeAlarmModel": [
            "alarmModelName"
        ],
        "DescribeDetectorModel": [
            "detectorModelName"
        ],
        "DescribeDetectorModelAnalysis": [
            "analysisId"
        ],
        "DescribeInput": [
            "inputName"
        ],
        "DescribeLoggingOptions": "",
        "GetDetectorModelAnalysisResults": [
            "analysisId"
        ],
        "ListAlarmModelVersions": [
            "alarmModelName"
        ],
        "ListAlarmModels": "",
        "ListDetectorModelVersions": [
            "detectorModelName"
        ],
        "ListDetectorModels": "",
        "ListInputRoutings": [
            "inputIdentifier"
        ],
        "ListInputs": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutLoggingOptions": [
            "loggingOptions"
        ],
        "StartDetectorModelAnalysis": [
            "detectorModelDefinition"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAlarmModel": [
            "alarmModelName",
            "roleArn",
            "alarmRule"
        ],
        "UpdateDetectorModel": [
            "detectorModelName",
            "detectorModelDefinition",
            "roleArn"
        ],
        "UpdateInput": [
            "inputName",
            "inputDefinition"
        ]
    },
    "iotevents-data": {
        "BatchAcknowledgeAlarm": [
            "acknowledgeActionRequests"
        ],
        "BatchDeleteDetector": [
            "detectors"
        ],
        "BatchDisableAlarm": [
            "disableActionRequests"
        ],
        "BatchEnableAlarm": [
            "enableActionRequests"
        ],
        "BatchPutMessage": [
            "messages"
        ],
        "BatchResetAlarm": [
            "resetActionRequests"
        ],
        "BatchSnoozeAlarm": [
            "snoozeActionRequests"
        ],
        "BatchUpdateDetector": [
            "detectors"
        ],
        "DescribeAlarm": [
            "alarmModelName"
        ],
        "DescribeDetector": [
            "detectorModelName"
        ],
        "ListAlarms": [
            "alarmModelName"
        ],
        "ListDetectors": [
            "detectorModelName"
        ]
    },
    "iotfleethub": {
        "CreateApplication": [
            "applicationName",
            "roleArn"
        ],
        "DeleteApplication": [
            "applicationId"
        ],
        "DescribeApplication": [
            "applicationId"
        ],
        "ListApplications": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "applicationId"
        ]
    },
    "iotfleetwise": {
        "AssociateVehicleFleet": [
            "vehicleName",
            "fleetId"
        ],
        "BatchCreateVehicle": [
            "vehicles"
        ],
        "BatchUpdateVehicle": [
            "vehicles"
        ],
        "CreateCampaign": [
            "name",
            "signalCatalogArn",
            "targetArn",
            "collectionScheme"
        ],
        "CreateDecoderManifest": [
            "name",
            "modelManifestArn"
        ],
        "CreateFleet": [
            "fleetId",
            "signalCatalogArn"
        ],
        "CreateModelManifest": [
            "name",
            "nodes",
            "signalCatalogArn"
        ],
        "CreateSignalCatalog": [
            "name"
        ],
        "CreateVehicle": [
            "vehicleName",
            "modelManifestArn",
            "decoderManifestArn"
        ],
        "DeleteCampaign": [
            "name"
        ],
        "DeleteDecoderManifest": [
            "name"
        ],
        "DeleteFleet": [
            "fleetId"
        ],
        "DeleteModelManifest": [
            "name"
        ],
        "DeleteSignalCatalog": [
            "name"
        ],
        "DeleteVehicle": [
            "vehicleName"
        ],
        "DisassociateVehicleFleet": [
            "vehicleName",
            "fleetId"
        ],
        "GetCampaign": [
            "name"
        ],
        "GetDecoderManifest": [
            "name"
        ],
        "GetEncryptionConfiguration": "",
        "GetFleet": [
            "fleetId"
        ],
        "GetLoggingOptions": "",
        "GetModelManifest": [
            "name"
        ],
        "GetRegisterAccountStatus": "",
        "GetSignalCatalog": [
            "name"
        ],
        "GetVehicle": [
            "vehicleName"
        ],
        "GetVehicleStatus": [
            "vehicleName"
        ],
        "ImportDecoderManifest": [
            "name",
            "networkFileDefinitions"
        ],
        "ImportSignalCatalog": [
            "name"
        ],
        "ListCampaigns": "",
        "ListDecoderManifestNetworkInterfaces": [
            "name"
        ],
        "ListDecoderManifestSignals": [
            "name"
        ],
        "ListDecoderManifests": "",
        "ListFleets": "",
        "ListFleetsForVehicle": [
            "vehicleName"
        ],
        "ListModelManifestNodes": [
            "name"
        ],
        "ListModelManifests": "",
        "ListSignalCatalogNodes": [
            "name"
        ],
        "ListSignalCatalogs": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListVehicles": "",
        "ListVehiclesInFleet": [
            "fleetId"
        ],
        "PutEncryptionConfiguration": [
            "encryptionType"
        ],
        "PutLoggingOptions": [
            "cloudWatchLogDelivery"
        ],
        "RegisterAccount": "",
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateCampaign": [
            "name",
            "action"
        ],
        "UpdateDecoderManifest": [
            "name"
        ],
        "UpdateFleet": [
            "fleetId"
        ],
        "UpdateModelManifest": [
            "name"
        ],
        "UpdateSignalCatalog": [
            "name"
        ],
        "UpdateVehicle": [
            "vehicleName"
        ]
    },
    "iotsecuretunneling": {
        "CloseTunnel": [
            "tunnelId"
        ],
        "DescribeTunnel": [
            "tunnelId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTunnels": "",
        "OpenTunnel": "",
        "RotateTunnelAccessToken": [
            "tunnelId",
            "clientMode"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "iotsitewise": {
        "AssociateAssets": [
            "assetId",
            "hierarchyId",
            "childAssetId"
        ],
        "AssociateTimeSeriesToAssetProperty": [
            "alias",
            "assetId",
            "propertyId"
        ],
        "BatchAssociateProjectAssets": [
            "projectId",
            "assetIds"
        ],
        "BatchDisassociateProjectAssets": [
            "projectId",
            "assetIds"
        ],
        "BatchGetAssetPropertyAggregates": [
            "entries"
        ],
        "BatchGetAssetPropertyValue": [
            "entries"
        ],
        "BatchGetAssetPropertyValueHistory": [
            "entries"
        ],
        "BatchPutAssetPropertyValue": [
            "entries"
        ],
        "CreateAccessPolicy": [
            "accessPolicyIdentity",
            "accessPolicyResource",
            "accessPolicyPermission"
        ],
        "CreateAsset": [
            "assetName",
            "assetModelId"
        ],
        "CreateAssetModel": [
            "assetModelName"
        ],
        "CreateAssetModelCompositeModel": [
            "assetModelId",
            "assetModelCompositeModelName",
            "assetModelCompositeModelType"
        ],
        "CreateBulkImportJob": [
            "jobName",
            "jobRoleArn",
            "files",
            "errorReportLocation",
            "jobConfiguration"
        ],
        "CreateDashboard": [
            "projectId",
            "dashboardName",
            "dashboardDefinition"
        ],
        "CreateGateway": [
            "gatewayName",
            "gatewayPlatform"
        ],
        "CreatePortal": [
            "portalName",
            "portalContactEmail",
            "roleArn"
        ],
        "CreateProject": [
            "portalId",
            "projectName"
        ],
        "DeleteAccessPolicy": [
            "accessPolicyId"
        ],
        "DeleteAsset": [
            "assetId"
        ],
        "DeleteAssetModel": [
            "assetModelId"
        ],
        "DeleteAssetModelCompositeModel": [
            "assetModelId",
            "assetModelCompositeModelId"
        ],
        "DeleteDashboard": [
            "dashboardId"
        ],
        "DeleteGateway": [
            "gatewayId"
        ],
        "DeletePortal": [
            "portalId"
        ],
        "DeleteProject": [
            "projectId"
        ],
        "DeleteTimeSeries": "",
        "DescribeAccessPolicy": [
            "accessPolicyId"
        ],
        "DescribeAction": [
            "actionId"
        ],
        "DescribeAsset": [
            "assetId"
        ],
        "DescribeAssetCompositeModel": [
            "assetId",
            "assetCompositeModelId"
        ],
        "DescribeAssetModel": [
            "assetModelId"
        ],
        "DescribeAssetModelCompositeModel": [
            "assetModelId",
            "assetModelCompositeModelId"
        ],
        "DescribeAssetProperty": [
            "assetId",
            "propertyId"
        ],
        "DescribeBulkImportJob": [
            "jobId"
        ],
        "DescribeDashboard": [
            "dashboardId"
        ],
        "DescribeDefaultEncryptionConfiguration": "",
        "DescribeGateway": [
            "gatewayId"
        ],
        "DescribeGatewayCapabilityConfiguration": [
            "gatewayId",
            "capabilityNamespace"
        ],
        "DescribeLoggingOptions": "",
        "DescribePortal": [
            "portalId"
        ],
        "DescribeProject": [
            "projectId"
        ],
        "DescribeStorageConfiguration": "",
        "DescribeTimeSeries": "",
        "DisassociateAssets": [
            "assetId",
            "hierarchyId",
            "childAssetId"
        ],
        "DisassociateTimeSeriesFromAssetProperty": [
            "alias",
            "assetId",
            "propertyId"
        ],
        "ExecuteAction": [
            "targetResource",
            "actionDefinitionId",
            "actionPayload"
        ],
        "ExecuteQuery": [
            "queryStatement"
        ],
        "GetAssetPropertyAggregates": [
            "aggregateTypes",
            "resolution",
            "startDate",
            "endDate"
        ],
        "GetAssetPropertyValue": "",
        "GetAssetPropertyValueHistory": "",
        "GetInterpolatedAssetPropertyValues": [
            "startTimeInSeconds",
            "endTimeInSeconds",
            "quality",
            "intervalInSeconds",
            "type"
        ],
        "ListAccessPolicies": "",
        "ListActions": [
            "targetResourceType",
            "targetResourceId"
        ],
        "ListAssetModelCompositeModels": [
            "assetModelId"
        ],
        "ListAssetModelProperties": [
            "assetModelId"
        ],
        "ListAssetModels": "",
        "ListAssetProperties": [
            "assetId"
        ],
        "ListAssetRelationships": [
            "assetId",
            "traversalType"
        ],
        "ListAssets": "",
        "ListAssociatedAssets": [
            "assetId"
        ],
        "ListBulkImportJobs": "",
        "ListCompositionRelationships": [
            "assetModelId"
        ],
        "ListDashboards": [
            "projectId"
        ],
        "ListGateways": "",
        "ListPortals": "",
        "ListProjectAssets": [
            "projectId"
        ],
        "ListProjects": [
            "portalId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTimeSeries": "",
        "PutDefaultEncryptionConfiguration": [
            "encryptionType"
        ],
        "PutLoggingOptions": [
            "loggingOptions"
        ],
        "PutStorageConfiguration": [
            "storageType"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccessPolicy": [
            "accessPolicyId",
            "accessPolicyIdentity",
            "accessPolicyResource",
            "accessPolicyPermission"
        ],
        "UpdateAsset": [
            "assetId",
            "assetName"
        ],
        "UpdateAssetModel": [
            "assetModelId",
            "assetModelName"
        ],
        "UpdateAssetModelCompositeModel": [
            "assetModelId",
            "assetModelCompositeModelId",
            "assetModelCompositeModelName"
        ],
        "UpdateAssetProperty": [
            "assetId",
            "propertyId"
        ],
        "UpdateDashboard": [
            "dashboardId",
            "dashboardName",
            "dashboardDefinition"
        ],
        "UpdateGateway": [
            "gatewayId",
            "gatewayName"
        ],
        "UpdateGatewayCapabilityConfiguration": [
            "gatewayId",
            "capabilityNamespace",
            "capabilityConfiguration"
        ],
        "UpdatePortal": [
            "portalId",
            "portalName",
            "portalContactEmail",
            "roleArn"
        ],
        "UpdateProject": [
            "projectId",
            "projectName"
        ]
    },
    "iotthingsgraph": {
        "AssociateEntityToThing": [
            "thingName",
            "entityId"
        ],
        "CreateFlowTemplate": [
            "definition"
        ],
        "CreateSystemInstance": [
            "definition",
            "target"
        ],
        "CreateSystemTemplate": [
            "definition"
        ],
        "DeleteFlowTemplate": [
            "id"
        ],
        "DeleteNamespace": "",
        "DeleteSystemInstance": "",
        "DeleteSystemTemplate": [
            "id"
        ],
        "DeploySystemInstance": "",
        "DeprecateFlowTemplate": [
            "id"
        ],
        "DeprecateSystemTemplate": [
            "id"
        ],
        "DescribeNamespace": "",
        "DissociateEntityFromThing": [
            "thingName",
            "entityType"
        ],
        "GetEntities": [
            "ids"
        ],
        "GetFlowTemplate": [
            "id"
        ],
        "GetFlowTemplateRevisions": [
            "id"
        ],
        "GetNamespaceDeletionStatus": "",
        "GetSystemInstance": [
            "id"
        ],
        "GetSystemTemplate": [
            "id"
        ],
        "GetSystemTemplateRevisions": [
            "id"
        ],
        "GetUploadStatus": [
            "uploadId"
        ],
        "ListFlowExecutionMessages": [
            "flowExecutionId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "SearchEntities": [
            "entityTypes"
        ],
        "SearchFlowExecutions": [
            "systemInstanceId"
        ],
        "SearchFlowTemplates": "",
        "SearchSystemInstances": "",
        "SearchSystemTemplates": "",
        "SearchThings": [
            "entityId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UndeploySystemInstance": "",
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateFlowTemplate": [
            "id",
            "definition"
        ],
        "UpdateSystemTemplate": [
            "id",
            "definition"
        ],
        "UploadEntityDefinitions": ""
    },
    "iottwinmaker": {
        "BatchPutPropertyValues": [
            "workspaceId",
            "entries"
        ],
        "CancelMetadataTransferJob": [
            "metadataTransferJobId"
        ],
        "CreateComponentType": [
            "workspaceId",
            "componentTypeId"
        ],
        "CreateEntity": [
            "workspaceId",
            "entityName"
        ],
        "CreateMetadataTransferJob": [
            "sources",
            "destination"
        ],
        "CreateScene": [
            "workspaceId",
            "sceneId",
            "contentLocation"
        ],
        "CreateSyncJob": [
            "workspaceId",
            "syncSource",
            "syncRole"
        ],
        "CreateWorkspace": [
            "workspaceId"
        ],
        "DeleteComponentType": [
            "workspaceId",
            "componentTypeId"
        ],
        "DeleteEntity": [
            "workspaceId",
            "entityId"
        ],
        "DeleteScene": [
            "workspaceId",
            "sceneId"
        ],
        "DeleteSyncJob": [
            "workspaceId",
            "syncSource"
        ],
        "DeleteWorkspace": [
            "workspaceId"
        ],
        "ExecuteQuery": [
            "workspaceId",
            "queryStatement"
        ],
        "GetComponentType": [
            "workspaceId",
            "componentTypeId"
        ],
        "GetEntity": [
            "workspaceId",
            "entityId"
        ],
        "GetMetadataTransferJob": [
            "metadataTransferJobId"
        ],
        "GetPricingPlan": "",
        "GetPropertyValue": [
            "selectedProperties",
            "workspaceId"
        ],
        "GetPropertyValueHistory": [
            "workspaceId",
            "selectedProperties"
        ],
        "GetScene": [
            "workspaceId",
            "sceneId"
        ],
        "GetSyncJob": [
            "syncSource"
        ],
        "GetWorkspace": [
            "workspaceId"
        ],
        "ListComponentTypes": [
            "workspaceId"
        ],
        "ListComponents": [
            "workspaceId",
            "entityId"
        ],
        "ListEntities": [
            "workspaceId"
        ],
        "ListMetadataTransferJobs": [
            "sourceType",
            "destinationType"
        ],
        "ListProperties": [
            "workspaceId",
            "entityId"
        ],
        "ListScenes": [
            "workspaceId"
        ],
        "ListSyncJobs": [
            "workspaceId"
        ],
        "ListSyncResources": [
            "workspaceId",
            "syncSource"
        ],
        "ListTagsForResource": [
            "resourceARN"
        ],
        "ListWorkspaces": "",
        "TagResource": [
            "resourceARN",
            "tags"
        ],
        "UntagResource": [
            "resourceARN",
            "tagKeys"
        ],
        "UpdateComponentType": [
            "workspaceId",
            "componentTypeId"
        ],
        "UpdateEntity": [
            "workspaceId",
            "entityId"
        ],
        "UpdatePricingPlan": [
            "pricingMode"
        ],
        "UpdateScene": [
            "workspaceId",
            "sceneId"
        ],
        "UpdateWorkspace": [
            "workspaceId"
        ]
    },
    "iotwireless": {
        "AssociateAwsAccountWithPartnerAccount": [
            "Sidewalk"
        ],
        "AssociateMulticastGroupWithFuotaTask": [
            "Id",
            "MulticastGroupId"
        ],
        "AssociateWirelessDeviceWithFuotaTask": [
            "Id",
            "WirelessDeviceId"
        ],
        "AssociateWirelessDeviceWithMulticastGroup": [
            "Id",
            "WirelessDeviceId"
        ],
        "AssociateWirelessDeviceWithThing": [
            "Id",
            "ThingArn"
        ],
        "AssociateWirelessGatewayWithCertificate": [
            "Id",
            "IotCertificateId"
        ],
        "AssociateWirelessGatewayWithThing": [
            "Id",
            "ThingArn"
        ],
        "CancelMulticastGroupSession": [
            "Id"
        ],
        "CreateDestination": [
            "Name",
            "ExpressionType",
            "Expression",
            "RoleArn"
        ],
        "CreateDeviceProfile": "",
        "CreateFuotaTask": [
            "FirmwareUpdateImage",
            "FirmwareUpdateRole"
        ],
        "CreateMulticastGroup": [
            "LoRaWAN"
        ],
        "CreateNetworkAnalyzerConfiguration": [
            "Name"
        ],
        "CreateServiceProfile": "",
        "CreateWirelessDevice": [
            "Type",
            "DestinationName"
        ],
        "CreateWirelessGateway": [
            "LoRaWAN"
        ],
        "CreateWirelessGatewayTask": [
            "Id",
            "WirelessGatewayTaskDefinitionId"
        ],
        "CreateWirelessGatewayTaskDefinition": [
            "AutoCreateTasks"
        ],
        "DeleteDestination": [
            "Name"
        ],
        "DeleteDeviceProfile": [
            "Id"
        ],
        "DeleteFuotaTask": [
            "Id"
        ],
        "DeleteMulticastGroup": [
            "Id"
        ],
        "DeleteNetworkAnalyzerConfiguration": [
            "ConfigurationName"
        ],
        "DeleteQueuedMessages": [
            "Id",
            "MessageId"
        ],
        "DeleteServiceProfile": [
            "Id"
        ],
        "DeleteWirelessDevice": [
            "Id"
        ],
        "DeleteWirelessDeviceImportTask": [
            "Id"
        ],
        "DeleteWirelessGateway": [
            "Id"
        ],
        "DeleteWirelessGatewayTask": [
            "Id"
        ],
        "DeleteWirelessGatewayTaskDefinition": [
            "Id"
        ],
        "DeregisterWirelessDevice": [
            "Identifier"
        ],
        "DisassociateAwsAccountFromPartnerAccount": [
            "PartnerAccountId",
            "PartnerType"
        ],
        "DisassociateMulticastGroupFromFuotaTask": [
            "Id",
            "MulticastGroupId"
        ],
        "DisassociateWirelessDeviceFromFuotaTask": [
            "Id",
            "WirelessDeviceId"
        ],
        "DisassociateWirelessDeviceFromMulticastGroup": [
            "Id",
            "WirelessDeviceId"
        ],
        "DisassociateWirelessDeviceFromThing": [
            "Id"
        ],
        "DisassociateWirelessGatewayFromCertificate": [
            "Id"
        ],
        "DisassociateWirelessGatewayFromThing": [
            "Id"
        ],
        "GetDestination": [
            "Name"
        ],
        "GetDeviceProfile": [
            "Id"
        ],
        "GetEventConfigurationByResourceTypes": "",
        "GetFuotaTask": [
            "Id"
        ],
        "GetLogLevelsByResourceTypes": "",
        "GetMulticastGroup": [
            "Id"
        ],
        "GetMulticastGroupSession": [
            "Id"
        ],
        "GetNetworkAnalyzerConfiguration": [
            "ConfigurationName"
        ],
        "GetPartnerAccount": [
            "PartnerAccountId",
            "PartnerType"
        ],
        "GetPosition": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "GetPositionConfiguration": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "GetPositionEstimate": "",
        "GetResourceEventConfiguration": [
            "Identifier",
            "IdentifierType"
        ],
        "GetResourceLogLevel": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "GetResourcePosition": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "GetServiceEndpoint": "",
        "GetServiceProfile": [
            "Id"
        ],
        "GetWirelessDevice": [
            "Identifier",
            "IdentifierType"
        ],
        "GetWirelessDeviceImportTask": [
            "Id"
        ],
        "GetWirelessDeviceStatistics": [
            "WirelessDeviceId"
        ],
        "GetWirelessGateway": [
            "Identifier",
            "IdentifierType"
        ],
        "GetWirelessGatewayCertificate": [
            "Id"
        ],
        "GetWirelessGatewayFirmwareInformation": [
            "Id"
        ],
        "GetWirelessGatewayStatistics": [
            "WirelessGatewayId"
        ],
        "GetWirelessGatewayTask": [
            "Id"
        ],
        "GetWirelessGatewayTaskDefinition": [
            "Id"
        ],
        "ListDestinations": "",
        "ListDeviceProfiles": "",
        "ListDevicesForWirelessDeviceImportTask": [
            "Id"
        ],
        "ListEventConfigurations": [
            "ResourceType"
        ],
        "ListFuotaTasks": "",
        "ListMulticastGroups": "",
        "ListMulticastGroupsByFuotaTask": [
            "Id"
        ],
        "ListNetworkAnalyzerConfigurations": "",
        "ListPartnerAccounts": "",
        "ListPositionConfigurations": "",
        "ListQueuedMessages": [
            "Id"
        ],
        "ListServiceProfiles": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListWirelessDeviceImportTasks": "",
        "ListWirelessDevices": "",
        "ListWirelessGatewayTaskDefinitions": "",
        "ListWirelessGateways": "",
        "PutPositionConfiguration": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "PutResourceLogLevel": [
            "ResourceIdentifier",
            "ResourceType",
            "LogLevel"
        ],
        "ResetAllResourceLogLevels": "",
        "ResetResourceLogLevel": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "SendDataToMulticastGroup": [
            "Id",
            "PayloadData",
            "WirelessMetadata"
        ],
        "SendDataToWirelessDevice": [
            "Id",
            "TransmitMode",
            "PayloadData"
        ],
        "StartBulkAssociateWirelessDeviceWithMulticastGroup": [
            "Id"
        ],
        "StartBulkDisassociateWirelessDeviceFromMulticastGroup": [
            "Id"
        ],
        "StartFuotaTask": [
            "Id"
        ],
        "StartMulticastGroupSession": [
            "Id",
            "LoRaWAN"
        ],
        "StartSingleWirelessDeviceImportTask": [
            "DestinationName",
            "Sidewalk"
        ],
        "StartWirelessDeviceImportTask": [
            "DestinationName",
            "Sidewalk"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "TestWirelessDevice": [
            "Id"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDestination": [
            "Name"
        ],
        "UpdateEventConfigurationByResourceTypes": "",
        "UpdateFuotaTask": [
            "Id"
        ],
        "UpdateLogLevelsByResourceTypes": "",
        "UpdateMulticastGroup": [
            "Id"
        ],
        "UpdateNetworkAnalyzerConfiguration": [
            "ConfigurationName"
        ],
        "UpdatePartnerAccount": [
            "Sidewalk",
            "PartnerAccountId",
            "PartnerType"
        ],
        "UpdatePosition": [
            "ResourceIdentifier",
            "ResourceType",
            "Position"
        ],
        "UpdateResourceEventConfiguration": [
            "Identifier",
            "IdentifierType"
        ],
        "UpdateResourcePosition": [
            "ResourceIdentifier",
            "ResourceType"
        ],
        "UpdateWirelessDevice": [
            "Id"
        ],
        "UpdateWirelessDeviceImportTask": [
            "Id",
            "Sidewalk"
        ],
        "UpdateWirelessGateway": [
            "Id"
        ]
    },
    "ivs": {
        "BatchGetChannel": [
            "arns"
        ],
        "BatchGetStreamKey": [
            "arns"
        ],
        "BatchStartViewerSessionRevocation": [
            "viewerSessions"
        ],
        "CreateChannel": "",
        "CreatePlaybackRestrictionPolicy": "",
        "CreateRecordingConfiguration": [
            "destinationConfiguration"
        ],
        "CreateStreamKey": [
            "channelArn"
        ],
        "DeleteChannel": [
            "arn"
        ],
        "DeletePlaybackKeyPair": [
            "arn"
        ],
        "DeletePlaybackRestrictionPolicy": [
            "arn"
        ],
        "DeleteRecordingConfiguration": [
            "arn"
        ],
        "DeleteStreamKey": [
            "arn"
        ],
        "GetChannel": [
            "arn"
        ],
        "GetPlaybackKeyPair": [
            "arn"
        ],
        "GetPlaybackRestrictionPolicy": [
            "arn"
        ],
        "GetRecordingConfiguration": [
            "arn"
        ],
        "GetStream": [
            "channelArn"
        ],
        "GetStreamKey": [
            "arn"
        ],
        "GetStreamSession": [
            "channelArn"
        ],
        "ImportPlaybackKeyPair": [
            "publicKeyMaterial"
        ],
        "ListChannels": "",
        "ListPlaybackKeyPairs": "",
        "ListPlaybackRestrictionPolicies": "",
        "ListRecordingConfigurations": "",
        "ListStreamKeys": [
            "channelArn"
        ],
        "ListStreamSessions": [
            "channelArn"
        ],
        "ListStreams": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutMetadata": [
            "channelArn",
            "metadata"
        ],
        "StartViewerSessionRevocation": [
            "channelArn",
            "viewerId"
        ],
        "StopStream": [
            "channelArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateChannel": [
            "arn"
        ],
        "UpdatePlaybackRestrictionPolicy": [
            "arn"
        ]
    },
    "ivs-realtime": {
        "CreateEncoderConfiguration": "",
        "CreateParticipantToken": [
            "stageArn"
        ],
        "CreateStage": "",
        "CreateStorageConfiguration": [
            "s3"
        ],
        "DeleteEncoderConfiguration": [
            "arn"
        ],
        "DeleteStage": [
            "arn"
        ],
        "DeleteStorageConfiguration": [
            "arn"
        ],
        "DisconnectParticipant": [
            "participantId",
            "stageArn"
        ],
        "GetComposition": [
            "arn"
        ],
        "GetEncoderConfiguration": [
            "arn"
        ],
        "GetParticipant": [
            "participantId",
            "sessionId",
            "stageArn"
        ],
        "GetStage": [
            "arn"
        ],
        "GetStageSession": [
            "sessionId",
            "stageArn"
        ],
        "GetStorageConfiguration": [
            "arn"
        ],
        "ListCompositions": "",
        "ListEncoderConfigurations": "",
        "ListParticipantEvents": [
            "participantId",
            "sessionId",
            "stageArn"
        ],
        "ListParticipants": [
            "sessionId",
            "stageArn"
        ],
        "ListStageSessions": [
            "stageArn"
        ],
        "ListStages": "",
        "ListStorageConfigurations": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartComposition": [
            "destinations",
            "stageArn"
        ],
        "StopComposition": [
            "arn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateStage": [
            "arn"
        ]
    },
    "ivschat": {
        "CreateChatToken": [
            "roomIdentifier",
            "userId"
        ],
        "CreateLoggingConfiguration": [
            "destinationConfiguration"
        ],
        "CreateRoom": "",
        "DeleteLoggingConfiguration": [
            "identifier"
        ],
        "DeleteMessage": [
            "id",
            "roomIdentifier"
        ],
        "DeleteRoom": [
            "identifier"
        ],
        "DisconnectUser": [
            "roomIdentifier",
            "userId"
        ],
        "GetLoggingConfiguration": [
            "identifier"
        ],
        "GetRoom": [
            "identifier"
        ],
        "ListLoggingConfigurations": "",
        "ListRooms": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "SendEvent": [
            "eventName",
            "roomIdentifier"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateLoggingConfiguration": [
            "identifier"
        ],
        "UpdateRoom": [
            "identifier"
        ]
    },
    "kafka": {
        "BatchAssociateScramSecret": [
            "ClusterArn",
            "SecretArnList"
        ],
        "CreateCluster": [
            "BrokerNodeGroupInfo",
            "KafkaVersion",
            "NumberOfBrokerNodes",
            "ClusterName"
        ],
        "CreateClusterV2": [
            "ClusterName"
        ],
        "CreateConfiguration": [
            "ServerProperties",
            "Name"
        ],
        "CreateReplicator": [
            "ServiceExecutionRoleArn",
            "ReplicatorName",
            "ReplicationInfoList",
            "KafkaClusters"
        ],
        "CreateVpcConnection": [
            "TargetClusterArn",
            "Authentication",
            "VpcId",
            "ClientSubnets",
            "SecurityGroups"
        ],
        "DeleteCluster": [
            "ClusterArn"
        ],
        "DeleteClusterPolicy": [
            "ClusterArn"
        ],
        "DeleteConfiguration": [
            "Arn"
        ],
        "DeleteReplicator": [
            "ReplicatorArn"
        ],
        "DeleteVpcConnection": [
            "Arn"
        ],
        "DescribeCluster": [
            "ClusterArn"
        ],
        "DescribeClusterV2": [
            "ClusterArn"
        ],
        "DescribeClusterOperation": [
            "ClusterOperationArn"
        ],
        "DescribeClusterOperationV2": [
            "ClusterOperationArn"
        ],
        "DescribeConfiguration": [
            "Arn"
        ],
        "DescribeConfigurationRevision": [
            "Revision",
            "Arn"
        ],
        "DescribeReplicator": [
            "ReplicatorArn"
        ],
        "DescribeVpcConnection": [
            "Arn"
        ],
        "BatchDisassociateScramSecret": [
            "ClusterArn",
            "SecretArnList"
        ],
        "GetBootstrapBrokers": [
            "ClusterArn"
        ],
        "GetCompatibleKafkaVersions": "",
        "GetClusterPolicy": [
            "ClusterArn"
        ],
        "ListClusterOperations": [
            "ClusterArn"
        ],
        "ListClusterOperationsV2": [
            "ClusterArn"
        ],
        "ListClusters": "",
        "ListClustersV2": "",
        "ListConfigurationRevisions": [
            "Arn"
        ],
        "ListConfigurations": "",
        "ListKafkaVersions": "",
        "ListNodes": [
            "ClusterArn"
        ],
        "ListReplicators": "",
        "ListScramSecrets": [
            "ClusterArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListClientVpcConnections": [
            "ClusterArn"
        ],
        "ListVpcConnections": "",
        "RejectClientVpcConnection": [
            "VpcConnectionArn",
            "ClusterArn"
        ],
        "PutClusterPolicy": [
            "ClusterArn",
            "Policy"
        ],
        "RebootBroker": [
            "ClusterArn",
            "BrokerIds"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateBrokerCount": [
            "ClusterArn",
            "CurrentVersion",
            "TargetNumberOfBrokerNodes"
        ],
        "UpdateBrokerType": [
            "ClusterArn",
            "CurrentVersion",
            "TargetInstanceType"
        ],
        "UpdateBrokerStorage": [
            "ClusterArn",
            "TargetBrokerEBSVolumeInfo",
            "CurrentVersion"
        ],
        "UpdateConfiguration": [
            "Arn",
            "ServerProperties"
        ],
        "UpdateConnectivity": [
            "ClusterArn",
            "ConnectivityInfo",
            "CurrentVersion"
        ],
        "UpdateClusterConfiguration": [
            "ClusterArn",
            "CurrentVersion",
            "ConfigurationInfo"
        ],
        "UpdateClusterKafkaVersion": [
            "ClusterArn",
            "TargetKafkaVersion",
            "CurrentVersion"
        ],
        "UpdateMonitoring": [
            "ClusterArn",
            "CurrentVersion"
        ],
        "UpdateReplicationInfo": [
            "ReplicatorArn",
            "SourceKafkaClusterArn",
            "CurrentVersion",
            "TargetKafkaClusterArn"
        ],
        "UpdateSecurity": [
            "ClusterArn",
            "CurrentVersion"
        ],
        "UpdateStorage": [
            "ClusterArn",
            "CurrentVersion"
        ]
    },
    "kafkaconnect": {
        "CreateConnector": [
            "capacity",
            "connectorConfiguration",
            "connectorName",
            "kafkaCluster",
            "kafkaClusterClientAuthentication",
            "kafkaClusterEncryptionInTransit",
            "kafkaConnectVersion",
            "plugins",
            "serviceExecutionRoleArn"
        ],
        "CreateCustomPlugin": [
            "contentType",
            "location",
            "name"
        ],
        "CreateWorkerConfiguration": [
            "name",
            "propertiesFileContent"
        ],
        "DeleteConnector": [
            "connectorArn"
        ],
        "DeleteCustomPlugin": [
            "customPluginArn"
        ],
        "DeleteWorkerConfiguration": [
            "workerConfigurationArn"
        ],
        "DescribeConnector": [
            "connectorArn"
        ],
        "DescribeCustomPlugin": [
            "customPluginArn"
        ],
        "DescribeWorkerConfiguration": [
            "workerConfigurationArn"
        ],
        "ListConnectors": "",
        "ListCustomPlugins": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWorkerConfigurations": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateConnector": [
            "capacity",
            "connectorArn",
            "currentVersion"
        ]
    },
    "kendra": {
        "AssociateEntitiesToExperience": [
            "Id",
            "IndexId",
            "EntityList"
        ],
        "AssociatePersonasToEntities": [
            "Id",
            "IndexId",
            "Personas"
        ],
        "BatchDeleteDocument": [
            "IndexId",
            "DocumentIdList"
        ],
        "BatchDeleteFeaturedResultsSet": [
            "IndexId",
            "FeaturedResultsSetIds"
        ],
        "BatchGetDocumentStatus": [
            "IndexId",
            "DocumentInfoList"
        ],
        "BatchPutDocument": [
            "IndexId",
            "Documents"
        ],
        "ClearQuerySuggestions": [
            "IndexId"
        ],
        "CreateAccessControlConfiguration": [
            "IndexId",
            "Name"
        ],
        "CreateDataSource": [
            "Name",
            "IndexId",
            "Type"
        ],
        "CreateExperience": [
            "Name",
            "IndexId"
        ],
        "CreateFaq": [
            "IndexId",
            "Name",
            "S3Path",
            "RoleArn"
        ],
        "CreateFeaturedResultsSet": [
            "IndexId",
            "FeaturedResultsSetName"
        ],
        "CreateIndex": [
            "Name",
            "RoleArn"
        ],
        "CreateQuerySuggestionsBlockList": [
            "IndexId",
            "Name",
            "SourceS3Path",
            "RoleArn"
        ],
        "CreateThesaurus": [
            "IndexId",
            "Name",
            "RoleArn",
            "SourceS3Path"
        ],
        "DeleteAccessControlConfiguration": [
            "IndexId",
            "Id"
        ],
        "DeleteDataSource": [
            "Id",
            "IndexId"
        ],
        "DeleteExperience": [
            "Id",
            "IndexId"
        ],
        "DeleteFaq": [
            "Id",
            "IndexId"
        ],
        "DeleteIndex": [
            "Id"
        ],
        "DeletePrincipalMapping": [
            "IndexId",
            "GroupId"
        ],
        "DeleteQuerySuggestionsBlockList": [
            "IndexId",
            "Id"
        ],
        "DeleteThesaurus": [
            "Id",
            "IndexId"
        ],
        "DescribeAccessControlConfiguration": [
            "IndexId",
            "Id"
        ],
        "DescribeDataSource": [
            "Id",
            "IndexId"
        ],
        "DescribeExperience": [
            "Id",
            "IndexId"
        ],
        "DescribeFaq": [
            "Id",
            "IndexId"
        ],
        "DescribeFeaturedResultsSet": [
            "IndexId",
            "FeaturedResultsSetId"
        ],
        "DescribeIndex": [
            "Id"
        ],
        "DescribePrincipalMapping": [
            "IndexId",
            "GroupId"
        ],
        "DescribeQuerySuggestionsBlockList": [
            "IndexId",
            "Id"
        ],
        "DescribeQuerySuggestionsConfig": [
            "IndexId"
        ],
        "DescribeThesaurus": [
            "Id",
            "IndexId"
        ],
        "DisassociateEntitiesFromExperience": [
            "Id",
            "IndexId",
            "EntityList"
        ],
        "DisassociatePersonasFromEntities": [
            "Id",
            "IndexId",
            "EntityIds"
        ],
        "GetQuerySuggestions": [
            "IndexId",
            "QueryText"
        ],
        "GetSnapshots": [
            "IndexId",
            "Interval",
            "MetricType"
        ],
        "ListAccessControlConfigurations": [
            "IndexId"
        ],
        "ListDataSourceSyncJobs": [
            "Id",
            "IndexId"
        ],
        "ListDataSources": [
            "IndexId"
        ],
        "ListEntityPersonas": [
            "Id",
            "IndexId"
        ],
        "ListExperienceEntities": [
            "Id",
            "IndexId"
        ],
        "ListExperiences": [
            "IndexId"
        ],
        "ListFaqs": [
            "IndexId"
        ],
        "ListFeaturedResultsSets": [
            "IndexId"
        ],
        "ListGroupsOlderThanOrderingId": [
            "IndexId",
            "OrderingId"
        ],
        "ListIndices": "",
        "ListQuerySuggestionsBlockLists": [
            "IndexId"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListThesauri": [
            "IndexId"
        ],
        "PutPrincipalMapping": [
            "IndexId",
            "GroupId",
            "GroupMembers"
        ],
        "Query": [
            "IndexId"
        ],
        "Retrieve": [
            "IndexId",
            "QueryText"
        ],
        "StartDataSourceSyncJob": [
            "Id",
            "IndexId"
        ],
        "StopDataSourceSyncJob": [
            "Id",
            "IndexId"
        ],
        "SubmitFeedback": [
            "IndexId",
            "QueryId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAccessControlConfiguration": [
            "IndexId",
            "Id"
        ],
        "UpdateDataSource": [
            "Id",
            "IndexId"
        ],
        "UpdateExperience": [
            "Id",
            "IndexId"
        ],
        "UpdateFeaturedResultsSet": [
            "IndexId",
            "FeaturedResultsSetId"
        ],
        "UpdateIndex": [
            "Id"
        ],
        "UpdateQuerySuggestionsBlockList": [
            "IndexId",
            "Id"
        ],
        "UpdateQuerySuggestionsConfig": [
            "IndexId"
        ],
        "UpdateThesaurus": [
            "Id",
            "IndexId"
        ]
    },
    "kendra-ranking": {
        "CreateRescoreExecutionPlan": [
            "Name"
        ],
        "DeleteRescoreExecutionPlan": [
            "Id"
        ],
        "DescribeRescoreExecutionPlan": [
            "Id"
        ],
        "ListRescoreExecutionPlans": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "Rescore": [
            "RescoreExecutionPlanId",
            "SearchQuery",
            "Documents"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateRescoreExecutionPlan": [
            "Id"
        ]
    },
    "keyspaces": {
        "CreateKeyspace": [
            "keyspaceName"
        ],
        "CreateTable": [
            "keyspaceName",
            "tableName",
            "schemaDefinition"
        ],
        "DeleteKeyspace": [
            "keyspaceName"
        ],
        "DeleteTable": [
            "keyspaceName",
            "tableName"
        ],
        "GetKeyspace": [
            "keyspaceName"
        ],
        "GetTable": [
            "keyspaceName",
            "tableName"
        ],
        "GetTableAutoScalingSettings": [
            "keyspaceName",
            "tableName"
        ],
        "ListKeyspaces": "",
        "ListTables": [
            "keyspaceName"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RestoreTable": [
            "sourceKeyspaceName",
            "sourceTableName",
            "targetKeyspaceName",
            "targetTableName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tags"
        ],
        "UpdateTable": [
            "keyspaceName",
            "tableName"
        ]
    },
    "kinesis": {
        "AddTagsToStream": [
            "Tags"
        ],
        "CreateStream": [
            "StreamName"
        ],
        "DecreaseStreamRetentionPeriod": [
            "RetentionPeriodHours"
        ],
        "DeleteResourcePolicy": [
            "ResourceARN"
        ],
        "DeleteStream": "",
        "DeregisterStreamConsumer": "",
        "DescribeLimits": "",
        "DescribeStream": "",
        "DescribeStreamConsumer": "",
        "DescribeStreamSummary": "",
        "DisableEnhancedMonitoring": [
            "ShardLevelMetrics"
        ],
        "EnableEnhancedMonitoring": [
            "ShardLevelMetrics"
        ],
        "GetRecords": [
            "ShardIterator"
        ],
        "GetResourcePolicy": [
            "ResourceARN"
        ],
        "GetShardIterator": [
            "ShardId",
            "ShardIteratorType"
        ],
        "IncreaseStreamRetentionPeriod": [
            "RetentionPeriodHours"
        ],
        "ListShards": "",
        "ListStreamConsumers": [
            "StreamARN"
        ],
        "ListStreams": "",
        "ListTagsForStream": "",
        "MergeShards": [
            "ShardToMerge",
            "AdjacentShardToMerge"
        ],
        "PutRecord": [
            "Data",
            "PartitionKey"
        ],
        "PutRecords": [
            "Records"
        ],
        "PutResourcePolicy": [
            "ResourceARN",
            "Policy"
        ],
        "RegisterStreamConsumer": [
            "StreamARN",
            "ConsumerName"
        ],
        "RemoveTagsFromStream": [
            "TagKeys"
        ],
        "SplitShard": [
            "ShardToSplit",
            "NewStartingHashKey"
        ],
        "StartStreamEncryption": [
            "EncryptionType",
            "KeyId"
        ],
        "StopStreamEncryption": [
            "EncryptionType",
            "KeyId"
        ],
        "UpdateShardCount": [
            "TargetShardCount",
            "ScalingType"
        ],
        "UpdateStreamMode": [
            "StreamARN",
            "StreamModeDetails"
        ]
    },
    "kinesis-video-archived-media": {
        "GetClip": [
            "ClipFragmentSelector"
        ],
        "GetDASHStreamingSessionURL": "",
        "GetHLSStreamingSessionURL": "",
        "GetImages": [
            "ImageSelectorType",
            "StartTimestamp",
            "EndTimestamp",
            "Format"
        ],
        "GetMediaForFragmentList": [
            "Fragments"
        ],
        "ListFragments": ""
    },
    "kinesis-video-media": {
        "GetMedia": [
            "StartSelector"
        ]
    },
    "kinesis-video-signaling": {
        "GetIceServerConfig": [
            "ChannelARN"
        ],
        "SendAlexaOfferToMaster": [
            "ChannelARN",
            "SenderClientId",
            "MessagePayload"
        ]
    },
    "kinesis-video-webrtc-storage": {
        "JoinStorageSession": [
            "channelArn"
        ]
    },
    "kinesisanalytics": {
        "AddApplicationCloudWatchLoggingOption": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "CloudWatchLoggingOption"
        ],
        "AddApplicationInput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "Input"
        ],
        "AddApplicationInputProcessingConfiguration": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "InputId",
            "InputProcessingConfiguration"
        ],
        "AddApplicationOutput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "Output"
        ],
        "AddApplicationReferenceDataSource": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "ReferenceDataSource"
        ],
        "CreateApplication": [
            "ApplicationName"
        ],
        "DeleteApplication": [
            "ApplicationName",
            "CreateTimestamp"
        ],
        "DeleteApplicationCloudWatchLoggingOption": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "CloudWatchLoggingOptionId"
        ],
        "DeleteApplicationInputProcessingConfiguration": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "InputId"
        ],
        "DeleteApplicationOutput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "OutputId"
        ],
        "DeleteApplicationReferenceDataSource": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "ReferenceId"
        ],
        "DescribeApplication": [
            "ApplicationName"
        ],
        "DiscoverInputSchema": "",
        "ListApplications": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "StartApplication": [
            "ApplicationName",
            "InputConfigurations"
        ],
        "StopApplication": [
            "ApplicationName"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApplication": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "ApplicationUpdate"
        ]
    },
    "kinesisanalyticsv2": {
        "AddApplicationCloudWatchLoggingOption": [
            "ApplicationName",
            "CloudWatchLoggingOption"
        ],
        "AddApplicationInput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "Input"
        ],
        "AddApplicationInputProcessingConfiguration": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "InputId",
            "InputProcessingConfiguration"
        ],
        "AddApplicationOutput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "Output"
        ],
        "AddApplicationReferenceDataSource": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "ReferenceDataSource"
        ],
        "AddApplicationVpcConfiguration": [
            "ApplicationName",
            "VpcConfiguration"
        ],
        "CreateApplication": [
            "ApplicationName",
            "RuntimeEnvironment",
            "ServiceExecutionRole"
        ],
        "CreateApplicationPresignedUrl": [
            "ApplicationName",
            "UrlType"
        ],
        "CreateApplicationSnapshot": [
            "ApplicationName",
            "SnapshotName"
        ],
        "DeleteApplication": [
            "ApplicationName",
            "CreateTimestamp"
        ],
        "DeleteApplicationCloudWatchLoggingOption": [
            "ApplicationName",
            "CloudWatchLoggingOptionId"
        ],
        "DeleteApplicationInputProcessingConfiguration": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "InputId"
        ],
        "DeleteApplicationOutput": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "OutputId"
        ],
        "DeleteApplicationReferenceDataSource": [
            "ApplicationName",
            "CurrentApplicationVersionId",
            "ReferenceId"
        ],
        "DeleteApplicationSnapshot": [
            "ApplicationName",
            "SnapshotName",
            "SnapshotCreationTimestamp"
        ],
        "DeleteApplicationVpcConfiguration": [
            "ApplicationName",
            "VpcConfigurationId"
        ],
        "DescribeApplication": [
            "ApplicationName"
        ],
        "DescribeApplicationSnapshot": [
            "ApplicationName",
            "SnapshotName"
        ],
        "DescribeApplicationVersion": [
            "ApplicationName",
            "ApplicationVersionId"
        ],
        "DiscoverInputSchema": [
            "ServiceExecutionRole"
        ],
        "ListApplicationSnapshots": [
            "ApplicationName"
        ],
        "ListApplicationVersions": [
            "ApplicationName"
        ],
        "ListApplications": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "RollbackApplication": [
            "ApplicationName",
            "CurrentApplicationVersionId"
        ],
        "StartApplication": [
            "ApplicationName"
        ],
        "StopApplication": [
            "ApplicationName"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApplication": [
            "ApplicationName"
        ],
        "UpdateApplicationMaintenanceConfiguration": [
            "ApplicationName",
            "ApplicationMaintenanceConfigurationUpdate"
        ]
    },
    "kinesisvideo": {
        "CreateSignalingChannel": [
            "ChannelName"
        ],
        "CreateStream": [
            "StreamName"
        ],
        "DeleteEdgeConfiguration": "",
        "DeleteSignalingChannel": [
            "ChannelARN"
        ],
        "DeleteStream": [
            "StreamARN"
        ],
        "DescribeEdgeConfiguration": "",
        "DescribeImageGenerationConfiguration": "",
        "DescribeMappedResourceConfiguration": "",
        "DescribeMediaStorageConfiguration": "",
        "DescribeNotificationConfiguration": "",
        "DescribeSignalingChannel": "",
        "DescribeStream": "",
        "GetDataEndpoint": [
            "APIName"
        ],
        "GetSignalingChannelEndpoint": [
            "ChannelARN"
        ],
        "ListEdgeAgentConfigurations": [
            "HubDeviceArn"
        ],
        "ListSignalingChannels": "",
        "ListStreams": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTagsForStream": "",
        "StartEdgeConfigurationUpdate": [
            "EdgeConfig"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TagStream": [
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeyList"
        ],
        "UntagStream": [
            "TagKeyList"
        ],
        "UpdateDataRetention": [
            "CurrentVersion",
            "Operation",
            "DataRetentionChangeInHours"
        ],
        "UpdateImageGenerationConfiguration": "",
        "UpdateMediaStorageConfiguration": [
            "ChannelARN",
            "MediaStorageConfiguration"
        ],
        "UpdateNotificationConfiguration": "",
        "UpdateSignalingChannel": [
            "ChannelARN",
            "CurrentVersion"
        ],
        "UpdateStream": [
            "CurrentVersion"
        ]
    },
    "kms": {
        "CancelKeyDeletion": [
            "KeyId"
        ],
        "ConnectCustomKeyStore": [
            "CustomKeyStoreId"
        ],
        "CreateAlias": [
            "AliasName",
            "TargetKeyId"
        ],
        "CreateCustomKeyStore": [
            "CustomKeyStoreName"
        ],
        "CreateGrant": [
            "KeyId",
            "GranteePrincipal",
            "Operations"
        ],
        "CreateKey": "",
        "Decrypt": [
            "CiphertextBlob"
        ],
        "DeleteAlias": [
            "AliasName"
        ],
        "DeleteCustomKeyStore": [
            "CustomKeyStoreId"
        ],
        "DeleteImportedKeyMaterial": [
            "KeyId"
        ],
        "DescribeCustomKeyStores": "",
        "DescribeKey": [
            "KeyId"
        ],
        "DisableKey": [
            "KeyId"
        ],
        "DisableKeyRotation": [
            "KeyId"
        ],
        "DisconnectCustomKeyStore": [
            "CustomKeyStoreId"
        ],
        "EnableKey": [
            "KeyId"
        ],
        "EnableKeyRotation": [
            "KeyId"
        ],
        "Encrypt": [
            "KeyId",
            "Plaintext"
        ],
        "GenerateDataKey": [
            "KeyId"
        ],
        "GenerateDataKeyPair": [
            "KeyId",
            "KeyPairSpec"
        ],
        "GenerateDataKeyPairWithoutPlaintext": [
            "KeyId",
            "KeyPairSpec"
        ],
        "GenerateDataKeyWithoutPlaintext": [
            "KeyId"
        ],
        "GenerateMac": [
            "Message",
            "KeyId",
            "MacAlgorithm"
        ],
        "GenerateRandom": "",
        "GetKeyPolicy": [
            "KeyId"
        ],
        "GetKeyRotationStatus": [
            "KeyId"
        ],
        "GetParametersForImport": [
            "KeyId",
            "WrappingAlgorithm",
            "WrappingKeySpec"
        ],
        "GetPublicKey": [
            "KeyId"
        ],
        "ImportKeyMaterial": [
            "KeyId",
            "ImportToken",
            "EncryptedKeyMaterial"
        ],
        "ListAliases": "",
        "ListGrants": [
            "KeyId"
        ],
        "ListKeyPolicies": [
            "KeyId"
        ],
        "ListKeys": "",
        "ListResourceTags": [
            "KeyId"
        ],
        "ListRetirableGrants": [
            "RetiringPrincipal"
        ],
        "PutKeyPolicy": [
            "KeyId",
            "Policy"
        ],
        "ReEncrypt": [
            "CiphertextBlob",
            "DestinationKeyId"
        ],
        "ReplicateKey": [
            "KeyId",
            "ReplicaRegion"
        ],
        "RetireGrant": "",
        "RevokeGrant": [
            "KeyId",
            "GrantId"
        ],
        "ScheduleKeyDeletion": [
            "KeyId"
        ],
        "Sign": [
            "KeyId",
            "Message",
            "SigningAlgorithm"
        ],
        "TagResource": [
            "KeyId",
            "Tags"
        ],
        "UntagResource": [
            "KeyId",
            "TagKeys"
        ],
        "UpdateAlias": [
            "AliasName",
            "TargetKeyId"
        ],
        "UpdateCustomKeyStore": [
            "CustomKeyStoreId"
        ],
        "UpdateKeyDescription": [
            "KeyId",
            "Description"
        ],
        "UpdatePrimaryRegion": [
            "KeyId",
            "PrimaryRegion"
        ],
        "Verify": [
            "KeyId",
            "Message",
            "Signature",
            "SigningAlgorithm"
        ],
        "VerifyMac": [
            "Message",
            "KeyId",
            "MacAlgorithm",
            "Mac"
        ]
    },
    "lakeformation": {
        "AddLFTagsToResource": [
            "Resource",
            "LFTags"
        ],
        "AssumeDecoratedRoleWithSAML": [
            "SAMLAssertion",
            "RoleArn",
            "PrincipalArn"
        ],
        "BatchGrantPermissions": [
            "Entries"
        ],
        "BatchRevokePermissions": [
            "Entries"
        ],
        "CancelTransaction": [
            "TransactionId"
        ],
        "CommitTransaction": [
            "TransactionId"
        ],
        "CreateDataCellsFilter": [
            "TableData"
        ],
        "CreateLFTag": [
            "TagKey",
            "TagValues"
        ],
        "CreateLakeFormationIdentityCenterConfiguration": "",
        "CreateLakeFormationOptIn": [
            "Principal",
            "Resource"
        ],
        "DeleteDataCellsFilter": "",
        "DeleteLFTag": [
            "TagKey"
        ],
        "DeleteLakeFormationIdentityCenterConfiguration": "",
        "DeleteLakeFormationOptIn": [
            "Principal",
            "Resource"
        ],
        "DeleteObjectsOnCancel": [
            "DatabaseName",
            "TableName",
            "TransactionId",
            "Objects"
        ],
        "DeregisterResource": [
            "ResourceArn"
        ],
        "DescribeLakeFormationIdentityCenterConfiguration": "",
        "DescribeResource": [
            "ResourceArn"
        ],
        "DescribeTransaction": [
            "TransactionId"
        ],
        "ExtendTransaction": "",
        "GetDataCellsFilter": [
            "TableCatalogId",
            "DatabaseName",
            "TableName",
            "Name"
        ],
        "GetDataLakeSettings": "",
        "GetEffectivePermissionsForPath": [
            "ResourceArn"
        ],
        "GetLFTag": [
            "TagKey"
        ],
        "GetQueryState": [
            "QueryId"
        ],
        "GetQueryStatistics": [
            "QueryId"
        ],
        "GetResourceLFTags": [
            "Resource"
        ],
        "GetTableObjects": [
            "DatabaseName",
            "TableName"
        ],
        "GetTemporaryGluePartitionCredentials": [
            "TableArn",
            "Partition"
        ],
        "GetTemporaryGlueTableCredentials": [
            "TableArn"
        ],
        "GetWorkUnitResults": [
            "QueryId",
            "WorkUnitId",
            "WorkUnitToken"
        ],
        "GetWorkUnits": [
            "QueryId"
        ],
        "GrantPermissions": [
            "Principal",
            "Resource",
            "Permissions"
        ],
        "ListDataCellsFilter": "",
        "ListLFTags": "",
        "ListLakeFormationOptIns": "",
        "ListPermissions": "",
        "ListResources": "",
        "ListTableStorageOptimizers": [
            "DatabaseName",
            "TableName"
        ],
        "ListTransactions": "",
        "PutDataLakeSettings": [
            "DataLakeSettings"
        ],
        "RegisterResource": [
            "ResourceArn"
        ],
        "RemoveLFTagsFromResource": [
            "Resource",
            "LFTags"
        ],
        "RevokePermissions": [
            "Principal",
            "Resource",
            "Permissions"
        ],
        "SearchDatabasesByLFTags": [
            "Expression"
        ],
        "SearchTablesByLFTags": [
            "Expression"
        ],
        "StartQueryPlanning": [
            "QueryPlanningContext",
            "QueryString"
        ],
        "StartTransaction": "",
        "UpdateDataCellsFilter": [
            "TableData"
        ],
        "UpdateLFTag": [
            "TagKey"
        ],
        "UpdateLakeFormationIdentityCenterConfiguration": "",
        "UpdateResource": [
            "RoleArn",
            "ResourceArn"
        ],
        "UpdateTableObjects": [
            "DatabaseName",
            "TableName",
            "WriteOperations"
        ],
        "UpdateTableStorageOptimizer": [
            "DatabaseName",
            "TableName",
            "StorageOptimizerConfig"
        ]
    },
    "lambda": {
        "AddLayerVersionPermission": [
            "LayerName",
            "VersionNumber",
            "StatementId",
            "Action",
            "Principal"
        ],
        "AddPermission": [
            "FunctionName",
            "StatementId",
            "Action",
            "Principal"
        ],
        "CreateAlias": [
            "FunctionName",
            "Name",
            "FunctionVersion"
        ],
        "CreateCodeSigningConfig": [
            "AllowedPublishers"
        ],
        "CreateEventSourceMapping": [
            "FunctionName"
        ],
        "CreateFunction": [
            "FunctionName",
            "Role",
            "Code"
        ],
        "CreateFunctionUrlConfig": [
            "FunctionName",
            "AuthType"
        ],
        "DeleteAlias": [
            "FunctionName",
            "Name"
        ],
        "DeleteCodeSigningConfig": [
            "CodeSigningConfigArn"
        ],
        "DeleteEventSourceMapping": [
            "UUID"
        ],
        "DeleteFunction": [
            "FunctionName"
        ],
        "DeleteFunctionCodeSigningConfig": [
            "FunctionName"
        ],
        "DeleteFunctionConcurrency": [
            "FunctionName"
        ],
        "DeleteFunctionEventInvokeConfig": [
            "FunctionName"
        ],
        "DeleteFunctionUrlConfig": [
            "FunctionName"
        ],
        "DeleteLayerVersion": [
            "LayerName",
            "VersionNumber"
        ],
        "DeleteProvisionedConcurrencyConfig": [
            "FunctionName",
            "Qualifier"
        ],
        "GetAccountSettings": "",
        "GetAlias": [
            "FunctionName",
            "Name"
        ],
        "GetCodeSigningConfig": [
            "CodeSigningConfigArn"
        ],
        "GetEventSourceMapping": [
            "UUID"
        ],
        "GetFunction": [
            "FunctionName"
        ],
        "GetFunctionCodeSigningConfig": [
            "FunctionName"
        ],
        "GetFunctionConcurrency": [
            "FunctionName"
        ],
        "GetFunctionConfiguration": [
            "FunctionName"
        ],
        "GetFunctionEventInvokeConfig": [
            "FunctionName"
        ],
        "GetFunctionUrlConfig": [
            "FunctionName"
        ],
        "GetLayerVersion": [
            "LayerName",
            "VersionNumber"
        ],
        "GetLayerVersionByArn": [
            "Arn"
        ],
        "GetLayerVersionPolicy": [
            "LayerName",
            "VersionNumber"
        ],
        "GetPolicy": [
            "FunctionName"
        ],
        "GetProvisionedConcurrencyConfig": [
            "FunctionName",
            "Qualifier"
        ],
        "GetRuntimeManagementConfig": [
            "FunctionName"
        ],
        "Invoke": [
            "FunctionName"
        ],
        "InvokeAsync": [
            "FunctionName",
            "InvokeArgs"
        ],
        "InvokeWithResponseStream": [
            "FunctionName"
        ],
        "ListAliases": [
            "FunctionName"
        ],
        "ListCodeSigningConfigs": "",
        "ListEventSourceMappings": "",
        "ListFunctionEventInvokeConfigs": [
            "FunctionName"
        ],
        "ListFunctionUrlConfigs": [
            "FunctionName"
        ],
        "ListFunctions": "",
        "ListFunctionsByCodeSigningConfig": [
            "CodeSigningConfigArn"
        ],
        "ListLayerVersions": [
            "LayerName"
        ],
        "ListLayers": "",
        "ListProvisionedConcurrencyConfigs": [
            "FunctionName"
        ],
        "ListTags": [
            "Resource"
        ],
        "ListVersionsByFunction": [
            "FunctionName"
        ],
        "PublishLayerVersion": [
            "LayerName",
            "Content"
        ],
        "PublishVersion": [
            "FunctionName"
        ],
        "PutFunctionCodeSigningConfig": [
            "CodeSigningConfigArn",
            "FunctionName"
        ],
        "PutFunctionConcurrency": [
            "FunctionName",
            "ReservedConcurrentExecutions"
        ],
        "PutFunctionEventInvokeConfig": [
            "FunctionName"
        ],
        "PutProvisionedConcurrencyConfig": [
            "FunctionName",
            "Qualifier",
            "ProvisionedConcurrentExecutions"
        ],
        "PutRuntimeManagementConfig": [
            "FunctionName",
            "UpdateRuntimeOn"
        ],
        "RemoveLayerVersionPermission": [
            "LayerName",
            "VersionNumber",
            "StatementId"
        ],
        "RemovePermission": [
            "FunctionName",
            "StatementId"
        ],
        "TagResource": [
            "Resource",
            "Tags"
        ],
        "UntagResource": [
            "Resource",
            "TagKeys"
        ],
        "UpdateAlias": [
            "FunctionName",
            "Name"
        ],
        "UpdateCodeSigningConfig": [
            "CodeSigningConfigArn"
        ],
        "UpdateEventSourceMapping": [
            "UUID"
        ],
        "UpdateFunctionCode": [
            "FunctionName"
        ],
        "UpdateFunctionConfiguration": [
            "FunctionName"
        ],
        "UpdateFunctionEventInvokeConfig": [
            "FunctionName"
        ],
        "UpdateFunctionUrlConfig": [
            "FunctionName"
        ]
    },
    "launch-wizard": {
        "CreateDeployment": [
            "deploymentPatternName",
            "name",
            "specifications",
            "workloadName"
        ],
        "DeleteDeployment": [
            "deploymentId"
        ],
        "GetDeployment": [
            "deploymentId"
        ],
        "GetWorkload": [
            "workloadName"
        ],
        "ListDeploymentEvents": [
            "deploymentId"
        ],
        "ListDeployments": "",
        "ListWorkloadDeploymentPatterns": [
            "workloadName"
        ],
        "ListWorkloads": ""
    },
    "lex-models": {
        "CreateBotVersion": [
            "name"
        ],
        "CreateIntentVersion": [
            "name"
        ],
        "CreateSlotTypeVersion": [
            "name"
        ],
        "DeleteBot": [
            "name"
        ],
        "DeleteBotAlias": [
            "name",
            "botName"
        ],
        "DeleteBotChannelAssociation": [
            "name",
            "botName",
            "botAlias"
        ],
        "DeleteBotVersion": [
            "name",
            "version"
        ],
        "DeleteIntent": [
            "name"
        ],
        "DeleteIntentVersion": [
            "name",
            "version"
        ],
        "DeleteSlotType": [
            "name"
        ],
        "DeleteSlotTypeVersion": [
            "name",
            "version"
        ],
        "DeleteUtterances": [
            "botName",
            "userId"
        ],
        "GetBot": [
            "name",
            "versionOrAlias"
        ],
        "GetBotAlias": [
            "name",
            "botName"
        ],
        "GetBotAliases": [
            "botName"
        ],
        "GetBotChannelAssociation": [
            "name",
            "botName",
            "botAlias"
        ],
        "GetBotChannelAssociations": [
            "botName",
            "botAlias"
        ],
        "GetBotVersions": [
            "name"
        ],
        "GetBots": "",
        "GetBuiltinIntent": [
            "signature"
        ],
        "GetBuiltinIntents": "",
        "GetBuiltinSlotTypes": "",
        "GetExport": [
            "name",
            "version",
            "resourceType",
            "exportType"
        ],
        "GetImport": [
            "importId"
        ],
        "GetIntent": [
            "name",
            "version"
        ],
        "GetIntentVersions": [
            "name"
        ],
        "GetIntents": "",
        "GetMigration": [
            "migrationId"
        ],
        "GetMigrations": "",
        "GetSlotType": [
            "name",
            "version"
        ],
        "GetSlotTypeVersions": [
            "name"
        ],
        "GetSlotTypes": "",
        "GetUtterancesView": [
            "botName",
            "botVersions",
            "statusType"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutBot": [
            "name",
            "locale",
            "childDirected"
        ],
        "PutBotAlias": [
            "name",
            "botVersion",
            "botName"
        ],
        "PutIntent": [
            "name"
        ],
        "PutSlotType": [
            "name"
        ],
        "StartImport": [
            "payload",
            "resourceType",
            "mergeStrategy"
        ],
        "StartMigration": [
            "v1BotName",
            "v1BotVersion",
            "v2BotName",
            "v2BotRole",
            "migrationStrategy"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "license-manager": {
        "AcceptGrant": [
            "GrantArn"
        ],
        "CheckInLicense": [
            "LicenseConsumptionToken"
        ],
        "CheckoutBorrowLicense": [
            "LicenseArn",
            "Entitlements",
            "DigitalSignatureMethod",
            "ClientToken"
        ],
        "CheckoutLicense": [
            "ProductSKU",
            "CheckoutType",
            "KeyFingerprint",
            "Entitlements",
            "ClientToken"
        ],
        "CreateGrant": [
            "ClientToken",
            "GrantName",
            "LicenseArn",
            "Principals",
            "HomeRegion",
            "AllowedOperations"
        ],
        "CreateGrantVersion": [
            "ClientToken",
            "GrantArn"
        ],
        "CreateLicense": [
            "LicenseName",
            "ProductName",
            "ProductSKU",
            "Issuer",
            "HomeRegion",
            "Validity",
            "Entitlements",
            "Beneficiary",
            "ConsumptionConfiguration",
            "ClientToken"
        ],
        "CreateLicenseConfiguration": [
            "Name",
            "LicenseCountingType"
        ],
        "CreateLicenseConversionTaskForResource": [
            "ResourceArn",
            "SourceLicenseContext",
            "DestinationLicenseContext"
        ],
        "CreateLicenseManagerReportGenerator": [
            "ReportGeneratorName",
            "Type",
            "ReportContext",
            "ReportFrequency",
            "ClientToken"
        ],
        "CreateLicenseVersion": [
            "LicenseArn",
            "LicenseName",
            "ProductName",
            "Issuer",
            "HomeRegion",
            "Validity",
            "Entitlements",
            "ConsumptionConfiguration",
            "Status",
            "ClientToken"
        ],
        "CreateToken": [
            "LicenseArn",
            "ClientToken"
        ],
        "DeleteGrant": [
            "GrantArn",
            "Version"
        ],
        "DeleteLicense": [
            "LicenseArn",
            "SourceVersion"
        ],
        "DeleteLicenseConfiguration": [
            "LicenseConfigurationArn"
        ],
        "DeleteLicenseManagerReportGenerator": [
            "LicenseManagerReportGeneratorArn"
        ],
        "DeleteToken": [
            "TokenId"
        ],
        "ExtendLicenseConsumption": [
            "LicenseConsumptionToken"
        ],
        "GetAccessToken": [
            "Token"
        ],
        "GetGrant": [
            "GrantArn"
        ],
        "GetLicense": [
            "LicenseArn"
        ],
        "GetLicenseConfiguration": [
            "LicenseConfigurationArn"
        ],
        "GetLicenseConversionTask": [
            "LicenseConversionTaskId"
        ],
        "GetLicenseManagerReportGenerator": [
            "LicenseManagerReportGeneratorArn"
        ],
        "GetLicenseUsage": [
            "LicenseArn"
        ],
        "GetServiceSettings": "",
        "ListAssociationsForLicenseConfiguration": [
            "LicenseConfigurationArn"
        ],
        "ListDistributedGrants": "",
        "ListFailuresForLicenseConfigurationOperations": [
            "LicenseConfigurationArn"
        ],
        "ListLicenseConfigurations": "",
        "ListLicenseConversionTasks": "",
        "ListLicenseManagerReportGenerators": "",
        "ListLicenseSpecificationsForResource": [
            "ResourceArn"
        ],
        "ListLicenseVersions": [
            "LicenseArn"
        ],
        "ListLicenses": "",
        "ListReceivedGrants": "",
        "ListReceivedGrantsForOrganization": [
            "LicenseArn"
        ],
        "ListReceivedLicenses": "",
        "ListReceivedLicensesForOrganization": "",
        "ListResourceInventory": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTokens": "",
        "ListUsageForLicenseConfiguration": [
            "LicenseConfigurationArn"
        ],
        "RejectGrant": [
            "GrantArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateLicenseConfiguration": [
            "LicenseConfigurationArn"
        ],
        "UpdateLicenseManagerReportGenerator": [
            "LicenseManagerReportGeneratorArn",
            "ReportGeneratorName",
            "Type",
            "ReportContext",
            "ReportFrequency",
            "ClientToken"
        ],
        "UpdateLicenseSpecificationsForResource": [
            "ResourceArn"
        ],
        "UpdateServiceSettings": ""
    },
    "license-manager-linux-subscriptions": {
        "GetServiceSettings": "",
        "ListLinuxSubscriptionInstances": "",
        "ListLinuxSubscriptions": "",
        "UpdateServiceSettings": [
            "LinuxSubscriptionsDiscovery",
            "LinuxSubscriptionsDiscoverySettings"
        ]
    },
    "license-manager-user-subscriptions": {
        "AssociateUser": [
            "IdentityProvider",
            "InstanceId",
            "Username"
        ],
        "DeregisterIdentityProvider": [
            "IdentityProvider",
            "Product"
        ],
        "DisassociateUser": [
            "IdentityProvider",
            "InstanceId",
            "Username"
        ],
        "ListIdentityProviders": "",
        "ListInstances": "",
        "ListProductSubscriptions": [
            "IdentityProvider",
            "Product"
        ],
        "ListUserAssociations": [
            "IdentityProvider",
            "InstanceId"
        ],
        "RegisterIdentityProvider": [
            "IdentityProvider",
            "Product"
        ],
        "StartProductSubscription": [
            "IdentityProvider",
            "Product",
            "Username"
        ],
        "StopProductSubscription": [
            "IdentityProvider",
            "Product",
            "Username"
        ],
        "UpdateIdentityProviderSettings": [
            "IdentityProvider",
            "Product",
            "UpdateSettings"
        ]
    },
    "lightsail": {
        "AllocateStaticIp": [
            "staticIpName"
        ],
        "AttachCertificateToDistribution": [
            "distributionName",
            "certificateName"
        ],
        "AttachDisk": [
            "diskName",
            "instanceName",
            "diskPath"
        ],
        "AttachInstancesToLoadBalancer": [
            "loadBalancerName",
            "instanceNames"
        ],
        "AttachLoadBalancerTlsCertificate": [
            "loadBalancerName",
            "certificateName"
        ],
        "AttachStaticIp": [
            "staticIpName",
            "instanceName"
        ],
        "CloseInstancePublicPorts": [
            "portInfo",
            "instanceName"
        ],
        "CopySnapshot": [
            "targetSnapshotName",
            "sourceRegion"
        ],
        "CreateBucket": [
            "bucketName",
            "bundleId"
        ],
        "CreateBucketAccessKey": [
            "bucketName"
        ],
        "CreateCertificate": [
            "certificateName",
            "domainName"
        ],
        "CreateCloudFormationStack": [
            "instances"
        ],
        "CreateContactMethod": [
            "protocol",
            "contactEndpoint"
        ],
        "CreateContainerService": [
            "serviceName",
            "power",
            "scale"
        ],
        "CreateContainerServiceDeployment": [
            "serviceName"
        ],
        "CreateContainerServiceRegistryLogin": "",
        "CreateDisk": [
            "diskName",
            "availabilityZone",
            "sizeInGb"
        ],
        "CreateDiskFromSnapshot": [
            "diskName",
            "availabilityZone",
            "sizeInGb"
        ],
        "CreateDiskSnapshot": [
            "diskSnapshotName"
        ],
        "CreateDistribution": [
            "distributionName",
            "origin",
            "defaultCacheBehavior",
            "bundleId"
        ],
        "CreateDomain": [
            "domainName"
        ],
        "CreateDomainEntry": [
            "domainName",
            "domainEntry"
        ],
        "CreateGUISessionAccessDetails": [
            "resourceName"
        ],
        "CreateInstanceSnapshot": [
            "instanceSnapshotName",
            "instanceName"
        ],
        "CreateInstances": [
            "instanceNames",
            "availabilityZone",
            "blueprintId",
            "bundleId"
        ],
        "CreateInstancesFromSnapshot": [
            "instanceNames",
            "availabilityZone",
            "bundleId"
        ],
        "CreateKeyPair": [
            "keyPairName"
        ],
        "CreateLoadBalancer": [
            "loadBalancerName",
            "instancePort"
        ],
        "CreateLoadBalancerTlsCertificate": [
            "loadBalancerName",
            "certificateName",
            "certificateDomainName"
        ],
        "CreateRelationalDatabase": [
            "relationalDatabaseName",
            "relationalDatabaseBlueprintId",
            "relationalDatabaseBundleId",
            "masterDatabaseName",
            "masterUsername"
        ],
        "CreateRelationalDatabaseFromSnapshot": [
            "relationalDatabaseName"
        ],
        "CreateRelationalDatabaseSnapshot": [
            "relationalDatabaseName",
            "relationalDatabaseSnapshotName"
        ],
        "DeleteAlarm": [
            "alarmName"
        ],
        "DeleteAutoSnapshot": [
            "resourceName",
            "date"
        ],
        "DeleteBucket": [
            "bucketName"
        ],
        "DeleteBucketAccessKey": [
            "bucketName",
            "accessKeyId"
        ],
        "DeleteCertificate": [
            "certificateName"
        ],
        "DeleteContactMethod": [
            "protocol"
        ],
        "DeleteContainerImage": [
            "serviceName",
            "image"
        ],
        "DeleteContainerService": [
            "serviceName"
        ],
        "DeleteDisk": [
            "diskName"
        ],
        "DeleteDiskSnapshot": [
            "diskSnapshotName"
        ],
        "DeleteDistribution": "",
        "DeleteDomain": [
            "domainName"
        ],
        "DeleteDomainEntry": [
            "domainName",
            "domainEntry"
        ],
        "DeleteInstance": [
            "instanceName"
        ],
        "DeleteInstanceSnapshot": [
            "instanceSnapshotName"
        ],
        "DeleteKeyPair": [
            "keyPairName"
        ],
        "DeleteKnownHostKeys": [
            "instanceName"
        ],
        "DeleteLoadBalancer": [
            "loadBalancerName"
        ],
        "DeleteLoadBalancerTlsCertificate": [
            "loadBalancerName",
            "certificateName"
        ],
        "DeleteRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "DeleteRelationalDatabaseSnapshot": [
            "relationalDatabaseSnapshotName"
        ],
        "DetachCertificateFromDistribution": [
            "distributionName"
        ],
        "DetachDisk": [
            "diskName"
        ],
        "DetachInstancesFromLoadBalancer": [
            "loadBalancerName",
            "instanceNames"
        ],
        "DetachStaticIp": [
            "staticIpName"
        ],
        "DisableAddOn": [
            "addOnType",
            "resourceName"
        ],
        "DownloadDefaultKeyPair": "",
        "EnableAddOn": [
            "resourceName",
            "addOnRequest"
        ],
        "ExportSnapshot": [
            "sourceSnapshotName"
        ],
        "GetActiveNames": "",
        "GetAlarms": "",
        "GetAutoSnapshots": [
            "resourceName"
        ],
        "GetBlueprints": "",
        "GetBucketAccessKeys": [
            "bucketName"
        ],
        "GetBucketBundles": "",
        "GetBucketMetricData": [
            "bucketName",
            "metricName",
            "startTime",
            "endTime",
            "period",
            "statistics",
            "unit"
        ],
        "GetBuckets": "",
        "GetBundles": "",
        "GetCertificates": "",
        "GetCloudFormationStackRecords": "",
        "GetContactMethods": "",
        "GetContainerAPIMetadata": "",
        "GetContainerImages": [
            "serviceName"
        ],
        "GetContainerLog": [
            "serviceName",
            "containerName"
        ],
        "GetContainerServiceDeployments": [
            "serviceName"
        ],
        "GetContainerServiceMetricData": [
            "serviceName",
            "metricName",
            "startTime",
            "endTime",
            "period",
            "statistics"
        ],
        "GetContainerServicePowers": "",
        "GetContainerServices": "",
        "GetCostEstimate": [
            "resourceName",
            "startTime",
            "endTime"
        ],
        "GetDisk": [
            "diskName"
        ],
        "GetDiskSnapshot": [
            "diskSnapshotName"
        ],
        "GetDiskSnapshots": "",
        "GetDisks": "",
        "GetDistributionBundles": "",
        "GetDistributionLatestCacheReset": "",
        "GetDistributionMetricData": [
            "distributionName",
            "metricName",
            "startTime",
            "endTime",
            "period",
            "unit",
            "statistics"
        ],
        "GetDistributions": "",
        "GetDomain": [
            "domainName"
        ],
        "GetDomains": "",
        "GetExportSnapshotRecords": "",
        "GetInstance": [
            "instanceName"
        ],
        "GetInstanceAccessDetails": [
            "instanceName"
        ],
        "GetInstanceMetricData": [
            "instanceName",
            "metricName",
            "period",
            "startTime",
            "endTime",
            "unit",
            "statistics"
        ],
        "GetInstancePortStates": [
            "instanceName"
        ],
        "GetInstanceSnapshot": [
            "instanceSnapshotName"
        ],
        "GetInstanceSnapshots": "",
        "GetInstanceState": [
            "instanceName"
        ],
        "GetInstances": "",
        "GetKeyPair": [
            "keyPairName"
        ],
        "GetKeyPairs": "",
        "GetLoadBalancer": [
            "loadBalancerName"
        ],
        "GetLoadBalancerMetricData": [
            "loadBalancerName",
            "metricName",
            "period",
            "startTime",
            "endTime",
            "unit",
            "statistics"
        ],
        "GetLoadBalancerTlsCertificates": [
            "loadBalancerName"
        ],
        "GetLoadBalancerTlsPolicies": "",
        "GetLoadBalancers": "",
        "GetOperation": [
            "operationId"
        ],
        "GetOperations": "",
        "GetOperationsForResource": [
            "resourceName"
        ],
        "GetRegions": "",
        "GetRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "GetRelationalDatabaseBlueprints": "",
        "GetRelationalDatabaseBundles": "",
        "GetRelationalDatabaseEvents": [
            "relationalDatabaseName"
        ],
        "GetRelationalDatabaseLogEvents": [
            "relationalDatabaseName",
            "logStreamName"
        ],
        "GetRelationalDatabaseLogStreams": [
            "relationalDatabaseName"
        ],
        "GetRelationalDatabaseMasterUserPassword": [
            "relationalDatabaseName"
        ],
        "GetRelationalDatabaseMetricData": [
            "relationalDatabaseName",
            "metricName",
            "period",
            "startTime",
            "endTime",
            "unit",
            "statistics"
        ],
        "GetRelationalDatabaseParameters": [
            "relationalDatabaseName"
        ],
        "GetRelationalDatabaseSnapshot": [
            "relationalDatabaseSnapshotName"
        ],
        "GetRelationalDatabaseSnapshots": "",
        "GetRelationalDatabases": "",
        "GetSetupHistory": [
            "resourceName"
        ],
        "GetStaticIp": [
            "staticIpName"
        ],
        "GetStaticIps": "",
        "ImportKeyPair": [
            "keyPairName",
            "publicKeyBase64"
        ],
        "IsVpcPeered": "",
        "OpenInstancePublicPorts": [
            "portInfo",
            "instanceName"
        ],
        "PeerVpc": "",
        "PutAlarm": [
            "alarmName",
            "metricName",
            "monitoredResourceName",
            "comparisonOperator",
            "threshold",
            "evaluationPeriods"
        ],
        "PutInstancePublicPorts": [
            "portInfos",
            "instanceName"
        ],
        "RebootInstance": [
            "instanceName"
        ],
        "RebootRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "RegisterContainerImage": [
            "serviceName",
            "label",
            "digest"
        ],
        "ReleaseStaticIp": [
            "staticIpName"
        ],
        "ResetDistributionCache": "",
        "SendContactMethodVerification": [
            "protocol"
        ],
        "SetIpAddressType": [
            "resourceType",
            "resourceName",
            "ipAddressType"
        ],
        "SetResourceAccessForBucket": [
            "resourceName",
            "bucketName",
            "access"
        ],
        "SetupInstanceHttps": [
            "instanceName",
            "emailAddress",
            "domainNames",
            "certificateProvider"
        ],
        "StartGUISession": [
            "resourceName"
        ],
        "StartInstance": [
            "instanceName"
        ],
        "StartRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "StopGUISession": [
            "resourceName"
        ],
        "StopInstance": [
            "instanceName"
        ],
        "StopRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "TagResource": [
            "resourceName",
            "tags"
        ],
        "TestAlarm": [
            "alarmName",
            "state"
        ],
        "UnpeerVpc": "",
        "UntagResource": [
            "resourceName",
            "tagKeys"
        ],
        "UpdateBucket": [
            "bucketName"
        ],
        "UpdateBucketBundle": [
            "bucketName",
            "bundleId"
        ],
        "UpdateContainerService": [
            "serviceName"
        ],
        "UpdateDistribution": [
            "distributionName"
        ],
        "UpdateDistributionBundle": "",
        "UpdateDomainEntry": [
            "domainName",
            "domainEntry"
        ],
        "UpdateInstanceMetadataOptions": [
            "instanceName"
        ],
        "UpdateLoadBalancerAttribute": [
            "loadBalancerName",
            "attributeName",
            "attributeValue"
        ],
        "UpdateRelationalDatabase": [
            "relationalDatabaseName"
        ],
        "UpdateRelationalDatabaseParameters": [
            "relationalDatabaseName",
            "parameters"
        ]
    },
    "location": {
        "AssociateTrackerConsumer": [
            "ConsumerArn",
            "TrackerName"
        ],
        "BatchDeleteDevicePositionHistory": [
            "DeviceIds",
            "TrackerName"
        ],
        "BatchDeleteGeofence": [
            "CollectionName",
            "GeofenceIds"
        ],
        "BatchEvaluateGeofences": [
            "CollectionName",
            "DevicePositionUpdates"
        ],
        "BatchGetDevicePosition": [
            "DeviceIds",
            "TrackerName"
        ],
        "BatchPutGeofence": [
            "CollectionName",
            "Entries"
        ],
        "BatchUpdateDevicePosition": [
            "TrackerName",
            "Updates"
        ],
        "CalculateRoute": [
            "CalculatorName",
            "DeparturePosition",
            "DestinationPosition"
        ],
        "CalculateRouteMatrix": [
            "CalculatorName",
            "DeparturePositions",
            "DestinationPositions"
        ],
        "CreateGeofenceCollection": [
            "CollectionName"
        ],
        "CreateKey": [
            "KeyName",
            "Restrictions"
        ],
        "CreateMap": [
            "Configuration",
            "MapName"
        ],
        "CreatePlaceIndex": [
            "DataSource",
            "IndexName"
        ],
        "CreateRouteCalculator": [
            "CalculatorName",
            "DataSource"
        ],
        "CreateTracker": [
            "TrackerName"
        ],
        "DeleteGeofenceCollection": [
            "CollectionName"
        ],
        "DeleteKey": [
            "KeyName"
        ],
        "DeleteMap": [
            "MapName"
        ],
        "DeletePlaceIndex": [
            "IndexName"
        ],
        "DeleteRouteCalculator": [
            "CalculatorName"
        ],
        "DeleteTracker": [
            "TrackerName"
        ],
        "DescribeGeofenceCollection": [
            "CollectionName"
        ],
        "DescribeKey": [
            "KeyName"
        ],
        "DescribeMap": [
            "MapName"
        ],
        "DescribePlaceIndex": [
            "IndexName"
        ],
        "DescribeRouteCalculator": [
            "CalculatorName"
        ],
        "DescribeTracker": [
            "TrackerName"
        ],
        "DisassociateTrackerConsumer": [
            "ConsumerArn",
            "TrackerName"
        ],
        "GetDevicePosition": [
            "DeviceId",
            "TrackerName"
        ],
        "GetDevicePositionHistory": [
            "DeviceId",
            "TrackerName"
        ],
        "GetGeofence": [
            "CollectionName",
            "GeofenceId"
        ],
        "GetMapGlyphs": [
            "FontStack",
            "FontUnicodeRange",
            "MapName"
        ],
        "GetMapSprites": [
            "FileName",
            "MapName"
        ],
        "GetMapStyleDescriptor": [
            "MapName"
        ],
        "GetMapTile": [
            "MapName",
            "X",
            "Y",
            "Z"
        ],
        "GetPlace": [
            "IndexName",
            "PlaceId"
        ],
        "ListDevicePositions": [
            "TrackerName"
        ],
        "ListGeofenceCollections": "",
        "ListGeofences": [
            "CollectionName"
        ],
        "ListKeys": "",
        "ListMaps": "",
        "ListPlaceIndexes": "",
        "ListRouteCalculators": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTrackerConsumers": [
            "TrackerName"
        ],
        "ListTrackers": "",
        "PutGeofence": [
            "CollectionName",
            "GeofenceId",
            "Geometry"
        ],
        "SearchPlaceIndexForPosition": [
            "IndexName",
            "Position"
        ],
        "SearchPlaceIndexForSuggestions": [
            "IndexName",
            "Text"
        ],
        "SearchPlaceIndexForText": [
            "IndexName",
            "Text"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateGeofenceCollection": [
            "CollectionName"
        ],
        "UpdateKey": [
            "KeyName"
        ],
        "UpdateMap": [
            "MapName"
        ],
        "UpdatePlaceIndex": [
            "IndexName"
        ],
        "UpdateRouteCalculator": [
            "CalculatorName"
        ],
        "UpdateTracker": [
            "TrackerName"
        ]
    },
    "logs": {
        "AssociateKmsKey": [
            "kmsKeyId"
        ],
        "CancelExportTask": [
            "taskId"
        ],
        "CreateDelivery": [
            "deliverySourceName",
            "deliveryDestinationArn"
        ],
        "CreateExportTask": [
            "logGroupName",
            "from",
            "to",
            "destination"
        ],
        "CreateLogAnomalyDetector": [
            "logGroupArnList"
        ],
        "CreateLogGroup": [
            "logGroupName"
        ],
        "CreateLogStream": [
            "logGroupName",
            "logStreamName"
        ],
        "DeleteAccountPolicy": [
            "policyName",
            "policyType"
        ],
        "DeleteDataProtectionPolicy": [
            "logGroupIdentifier"
        ],
        "DeleteDelivery": [
            "id"
        ],
        "DeleteDeliveryDestination": [
            "name"
        ],
        "DeleteDeliveryDestinationPolicy": [
            "deliveryDestinationName"
        ],
        "DeleteDeliverySource": [
            "name"
        ],
        "DeleteDestination": [
            "destinationName"
        ],
        "DeleteLogAnomalyDetector": [
            "anomalyDetectorArn"
        ],
        "DeleteLogGroup": [
            "logGroupName"
        ],
        "DeleteLogStream": [
            "logGroupName",
            "logStreamName"
        ],
        "DeleteMetricFilter": [
            "logGroupName",
            "filterName"
        ],
        "DeleteQueryDefinition": [
            "queryDefinitionId"
        ],
        "DeleteResourcePolicy": "",
        "DeleteRetentionPolicy": [
            "logGroupName"
        ],
        "DeleteSubscriptionFilter": [
            "logGroupName",
            "filterName"
        ],
        "DescribeAccountPolicies": [
            "policyType"
        ],
        "DescribeDeliveries": "",
        "DescribeDeliveryDestinations": "",
        "DescribeDeliverySources": "",
        "DescribeDestinations": "",
        "DescribeExportTasks": "",
        "DescribeLogGroups": "",
        "DescribeLogStreams": "",
        "DescribeMetricFilters": "",
        "DescribeQueries": "",
        "DescribeQueryDefinitions": "",
        "DescribeResourcePolicies": "",
        "DescribeSubscriptionFilters": [
            "logGroupName"
        ],
        "DisassociateKmsKey": "",
        "FilterLogEvents": "",
        "GetDataProtectionPolicy": [
            "logGroupIdentifier"
        ],
        "GetDelivery": [
            "id"
        ],
        "GetDeliveryDestination": [
            "name"
        ],
        "GetDeliveryDestinationPolicy": [
            "deliveryDestinationName"
        ],
        "GetDeliverySource": [
            "name"
        ],
        "GetLogAnomalyDetector": [
            "anomalyDetectorArn"
        ],
        "GetLogEvents": [
            "logStreamName"
        ],
        "GetLogGroupFields": "",
        "GetLogRecord": [
            "logRecordPointer"
        ],
        "GetQueryResults": [
            "queryId"
        ],
        "ListAnomalies": "",
        "ListLogAnomalyDetectors": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTagsLogGroup": [
            "logGroupName"
        ],
        "PutAccountPolicy": [
            "policyName",
            "policyDocument",
            "policyType"
        ],
        "PutDataProtectionPolicy": [
            "logGroupIdentifier",
            "policyDocument"
        ],
        "PutDeliveryDestination": [
            "name",
            "deliveryDestinationConfiguration"
        ],
        "PutDeliveryDestinationPolicy": [
            "deliveryDestinationName",
            "deliveryDestinationPolicy"
        ],
        "PutDeliverySource": [
            "name",
            "resourceArn",
            "logType"
        ],
        "PutDestination": [
            "destinationName",
            "targetArn",
            "roleArn"
        ],
        "PutDestinationPolicy": [
            "destinationName",
            "accessPolicy"
        ],
        "PutLogEvents": [
            "logGroupName",
            "logStreamName",
            "logEvents"
        ],
        "PutMetricFilter": [
            "logGroupName",
            "filterName",
            "filterPattern",
            "metricTransformations"
        ],
        "PutQueryDefinition": [
            "name",
            "queryString"
        ],
        "PutResourcePolicy": "",
        "PutRetentionPolicy": [
            "logGroupName",
            "retentionInDays"
        ],
        "PutSubscriptionFilter": [
            "logGroupName",
            "filterName",
            "filterPattern",
            "destinationArn"
        ],
        "StartLiveTail": [
            "logGroupIdentifiers"
        ],
        "StartQuery": [
            "startTime",
            "endTime",
            "queryString"
        ],
        "StopQuery": [
            "queryId"
        ],
        "TagLogGroup": [
            "logGroupName",
            "tags"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestMetricFilter": [
            "filterPattern",
            "logEventMessages"
        ],
        "UntagLogGroup": [
            "logGroupName",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAnomaly": [
            "anomalyDetectorArn"
        ],
        "UpdateLogAnomalyDetector": [
            "anomalyDetectorArn",
            "enabled"
        ]
    },
    "lookoutequipment": {
        "CreateDataset": [
            "DatasetName",
            "ClientToken"
        ],
        "CreateInferenceScheduler": [
            "ModelName",
            "InferenceSchedulerName",
            "DataUploadFrequency",
            "DataInputConfiguration",
            "DataOutputConfiguration",
            "RoleArn",
            "ClientToken"
        ],
        "CreateLabel": [
            "LabelGroupName",
            "StartTime",
            "EndTime",
            "Rating",
            "ClientToken"
        ],
        "CreateLabelGroup": [
            "LabelGroupName",
            "ClientToken"
        ],
        "CreateModel": [
            "ModelName",
            "DatasetName",
            "ClientToken"
        ],
        "CreateRetrainingScheduler": [
            "ModelName",
            "RetrainingFrequency",
            "LookbackWindow",
            "ClientToken"
        ],
        "DeleteDataset": [
            "DatasetName"
        ],
        "DeleteInferenceScheduler": [
            "InferenceSchedulerName"
        ],
        "DeleteLabel": [
            "LabelGroupName",
            "LabelId"
        ],
        "DeleteLabelGroup": [
            "LabelGroupName"
        ],
        "DeleteModel": [
            "ModelName"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteRetrainingScheduler": [
            "ModelName"
        ],
        "DescribeDataIngestionJob": [
            "JobId"
        ],
        "DescribeDataset": [
            "DatasetName"
        ],
        "DescribeInferenceScheduler": [
            "InferenceSchedulerName"
        ],
        "DescribeLabel": [
            "LabelGroupName",
            "LabelId"
        ],
        "DescribeLabelGroup": [
            "LabelGroupName"
        ],
        "DescribeModel": [
            "ModelName"
        ],
        "DescribeModelVersion": [
            "ModelName",
            "ModelVersion"
        ],
        "DescribeResourcePolicy": [
            "ResourceArn"
        ],
        "DescribeRetrainingScheduler": [
            "ModelName"
        ],
        "ImportDataset": [
            "SourceDatasetArn",
            "ClientToken"
        ],
        "ImportModelVersion": [
            "SourceModelVersionArn",
            "DatasetName",
            "ClientToken"
        ],
        "ListDataIngestionJobs": "",
        "ListDatasets": "",
        "ListInferenceEvents": [
            "InferenceSchedulerName",
            "IntervalStartTime",
            "IntervalEndTime"
        ],
        "ListInferenceExecutions": [
            "InferenceSchedulerName"
        ],
        "ListInferenceSchedulers": "",
        "ListLabelGroups": "",
        "ListLabels": [
            "LabelGroupName"
        ],
        "ListModelVersions": [
            "ModelName"
        ],
        "ListModels": "",
        "ListRetrainingSchedulers": "",
        "ListSensorStatistics": [
            "DatasetName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "ResourcePolicy",
            "ClientToken"
        ],
        "StartDataIngestionJob": [
            "DatasetName",
            "IngestionInputConfiguration",
            "RoleArn",
            "ClientToken"
        ],
        "StartInferenceScheduler": [
            "InferenceSchedulerName"
        ],
        "StartRetrainingScheduler": [
            "ModelName"
        ],
        "StopInferenceScheduler": [
            "InferenceSchedulerName"
        ],
        "StopRetrainingScheduler": [
            "ModelName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateActiveModelVersion": [
            "ModelName",
            "ModelVersion"
        ],
        "UpdateInferenceScheduler": [
            "InferenceSchedulerName"
        ],
        "UpdateLabelGroup": [
            "LabelGroupName"
        ],
        "UpdateModel": [
            "ModelName"
        ],
        "UpdateRetrainingScheduler": [
            "ModelName"
        ]
    },
    "lookoutmetrics": {
        "ActivateAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "BackTestAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "CreateAlert": [
            "AlertName",
            "AnomalyDetectorArn",
            "Action"
        ],
        "CreateAnomalyDetector": [
            "AnomalyDetectorName",
            "AnomalyDetectorConfig"
        ],
        "CreateMetricSet": [
            "AnomalyDetectorArn",
            "MetricSetName",
            "MetricList",
            "MetricSource"
        ],
        "DeactivateAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "DeleteAlert": [
            "AlertArn"
        ],
        "DeleteAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "DescribeAlert": [
            "AlertArn"
        ],
        "DescribeAnomalyDetectionExecutions": [
            "AnomalyDetectorArn"
        ],
        "DescribeAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "DescribeMetricSet": [
            "MetricSetArn"
        ],
        "DetectMetricSetConfig": [
            "AnomalyDetectorArn",
            "AutoDetectionMetricSource"
        ],
        "GetAnomalyGroup": [
            "AnomalyGroupId",
            "AnomalyDetectorArn"
        ],
        "GetDataQualityMetrics": [
            "AnomalyDetectorArn"
        ],
        "GetFeedback": [
            "AnomalyDetectorArn",
            "AnomalyGroupTimeSeriesFeedback"
        ],
        "GetSampleData": "",
        "ListAlerts": "",
        "ListAnomalyDetectors": "",
        "ListAnomalyGroupRelatedMetrics": [
            "AnomalyDetectorArn",
            "AnomalyGroupId"
        ],
        "ListAnomalyGroupSummaries": [
            "AnomalyDetectorArn",
            "SensitivityThreshold"
        ],
        "ListAnomalyGroupTimeSeries": [
            "AnomalyDetectorArn",
            "AnomalyGroupId",
            "MetricName"
        ],
        "ListMetricSets": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutFeedback": [
            "AnomalyDetectorArn",
            "AnomalyGroupTimeSeriesFeedback"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAlert": [
            "AlertArn"
        ],
        "UpdateAnomalyDetector": [
            "AnomalyDetectorArn"
        ],
        "UpdateMetricSet": [
            "MetricSetArn"
        ]
    },
    "lookoutvision": {
        "CreateDataset": [
            "ProjectName",
            "DatasetType"
        ],
        "CreateModel": [
            "ProjectName",
            "OutputConfig"
        ],
        "CreateProject": [
            "ProjectName"
        ],
        "DeleteDataset": [
            "ProjectName",
            "DatasetType"
        ],
        "DeleteModel": [
            "ProjectName",
            "ModelVersion"
        ],
        "DeleteProject": [
            "ProjectName"
        ],
        "DescribeDataset": [
            "ProjectName",
            "DatasetType"
        ],
        "DescribeModel": [
            "ProjectName",
            "ModelVersion"
        ],
        "DescribeModelPackagingJob": [
            "ProjectName",
            "JobName"
        ],
        "DescribeProject": [
            "ProjectName"
        ],
        "DetectAnomalies": [
            "ProjectName",
            "ModelVersion",
            "Body",
            "ContentType"
        ],
        "ListDatasetEntries": [
            "ProjectName",
            "DatasetType"
        ],
        "ListModelPackagingJobs": [
            "ProjectName"
        ],
        "ListModels": [
            "ProjectName"
        ],
        "ListProjects": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartModel": [
            "ProjectName",
            "ModelVersion",
            "MinInferenceUnits"
        ],
        "StartModelPackagingJob": [
            "ProjectName",
            "ModelVersion",
            "Configuration"
        ],
        "StopModel": [
            "ProjectName",
            "ModelVersion"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDatasetEntries": [
            "ProjectName",
            "DatasetType",
            "Changes"
        ]
    },
    "m2": {
        "CancelBatchJobExecution": [
            "applicationId",
            "executionId"
        ],
        "CreateApplication": [
            "definition",
            "engineType",
            "name"
        ],
        "CreateDataSetImportTask": [
            "applicationId",
            "importConfig"
        ],
        "CreateDeployment": [
            "applicationId",
            "applicationVersion",
            "environmentId"
        ],
        "CreateEnvironment": [
            "engineType",
            "instanceType",
            "name"
        ],
        "DeleteApplication": [
            "applicationId"
        ],
        "DeleteApplicationFromEnvironment": [
            "applicationId",
            "environmentId"
        ],
        "DeleteEnvironment": [
            "environmentId"
        ],
        "GetApplication": [
            "applicationId"
        ],
        "GetApplicationVersion": [
            "applicationId",
            "applicationVersion"
        ],
        "GetBatchJobExecution": [
            "applicationId",
            "executionId"
        ],
        "GetDataSetDetails": [
            "applicationId",
            "dataSetName"
        ],
        "GetDataSetImportTask": [
            "applicationId",
            "taskId"
        ],
        "GetDeployment": [
            "applicationId",
            "deploymentId"
        ],
        "GetEnvironment": [
            "environmentId"
        ],
        "GetSignedBluinsightsUrl": "",
        "ListApplicationVersions": [
            "applicationId"
        ],
        "ListApplications": "",
        "ListBatchJobDefinitions": [
            "applicationId"
        ],
        "ListBatchJobExecutions": [
            "applicationId"
        ],
        "ListDataSetImportHistory": [
            "applicationId"
        ],
        "ListDataSets": [
            "applicationId"
        ],
        "ListDeployments": [
            "applicationId"
        ],
        "ListEngineVersions": "",
        "ListEnvironments": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartApplication": [
            "applicationId"
        ],
        "StartBatchJob": [
            "applicationId",
            "batchJobIdentifier"
        ],
        "StopApplication": [
            "applicationId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "applicationId",
            "currentApplicationVersion"
        ],
        "UpdateEnvironment": [
            "environmentId"
        ]
    },
    "machinelearning": {
        "AddTags": [
            "Tags",
            "ResourceId",
            "ResourceType"
        ],
        "CreateBatchPrediction": [
            "BatchPredictionId",
            "MLModelId",
            "BatchPredictionDataSourceId",
            "OutputUri"
        ],
        "CreateDataSourceFromRDS": [
            "DataSourceId",
            "RDSData",
            "RoleARN"
        ],
        "CreateDataSourceFromRedshift": [
            "DataSourceId",
            "DataSpec",
            "RoleARN"
        ],
        "CreateDataSourceFromS3": [
            "DataSourceId",
            "DataSpec"
        ],
        "CreateEvaluation": [
            "EvaluationId",
            "MLModelId",
            "EvaluationDataSourceId"
        ],
        "CreateMLModel": [
            "MLModelId",
            "MLModelType",
            "TrainingDataSourceId"
        ],
        "CreateRealtimeEndpoint": [
            "MLModelId"
        ],
        "DeleteBatchPrediction": [
            "BatchPredictionId"
        ],
        "DeleteDataSource": [
            "DataSourceId"
        ],
        "DeleteEvaluation": [
            "EvaluationId"
        ],
        "DeleteMLModel": [
            "MLModelId"
        ],
        "DeleteRealtimeEndpoint": [
            "MLModelId"
        ],
        "DeleteTags": [
            "TagKeys",
            "ResourceId",
            "ResourceType"
        ],
        "DescribeBatchPredictions": "",
        "DescribeDataSources": "",
        "DescribeEvaluations": "",
        "DescribeMLModels": "",
        "DescribeTags": [
            "ResourceId",
            "ResourceType"
        ],
        "GetBatchPrediction": [
            "BatchPredictionId"
        ],
        "GetDataSource": [
            "DataSourceId"
        ],
        "GetEvaluation": [
            "EvaluationId"
        ],
        "GetMLModel": [
            "MLModelId"
        ],
        "Predict": [
            "MLModelId",
            "Record",
            "PredictEndpoint"
        ],
        "UpdateBatchPrediction": [
            "BatchPredictionId",
            "BatchPredictionName"
        ],
        "UpdateDataSource": [
            "DataSourceId",
            "DataSourceName"
        ],
        "UpdateEvaluation": [
            "EvaluationId",
            "EvaluationName"
        ],
        "UpdateMLModel": [
            "MLModelId"
        ]
    },
    "macie2": {
        "AcceptInvitation": [
            "invitationId"
        ],
        "BatchGetCustomDataIdentifiers": "",
        "CreateAllowList": [
            "criteria",
            "clientToken",
            "name"
        ],
        "CreateClassificationJob": [
            "s3JobDefinition",
            "jobType",
            "clientToken",
            "name"
        ],
        "CreateCustomDataIdentifier": [
            "regex",
            "name"
        ],
        "CreateFindingsFilter": [
            "action",
            "findingCriteria",
            "name"
        ],
        "CreateInvitations": [
            "accountIds"
        ],
        "CreateMember": [
            "account"
        ],
        "CreateSampleFindings": "",
        "DeclineInvitations": [
            "accountIds"
        ],
        "DeleteAllowList": [
            "id"
        ],
        "DeleteCustomDataIdentifier": [
            "id"
        ],
        "DeleteFindingsFilter": [
            "id"
        ],
        "DeleteInvitations": [
            "accountIds"
        ],
        "DeleteMember": [
            "id"
        ],
        "DescribeBuckets": "",
        "DescribeClassificationJob": [
            "jobId"
        ],
        "DescribeOrganizationConfiguration": "",
        "DisableMacie": "",
        "DisableOrganizationAdminAccount": [
            "adminAccountId"
        ],
        "DisassociateFromAdministratorAccount": "",
        "DisassociateFromMasterAccount": "",
        "DisassociateMember": [
            "id"
        ],
        "EnableMacie": "",
        "EnableOrganizationAdminAccount": [
            "adminAccountId"
        ],
        "GetAdministratorAccount": "",
        "GetAllowList": [
            "id"
        ],
        "GetAutomatedDiscoveryConfiguration": "",
        "GetBucketStatistics": "",
        "GetClassificationExportConfiguration": "",
        "GetClassificationScope": [
            "id"
        ],
        "GetCustomDataIdentifier": [
            "id"
        ],
        "GetFindingStatistics": [
            "groupBy"
        ],
        "GetFindings": [
            "findingIds"
        ],
        "GetFindingsFilter": [
            "id"
        ],
        "GetFindingsPublicationConfiguration": "",
        "GetInvitationsCount": "",
        "GetMacieSession": "",
        "GetMasterAccount": "",
        "GetMember": [
            "id"
        ],
        "GetResourceProfile": [
            "resourceArn"
        ],
        "GetRevealConfiguration": "",
        "GetSensitiveDataOccurrences": [
            "findingId"
        ],
        "GetSensitiveDataOccurrencesAvailability": [
            "findingId"
        ],
        "GetSensitivityInspectionTemplate": [
            "id"
        ],
        "GetUsageStatistics": "",
        "GetUsageTotals": "",
        "ListAllowLists": "",
        "ListClassificationJobs": "",
        "ListClassificationScopes": "",
        "ListCustomDataIdentifiers": "",
        "ListFindings": "",
        "ListFindingsFilters": "",
        "ListInvitations": "",
        "ListManagedDataIdentifiers": "",
        "ListMembers": "",
        "ListOrganizationAdminAccounts": "",
        "ListResourceProfileArtifacts": [
            "resourceArn"
        ],
        "ListResourceProfileDetections": [
            "resourceArn"
        ],
        "ListSensitivityInspectionTemplates": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutClassificationExportConfiguration": [
            "configuration"
        ],
        "PutFindingsPublicationConfiguration": "",
        "SearchResources": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestCustomDataIdentifier": [
            "regex",
            "sampleText"
        ],
        "UntagResource": [
            "tagKeys",
            "resourceArn"
        ],
        "UpdateAllowList": [
            "id",
            "criteria",
            "name"
        ],
        "UpdateAutomatedDiscoveryConfiguration": [
            "status"
        ],
        "UpdateClassificationJob": [
            "jobId",
            "jobStatus"
        ],
        "UpdateClassificationScope": [
            "id"
        ],
        "UpdateFindingsFilter": [
            "id"
        ],
        "UpdateMacieSession": "",
        "UpdateMemberSession": [
            "id",
            "status"
        ],
        "UpdateOrganizationConfiguration": [
            "autoEnable"
        ],
        "UpdateResourceProfile": [
            "resourceArn"
        ],
        "UpdateResourceProfileDetections": [
            "resourceArn"
        ],
        "UpdateRevealConfiguration": [
            "configuration"
        ],
        "UpdateSensitivityInspectionTemplate": [
            "id"
        ]
    },
    "managedblockchain": {
        "CreateAccessor": [
            "ClientRequestToken",
            "AccessorType"
        ],
        "CreateMember": [
            "ClientRequestToken",
            "InvitationId",
            "NetworkId",
            "MemberConfiguration"
        ],
        "CreateNetwork": [
            "ClientRequestToken",
            "Name",
            "Framework",
            "FrameworkVersion",
            "VotingPolicy",
            "MemberConfiguration"
        ],
        "CreateNode": [
            "ClientRequestToken",
            "NetworkId",
            "NodeConfiguration"
        ],
        "CreateProposal": [
            "ClientRequestToken",
            "NetworkId",
            "MemberId",
            "Actions"
        ],
        "DeleteAccessor": [
            "AccessorId"
        ],
        "DeleteMember": [
            "NetworkId",
            "MemberId"
        ],
        "DeleteNode": [
            "NetworkId",
            "NodeId"
        ],
        "GetAccessor": [
            "AccessorId"
        ],
        "GetMember": [
            "NetworkId",
            "MemberId"
        ],
        "GetNetwork": [
            "NetworkId"
        ],
        "GetNode": [
            "NetworkId",
            "NodeId"
        ],
        "GetProposal": [
            "NetworkId",
            "ProposalId"
        ],
        "ListAccessors": "",
        "ListInvitations": "",
        "ListMembers": [
            "NetworkId"
        ],
        "ListNetworks": "",
        "ListNodes": [
            "NetworkId"
        ],
        "ListProposalVotes": [
            "NetworkId",
            "ProposalId"
        ],
        "ListProposals": [
            "NetworkId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RejectInvitation": [
            "InvitationId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateMember": [
            "NetworkId",
            "MemberId"
        ],
        "UpdateNode": [
            "NetworkId",
            "NodeId"
        ],
        "VoteOnProposal": [
            "NetworkId",
            "ProposalId",
            "VoterMemberId",
            "Vote"
        ]
    },
    "managedblockchain-query": {
        "BatchGetTokenBalance": "",
        "GetAssetContract": [
            "contractIdentifier"
        ],
        "GetTokenBalance": [
            "tokenIdentifier",
            "ownerIdentifier"
        ],
        "GetTransaction": [
            "network"
        ],
        "ListAssetContracts": [
            "contractFilter"
        ],
        "ListFilteredTransactionEvents": [
            "network",
            "addressIdentifierFilter"
        ],
        "ListTokenBalances": [
            "tokenFilter"
        ],
        "ListTransactionEvents": [
            "network"
        ],
        "ListTransactions": [
            "address",
            "network"
        ]
    },
    "marketplace-agreement": {
        "DescribeAgreement": [
            "agreementId"
        ],
        "GetAgreementTerms": [
            "agreementId"
        ],
        "SearchAgreements": ""
    },
    "marketplace-catalog": {
        "BatchDescribeEntities": [
            "EntityRequestList"
        ],
        "CancelChangeSet": [
            "Catalog",
            "ChangeSetId"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DescribeChangeSet": [
            "Catalog",
            "ChangeSetId"
        ],
        "DescribeEntity": [
            "Catalog",
            "EntityId"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "ListChangeSets": [
            "Catalog"
        ],
        "ListEntities": [
            "Catalog",
            "EntityType"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "Policy"
        ],
        "StartChangeSet": [
            "Catalog",
            "ChangeSet"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ]
    },
    "marketplace-deployment": {
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutDeploymentParameter": [
            "agreementId",
            "catalog",
            "deploymentParameter",
            "productId"
        ],
        "TagResource": [
            "resourceArn"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "marketplacecommerceanalytics": {
        "GenerateDataSet": [
            "dataSetType",
            "dataSetPublicationDate",
            "roleNameArn",
            "destinationS3BucketName",
            "snsTopicArn"
        ],
        "StartSupportDataExport": [
            "dataSetType",
            "fromDate",
            "roleNameArn",
            "destinationS3BucketName",
            "snsTopicArn"
        ]
    },
    "mediaconnect": {
        "AddBridgeOutputs": [
            "BridgeArn",
            "Outputs"
        ],
        "AddBridgeSources": [
            "BridgeArn",
            "Sources"
        ],
        "AddFlowMediaStreams": [
            "FlowArn",
            "MediaStreams"
        ],
        "AddFlowOutputs": [
            "FlowArn",
            "Outputs"
        ],
        "AddFlowSources": [
            "FlowArn",
            "Sources"
        ],
        "AddFlowVpcInterfaces": [
            "FlowArn",
            "VpcInterfaces"
        ],
        "CreateBridge": [
            "Sources",
            "PlacementArn",
            "Name"
        ],
        "CreateFlow": [
            "Name"
        ],
        "CreateGateway": [
            "Networks",
            "EgressCidrBlocks",
            "Name"
        ],
        "DeleteBridge": [
            "BridgeArn"
        ],
        "DeleteFlow": [
            "FlowArn"
        ],
        "DeleteGateway": [
            "GatewayArn"
        ],
        "DeregisterGatewayInstance": [
            "GatewayInstanceArn"
        ],
        "DescribeBridge": [
            "BridgeArn"
        ],
        "DescribeFlow": [
            "FlowArn"
        ],
        "DescribeFlowSourceMetadata": [
            "FlowArn"
        ],
        "DescribeGateway": [
            "GatewayArn"
        ],
        "DescribeGatewayInstance": [
            "GatewayInstanceArn"
        ],
        "DescribeOffering": [
            "OfferingArn"
        ],
        "DescribeReservation": [
            "ReservationArn"
        ],
        "GrantFlowEntitlements": [
            "FlowArn",
            "Entitlements"
        ],
        "ListBridges": "",
        "ListEntitlements": "",
        "ListFlows": "",
        "ListGatewayInstances": "",
        "ListGateways": "",
        "ListOfferings": "",
        "ListReservations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PurchaseOffering": [
            "OfferingArn",
            "Start",
            "ReservationName"
        ],
        "RemoveBridgeOutput": [
            "OutputName",
            "BridgeArn"
        ],
        "RemoveBridgeSource": [
            "BridgeArn",
            "SourceName"
        ],
        "RemoveFlowMediaStream": [
            "FlowArn",
            "MediaStreamName"
        ],
        "RemoveFlowOutput": [
            "FlowArn",
            "OutputArn"
        ],
        "RemoveFlowSource": [
            "FlowArn",
            "SourceArn"
        ],
        "RemoveFlowVpcInterface": [
            "FlowArn",
            "VpcInterfaceName"
        ],
        "RevokeFlowEntitlement": [
            "FlowArn",
            "EntitlementArn"
        ],
        "StartFlow": [
            "FlowArn"
        ],
        "StopFlow": [
            "FlowArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateBridge": [
            "BridgeArn"
        ],
        "UpdateBridgeOutput": [
            "OutputName",
            "BridgeArn"
        ],
        "UpdateBridgeSource": [
            "BridgeArn",
            "SourceName"
        ],
        "UpdateBridgeState": [
            "BridgeArn",
            "DesiredState"
        ],
        "UpdateFlow": [
            "FlowArn"
        ],
        "UpdateFlowEntitlement": [
            "FlowArn",
            "EntitlementArn"
        ],
        "UpdateFlowMediaStream": [
            "FlowArn",
            "MediaStreamName"
        ],
        "UpdateFlowOutput": [
            "FlowArn",
            "OutputArn"
        ],
        "UpdateFlowSource": [
            "FlowArn",
            "SourceArn"
        ],
        "UpdateGatewayInstance": [
            "GatewayInstanceArn"
        ]
    },
    "mediaconvert": {
        "AssociateCertificate": [
            "Arn"
        ],
        "CancelJob": [
            "Id"
        ],
        "CreateJob": [
            "Role",
            "Settings"
        ],
        "CreateJobTemplate": [
            "Settings",
            "Name"
        ],
        "CreatePreset": [
            "Settings",
            "Name"
        ],
        "CreateQueue": [
            "Name"
        ],
        "DeleteJobTemplate": [
            "Name"
        ],
        "DeletePolicy": "",
        "DeletePreset": [
            "Name"
        ],
        "DeleteQueue": [
            "Name"
        ],
        "DescribeEndpoints": "",
        "DisassociateCertificate": [
            "Arn"
        ],
        "GetJob": [
            "Id"
        ],
        "GetJobTemplate": [
            "Name"
        ],
        "GetPolicy": "",
        "GetPreset": [
            "Name"
        ],
        "GetQueue": [
            "Name"
        ],
        "ListJobTemplates": "",
        "ListJobs": "",
        "ListPresets": "",
        "ListQueues": "",
        "ListTagsForResource": [
            "Arn"
        ],
        "PutPolicy": [
            "Policy"
        ],
        "TagResource": [
            "Arn",
            "Tags"
        ],
        "UntagResource": [
            "Arn"
        ],
        "UpdateJobTemplate": [
            "Name"
        ],
        "UpdatePreset": [
            "Name"
        ],
        "UpdateQueue": [
            "Name"
        ]
    },
    "medialive": {
        "AcceptInputDeviceTransfer": [
            "InputDeviceId"
        ],
        "BatchDelete": "",
        "BatchStart": "",
        "BatchStop": "",
        "BatchUpdateSchedule": [
            "ChannelId"
        ],
        "CancelInputDeviceTransfer": [
            "InputDeviceId"
        ],
        "ClaimDevice": "",
        "CreateChannel": "",
        "CreateInput": "",
        "CreateInputSecurityGroup": "",
        "CreateMultiplex": [
            "RequestId",
            "MultiplexSettings",
            "AvailabilityZones",
            "Name"
        ],
        "CreateMultiplexProgram": [
            "MultiplexId",
            "RequestId",
            "MultiplexProgramSettings",
            "ProgramName"
        ],
        "CreatePartnerInput": [
            "InputId"
        ],
        "CreateTags": [
            "ResourceArn"
        ],
        "DeleteChannel": [
            "ChannelId"
        ],
        "DeleteInput": [
            "InputId"
        ],
        "DeleteInputSecurityGroup": [
            "InputSecurityGroupId"
        ],
        "DeleteMultiplex": [
            "MultiplexId"
        ],
        "DeleteMultiplexProgram": [
            "MultiplexId",
            "ProgramName"
        ],
        "DeleteReservation": [
            "ReservationId"
        ],
        "DeleteSchedule": [
            "ChannelId"
        ],
        "DeleteTags": [
            "TagKeys",
            "ResourceArn"
        ],
        "DescribeAccountConfiguration": "",
        "DescribeChannel": [
            "ChannelId"
        ],
        "DescribeInput": [
            "InputId"
        ],
        "DescribeInputDevice": [
            "InputDeviceId"
        ],
        "DescribeInputDeviceThumbnail": [
            "InputDeviceId",
            "Accept"
        ],
        "DescribeInputSecurityGroup": [
            "InputSecurityGroupId"
        ],
        "DescribeMultiplex": [
            "MultiplexId"
        ],
        "DescribeMultiplexProgram": [
            "MultiplexId",
            "ProgramName"
        ],
        "DescribeOffering": [
            "OfferingId"
        ],
        "DescribeReservation": [
            "ReservationId"
        ],
        "DescribeSchedule": [
            "ChannelId"
        ],
        "DescribeThumbnails": [
            "ThumbnailType",
            "PipelineId",
            "ChannelId"
        ],
        "ListChannels": "",
        "ListInputDeviceTransfers": [
            "TransferType"
        ],
        "ListInputDevices": "",
        "ListInputSecurityGroups": "",
        "ListInputs": "",
        "ListMultiplexPrograms": [
            "MultiplexId"
        ],
        "ListMultiplexes": "",
        "ListOfferings": "",
        "ListReservations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PurchaseOffering": [
            "OfferingId",
            "Count"
        ],
        "RebootInputDevice": [
            "InputDeviceId"
        ],
        "RejectInputDeviceTransfer": [
            "InputDeviceId"
        ],
        "StartChannel": [
            "ChannelId"
        ],
        "StartInputDevice": [
            "InputDeviceId"
        ],
        "StartInputDeviceMaintenanceWindow": [
            "InputDeviceId"
        ],
        "StartMultiplex": [
            "MultiplexId"
        ],
        "StopChannel": [
            "ChannelId"
        ],
        "StopInputDevice": [
            "InputDeviceId"
        ],
        "StopMultiplex": [
            "MultiplexId"
        ],
        "TransferInputDevice": [
            "InputDeviceId"
        ],
        "UpdateAccountConfiguration": "",
        "UpdateChannel": [
            "ChannelId"
        ],
        "UpdateChannelClass": [
            "ChannelId",
            "ChannelClass"
        ],
        "UpdateInput": [
            "InputId"
        ],
        "UpdateInputDevice": [
            "InputDeviceId"
        ],
        "UpdateInputSecurityGroup": [
            "InputSecurityGroupId"
        ],
        "UpdateMultiplex": [
            "MultiplexId"
        ],
        "UpdateMultiplexProgram": [
            "MultiplexId",
            "ProgramName"
        ],
        "UpdateReservation": [
            "ReservationId"
        ],
        "RestartChannelPipelines": [
            "ChannelId"
        ]
    },
    "mediapackage": {
        "ConfigureLogs": [
            "Id"
        ],
        "CreateChannel": [
            "Id"
        ],
        "CreateHarvestJob": [
            "S3Destination",
            "EndTime",
            "OriginEndpointId",
            "StartTime",
            "Id"
        ],
        "CreateOriginEndpoint": [
            "ChannelId",
            "Id"
        ],
        "DeleteChannel": [
            "Id"
        ],
        "DeleteOriginEndpoint": [
            "Id"
        ],
        "DescribeChannel": [
            "Id"
        ],
        "DescribeHarvestJob": [
            "Id"
        ],
        "DescribeOriginEndpoint": [
            "Id"
        ],
        "ListChannels": "",
        "ListHarvestJobs": "",
        "ListOriginEndpoints": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RotateChannelCredentials": [
            "Id"
        ],
        "RotateIngestEndpointCredentials": [
            "IngestEndpointId",
            "Id"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateChannel": [
            "Id"
        ],
        "UpdateOriginEndpoint": [
            "Id"
        ]
    },
    "mediapackage-vod": {
        "ConfigureLogs": [
            "Id"
        ],
        "CreateAsset": [
            "SourceArn",
            "Id",
            "PackagingGroupId",
            "SourceRoleArn"
        ],
        "CreatePackagingConfiguration": [
            "Id",
            "PackagingGroupId"
        ],
        "CreatePackagingGroup": [
            "Id"
        ],
        "DeleteAsset": [
            "Id"
        ],
        "DeletePackagingConfiguration": [
            "Id"
        ],
        "DeletePackagingGroup": [
            "Id"
        ],
        "DescribeAsset": [
            "Id"
        ],
        "DescribePackagingConfiguration": [
            "Id"
        ],
        "DescribePackagingGroup": [
            "Id"
        ],
        "ListAssets": "",
        "ListPackagingConfigurations": "",
        "ListPackagingGroups": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdatePackagingGroup": [
            "Id"
        ]
    },
    "mediapackagev2": {
        "CreateChannel": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "CreateChannelGroup": [
            "ChannelGroupName"
        ],
        "CreateOriginEndpoint": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName",
            "ContainerType"
        ],
        "DeleteChannel": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "DeleteChannelGroup": [
            "ChannelGroupName"
        ],
        "DeleteChannelPolicy": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "DeleteOriginEndpoint": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName"
        ],
        "DeleteOriginEndpointPolicy": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName"
        ],
        "GetChannel": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "GetChannelGroup": [
            "ChannelGroupName"
        ],
        "GetChannelPolicy": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "GetOriginEndpoint": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName"
        ],
        "GetOriginEndpointPolicy": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName"
        ],
        "ListChannelGroups": "",
        "ListChannels": [
            "ChannelGroupName"
        ],
        "ListOriginEndpoints": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutChannelPolicy": [
            "ChannelGroupName",
            "ChannelName",
            "Policy"
        ],
        "PutOriginEndpointPolicy": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName",
            "Policy"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateChannel": [
            "ChannelGroupName",
            "ChannelName"
        ],
        "UpdateChannelGroup": [
            "ChannelGroupName"
        ],
        "UpdateOriginEndpoint": [
            "ChannelGroupName",
            "ChannelName",
            "OriginEndpointName",
            "ContainerType"
        ]
    },
    "mediastore": {
        "CreateContainer": [
            "ContainerName"
        ],
        "DeleteContainer": [
            "ContainerName"
        ],
        "DeleteContainerPolicy": [
            "ContainerName"
        ],
        "DeleteCorsPolicy": [
            "ContainerName"
        ],
        "DeleteLifecyclePolicy": [
            "ContainerName"
        ],
        "DeleteMetricPolicy": [
            "ContainerName"
        ],
        "DescribeContainer": "",
        "GetContainerPolicy": [
            "ContainerName"
        ],
        "GetCorsPolicy": [
            "ContainerName"
        ],
        "GetLifecyclePolicy": [
            "ContainerName"
        ],
        "GetMetricPolicy": [
            "ContainerName"
        ],
        "ListContainers": "",
        "ListTagsForResource": [
            "Resource"
        ],
        "PutContainerPolicy": [
            "ContainerName",
            "Policy"
        ],
        "PutCorsPolicy": [
            "ContainerName",
            "CorsPolicy"
        ],
        "PutLifecyclePolicy": [
            "ContainerName",
            "LifecyclePolicy"
        ],
        "PutMetricPolicy": [
            "ContainerName",
            "MetricPolicy"
        ],
        "StartAccessLogging": [
            "ContainerName"
        ],
        "StopAccessLogging": [
            "ContainerName"
        ],
        "TagResource": [
            "Resource",
            "Tags"
        ],
        "UntagResource": [
            "Resource",
            "TagKeys"
        ]
    },
    "mediastore-data": {
        "DeleteObject": [
            "Path"
        ],
        "DescribeObject": [
            "Path"
        ],
        "GetObject": [
            "Path"
        ],
        "ListItems": "",
        "PutObject": [
            "Body",
            "Path"
        ]
    },
    "mediatailor": {
        "ConfigureLogsForChannel": [
            "ChannelName",
            "LogTypes"
        ],
        "ConfigureLogsForPlaybackConfiguration": [
            "PercentEnabled",
            "PlaybackConfigurationName"
        ],
        "CreateChannel": [
            "ChannelName",
            "Outputs",
            "PlaybackMode"
        ],
        "CreateLiveSource": [
            "HttpPackageConfigurations",
            "LiveSourceName",
            "SourceLocationName"
        ],
        "CreatePrefetchSchedule": [
            "Consumption",
            "Name",
            "PlaybackConfigurationName",
            "Retrieval"
        ],
        "CreateProgram": [
            "ChannelName",
            "ProgramName",
            "ScheduleConfiguration",
            "SourceLocationName"
        ],
        "CreateSourceLocation": [
            "HttpConfiguration",
            "SourceLocationName"
        ],
        "CreateVodSource": [
            "HttpPackageConfigurations",
            "SourceLocationName",
            "VodSourceName"
        ],
        "DeleteChannel": [
            "ChannelName"
        ],
        "DeleteChannelPolicy": [
            "ChannelName"
        ],
        "DeleteLiveSource": [
            "LiveSourceName",
            "SourceLocationName"
        ],
        "DeletePlaybackConfiguration": [
            "Name"
        ],
        "DeletePrefetchSchedule": [
            "Name",
            "PlaybackConfigurationName"
        ],
        "DeleteProgram": [
            "ChannelName",
            "ProgramName"
        ],
        "DeleteSourceLocation": [
            "SourceLocationName"
        ],
        "DeleteVodSource": [
            "SourceLocationName",
            "VodSourceName"
        ],
        "DescribeChannel": [
            "ChannelName"
        ],
        "DescribeLiveSource": [
            "LiveSourceName",
            "SourceLocationName"
        ],
        "DescribeProgram": [
            "ChannelName",
            "ProgramName"
        ],
        "DescribeSourceLocation": [
            "SourceLocationName"
        ],
        "DescribeVodSource": [
            "SourceLocationName",
            "VodSourceName"
        ],
        "GetChannelPolicy": [
            "ChannelName"
        ],
        "GetChannelSchedule": [
            "ChannelName"
        ],
        "GetPlaybackConfiguration": [
            "Name"
        ],
        "GetPrefetchSchedule": [
            "Name",
            "PlaybackConfigurationName"
        ],
        "ListAlerts": [
            "ResourceArn"
        ],
        "ListChannels": "",
        "ListLiveSources": [
            "SourceLocationName"
        ],
        "ListPlaybackConfigurations": "",
        "ListPrefetchSchedules": [
            "PlaybackConfigurationName"
        ],
        "ListSourceLocations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListVodSources": [
            "SourceLocationName"
        ],
        "PutChannelPolicy": [
            "ChannelName",
            "Policy"
        ],
        "PutPlaybackConfiguration": [
            "Name"
        ],
        "StartChannel": [
            "ChannelName"
        ],
        "StopChannel": [
            "ChannelName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateChannel": [
            "ChannelName",
            "Outputs"
        ],
        "UpdateLiveSource": [
            "HttpPackageConfigurations",
            "LiveSourceName",
            "SourceLocationName"
        ],
        "UpdateProgram": [
            "ChannelName",
            "ProgramName",
            "ScheduleConfiguration"
        ],
        "UpdateSourceLocation": [
            "HttpConfiguration",
            "SourceLocationName"
        ],
        "UpdateVodSource": [
            "HttpPackageConfigurations",
            "SourceLocationName",
            "VodSourceName"
        ]
    },
    "medical-imaging": {
        "CopyImageSet": [
            "datastoreId",
            "sourceImageSetId",
            "copyImageSetInformation"
        ],
        "CreateDatastore": [
            "clientToken"
        ],
        "DeleteDatastore": [
            "datastoreId"
        ],
        "DeleteImageSet": [
            "datastoreId",
            "imageSetId"
        ],
        "GetDICOMImportJob": [
            "datastoreId",
            "jobId"
        ],
        "GetDatastore": [
            "datastoreId"
        ],
        "GetImageFrame": [
            "datastoreId",
            "imageSetId",
            "imageFrameInformation"
        ],
        "GetImageSet": [
            "datastoreId",
            "imageSetId"
        ],
        "GetImageSetMetadata": [
            "datastoreId",
            "imageSetId"
        ],
        "ListDICOMImportJobs": [
            "datastoreId"
        ],
        "ListDatastores": "",
        "ListImageSetVersions": [
            "datastoreId",
            "imageSetId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "SearchImageSets": [
            "datastoreId"
        ],
        "StartDICOMImportJob": [
            "dataAccessRoleArn",
            "clientToken",
            "datastoreId",
            "inputS3Uri",
            "outputS3Uri"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateImageSetMetadata": [
            "datastoreId",
            "imageSetId",
            "latestVersionId",
            "updateImageSetMetadataUpdates"
        ]
    },
    "memorydb": {
        "BatchUpdateCluster": [
            "ClusterNames"
        ],
        "CopySnapshot": [
            "SourceSnapshotName",
            "TargetSnapshotName"
        ],
        "CreateACL": [
            "ACLName"
        ],
        "CreateCluster": [
            "ClusterName",
            "NodeType",
            "ACLName"
        ],
        "CreateParameterGroup": [
            "ParameterGroupName",
            "Family"
        ],
        "CreateSnapshot": [
            "ClusterName",
            "SnapshotName"
        ],
        "CreateSubnetGroup": [
            "SubnetGroupName",
            "SubnetIds"
        ],
        "CreateUser": [
            "UserName",
            "AuthenticationMode",
            "AccessString"
        ],
        "DeleteACL": [
            "ACLName"
        ],
        "DeleteCluster": [
            "ClusterName"
        ],
        "DeleteParameterGroup": [
            "ParameterGroupName"
        ],
        "DeleteSnapshot": [
            "SnapshotName"
        ],
        "DeleteSubnetGroup": [
            "SubnetGroupName"
        ],
        "DeleteUser": [
            "UserName"
        ],
        "DescribeACLs": "",
        "DescribeClusters": "",
        "DescribeEngineVersions": "",
        "DescribeEvents": "",
        "DescribeParameterGroups": "",
        "DescribeParameters": [
            "ParameterGroupName"
        ],
        "DescribeReservedNodes": "",
        "DescribeReservedNodesOfferings": "",
        "DescribeServiceUpdates": "",
        "DescribeSnapshots": "",
        "DescribeSubnetGroups": "",
        "DescribeUsers": "",
        "FailoverShard": [
            "ClusterName",
            "ShardName"
        ],
        "ListAllowedNodeTypeUpdates": [
            "ClusterName"
        ],
        "ListTags": [
            "ResourceArn"
        ],
        "PurchaseReservedNodesOffering": [
            "ReservedNodesOfferingId"
        ],
        "ResetParameterGroup": [
            "ParameterGroupName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateACL": [
            "ACLName"
        ],
        "UpdateCluster": [
            "ClusterName"
        ],
        "UpdateParameterGroup": [
            "ParameterGroupName",
            "ParameterNameValues"
        ],
        "UpdateSubnetGroup": [
            "SubnetGroupName"
        ],
        "UpdateUser": [
            "UserName"
        ]
    },
    "meteringmarketplace": {
        "BatchMeterUsage": [
            "UsageRecords",
            "ProductCode"
        ],
        "MeterUsage": [
            "ProductCode",
            "Timestamp",
            "UsageDimension"
        ],
        "RegisterUsage": [
            "ProductCode",
            "PublicKeyVersion"
        ],
        "ResolveCustomer": [
            "RegistrationToken"
        ]
    },
    "mgn": {
        "ArchiveApplication": [
            "applicationID"
        ],
        "ArchiveWave": [
            "waveID"
        ],
        "AssociateApplications": [
            "applicationIDs",
            "waveID"
        ],
        "AssociateSourceServers": [
            "applicationID",
            "sourceServerIDs"
        ],
        "ChangeServerLifeCycleState": [
            "lifeCycle",
            "sourceServerID"
        ],
        "CreateApplication": [
            "name"
        ],
        "CreateConnector": [
            "name",
            "ssmInstanceID"
        ],
        "CreateLaunchConfigurationTemplate": "",
        "CreateReplicationConfigurationTemplate": [
            "associateDefaultSecurityGroup",
            "bandwidthThrottling",
            "createPublicIP",
            "dataPlaneRouting",
            "defaultLargeStagingDiskType",
            "ebsEncryption",
            "replicationServerInstanceType",
            "replicationServersSecurityGroupsIDs",
            "stagingAreaSubnetId",
            "stagingAreaTags",
            "useDedicatedReplicationServer"
        ],
        "CreateWave": [
            "name"
        ],
        "DeleteApplication": [
            "applicationID"
        ],
        "DeleteConnector": [
            "connectorID"
        ],
        "DeleteJob": [
            "jobID"
        ],
        "DeleteLaunchConfigurationTemplate": [
            "launchConfigurationTemplateID"
        ],
        "DeleteReplicationConfigurationTemplate": [
            "replicationConfigurationTemplateID"
        ],
        "DeleteSourceServer": [
            "sourceServerID"
        ],
        "DeleteVcenterClient": [
            "vcenterClientID"
        ],
        "DeleteWave": [
            "waveID"
        ],
        "DescribeJobLogItems": [
            "jobID"
        ],
        "DescribeJobs": "",
        "DescribeLaunchConfigurationTemplates": "",
        "DescribeReplicationConfigurationTemplates": "",
        "DescribeSourceServers": "",
        "DescribeVcenterClients": "",
        "DisassociateApplications": [
            "applicationIDs",
            "waveID"
        ],
        "DisassociateSourceServers": [
            "applicationID",
            "sourceServerIDs"
        ],
        "DisconnectFromService": [
            "sourceServerID"
        ],
        "FinalizeCutover": [
            "sourceServerID"
        ],
        "GetLaunchConfiguration": [
            "sourceServerID"
        ],
        "GetReplicationConfiguration": [
            "sourceServerID"
        ],
        "InitializeService": "",
        "ListApplications": "",
        "ListConnectors": "",
        "ListExportErrors": [
            "exportID"
        ],
        "ListExports": "",
        "ListImportErrors": [
            "importID"
        ],
        "ListImports": "",
        "ListManagedAccounts": "",
        "ListSourceServerActions": [
            "sourceServerID"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTemplateActions": [
            "launchConfigurationTemplateID"
        ],
        "ListWaves": "",
        "MarkAsArchived": [
            "sourceServerID"
        ],
        "PauseReplication": [
            "sourceServerID"
        ],
        "PutSourceServerAction": [
            "actionID",
            "actionName",
            "documentIdentifier",
            "order",
            "sourceServerID"
        ],
        "PutTemplateAction": [
            "actionID",
            "actionName",
            "documentIdentifier",
            "launchConfigurationTemplateID",
            "order"
        ],
        "RemoveSourceServerAction": [
            "actionID",
            "sourceServerID"
        ],
        "RemoveTemplateAction": [
            "actionID",
            "launchConfigurationTemplateID"
        ],
        "ResumeReplication": [
            "sourceServerID"
        ],
        "RetryDataReplication": [
            "sourceServerID"
        ],
        "StartCutover": [
            "sourceServerIDs"
        ],
        "StartExport": [
            "s3Bucket",
            "s3Key"
        ],
        "StartImport": [
            "s3BucketSource"
        ],
        "StartReplication": [
            "sourceServerID"
        ],
        "StartTest": [
            "sourceServerIDs"
        ],
        "StopReplication": [
            "sourceServerID"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TerminateTargetInstances": [
            "sourceServerIDs"
        ],
        "UnarchiveApplication": [
            "applicationID"
        ],
        "UnarchiveWave": [
            "waveID"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "applicationID"
        ],
        "UpdateConnector": [
            "connectorID"
        ],
        "UpdateLaunchConfiguration": [
            "sourceServerID"
        ],
        "UpdateLaunchConfigurationTemplate": [
            "launchConfigurationTemplateID"
        ],
        "UpdateReplicationConfiguration": [
            "sourceServerID"
        ],
        "UpdateReplicationConfigurationTemplate": [
            "replicationConfigurationTemplateID"
        ],
        "UpdateSourceServer": [
            "sourceServerID"
        ],
        "UpdateSourceServerReplicationType": [
            "replicationType",
            "sourceServerID"
        ],
        "UpdateWave": [
            "waveID"
        ]
    },
    "migration-hub-refactor-spaces": {
        "CreateApplication": [
            "EnvironmentIdentifier",
            "Name",
            "ProxyType",
            "VpcId"
        ],
        "CreateEnvironment": [
            "Name",
            "NetworkFabricType"
        ],
        "CreateRoute": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "RouteType",
            "ServiceIdentifier"
        ],
        "CreateService": [
            "ApplicationIdentifier",
            "EndpointType",
            "EnvironmentIdentifier",
            "Name"
        ],
        "DeleteApplication": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier"
        ],
        "DeleteEnvironment": [
            "EnvironmentIdentifier"
        ],
        "DeleteResourcePolicy": [
            "Identifier"
        ],
        "DeleteRoute": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "RouteIdentifier"
        ],
        "DeleteService": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "ServiceIdentifier"
        ],
        "GetApplication": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier"
        ],
        "GetEnvironment": [
            "EnvironmentIdentifier"
        ],
        "GetResourcePolicy": [
            "Identifier"
        ],
        "GetRoute": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "RouteIdentifier"
        ],
        "GetService": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "ServiceIdentifier"
        ],
        "ListApplications": [
            "EnvironmentIdentifier"
        ],
        "ListEnvironmentVpcs": [
            "EnvironmentIdentifier"
        ],
        "ListEnvironments": "",
        "ListRoutes": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier"
        ],
        "ListServices": [
            "ApplicationIdentifier",
            "EnvironmentIdentifier"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutResourcePolicy": [
            "Policy",
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateRoute": [
            "ActivationState",
            "ApplicationIdentifier",
            "EnvironmentIdentifier",
            "RouteIdentifier"
        ]
    },
    "migrationhub-config": {
        "CreateHomeRegionControl": [
            "HomeRegion",
            "Target"
        ],
        "DeleteHomeRegionControl": [
            "ControlId"
        ],
        "DescribeHomeRegionControls": "",
        "GetHomeRegion": ""
    },
    "migrationhuborchestrator": {
        "CreateTemplate": [
            "templateName",
            "templateSource"
        ],
        "CreateWorkflow": [
            "name",
            "templateId",
            "inputParameters"
        ],
        "CreateWorkflowStep": [
            "name",
            "stepGroupId",
            "workflowId",
            "stepActionType"
        ],
        "CreateWorkflowStepGroup": [
            "workflowId",
            "name"
        ],
        "DeleteTemplate": [
            "id"
        ],
        "DeleteWorkflow": [
            "id"
        ],
        "DeleteWorkflowStep": [
            "id",
            "stepGroupId",
            "workflowId"
        ],
        "DeleteWorkflowStepGroup": [
            "workflowId",
            "id"
        ],
        "GetTemplate": [
            "id"
        ],
        "GetTemplateStep": [
            "id",
            "templateId",
            "stepGroupId"
        ],
        "GetTemplateStepGroup": [
            "templateId",
            "id"
        ],
        "GetWorkflow": [
            "id"
        ],
        "GetWorkflowStep": [
            "workflowId",
            "stepGroupId",
            "id"
        ],
        "GetWorkflowStepGroup": [
            "id",
            "workflowId"
        ],
        "ListPlugins": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTemplateStepGroups": [
            "templateId"
        ],
        "ListTemplateSteps": [
            "templateId",
            "stepGroupId"
        ],
        "ListTemplates": "",
        "ListWorkflowStepGroups": [
            "workflowId"
        ],
        "ListWorkflowSteps": [
            "workflowId",
            "stepGroupId"
        ],
        "ListWorkflows": "",
        "RetryWorkflowStep": [
            "workflowId",
            "stepGroupId",
            "id"
        ],
        "StartWorkflow": [
            "id"
        ],
        "StopWorkflow": [
            "id"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateTemplate": [
            "id"
        ],
        "UpdateWorkflow": [
            "id"
        ],
        "UpdateWorkflowStep": [
            "id",
            "stepGroupId",
            "workflowId"
        ],
        "UpdateWorkflowStepGroup": [
            "workflowId",
            "id"
        ]
    },
    "migrationhubstrategy": {
        "GetApplicationComponentDetails": [
            "applicationComponentId"
        ],
        "GetApplicationComponentStrategies": [
            "applicationComponentId"
        ],
        "GetAssessment": [
            "id"
        ],
        "GetImportFileTask": [
            "id"
        ],
        "GetLatestAssessmentId": "",
        "GetPortfolioPreferences": "",
        "GetPortfolioSummary": "",
        "GetRecommendationReportDetails": [
            "id"
        ],
        "GetServerDetails": [
            "serverId"
        ],
        "GetServerStrategies": [
            "serverId"
        ],
        "ListAnalyzableServers": "",
        "ListApplicationComponents": "",
        "ListCollectors": "",
        "ListImportFileTask": "",
        "ListServers": "",
        "PutPortfolioPreferences": "",
        "StartAssessment": "",
        "StartImportFileTask": [
            "S3Bucket",
            "name",
            "s3key"
        ],
        "StartRecommendationReportGeneration": "",
        "StopAssessment": [
            "assessmentId"
        ],
        "UpdateApplicationComponentConfig": [
            "applicationComponentId"
        ],
        "UpdateServerConfig": [
            "serverId"
        ]
    },
    "mobile": {
        "CreateProject": "",
        "DeleteProject": [
            "projectId"
        ],
        "DescribeBundle": [
            "bundleId"
        ],
        "DescribeProject": [
            "projectId"
        ],
        "ExportBundle": [
            "bundleId"
        ],
        "ExportProject": [
            "projectId"
        ],
        "ListBundles": "",
        "ListProjects": "",
        "UpdateProject": [
            "projectId"
        ]
    },
    "mobileanalytics": {
        "PutEvents": [
            "events",
            "clientContext"
        ]
    },
    "models.lex.v2": {
        "BatchCreateCustomVocabularyItem": [
            "botId",
            "botVersion",
            "localeId",
            "customVocabularyItemList"
        ],
        "BatchDeleteCustomVocabularyItem": [
            "botId",
            "botVersion",
            "localeId",
            "customVocabularyItemList"
        ],
        "BatchUpdateCustomVocabularyItem": [
            "botId",
            "botVersion",
            "localeId",
            "customVocabularyItemList"
        ],
        "BuildBotLocale": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "CreateBot": [
            "botName",
            "roleArn",
            "dataPrivacy",
            "idleSessionTTLInSeconds"
        ],
        "CreateBotAlias": [
            "botAliasName",
            "botId"
        ],
        "CreateBotLocale": [
            "botId",
            "botVersion",
            "localeId",
            "nluIntentConfidenceThreshold"
        ],
        "CreateBotReplica": [
            "botId",
            "replicaRegion"
        ],
        "CreateBotVersion": [
            "botId",
            "botVersionLocaleSpecification"
        ],
        "CreateExport": [
            "resourceSpecification",
            "fileFormat"
        ],
        "CreateIntent": [
            "intentName",
            "botId",
            "botVersion",
            "localeId"
        ],
        "CreateResourcePolicy": [
            "resourceArn",
            "policy"
        ],
        "CreateResourcePolicyStatement": [
            "resourceArn",
            "statementId",
            "effect",
            "principal",
            "action"
        ],
        "CreateSlot": [
            "slotName",
            "valueElicitationSetting",
            "botId",
            "botVersion",
            "localeId",
            "intentId"
        ],
        "CreateSlotType": [
            "slotTypeName",
            "botId",
            "botVersion",
            "localeId"
        ],
        "CreateTestSetDiscrepancyReport": [
            "testSetId",
            "target"
        ],
        "CreateUploadUrl": "",
        "DeleteBot": [
            "botId"
        ],
        "DeleteBotAlias": [
            "botAliasId",
            "botId"
        ],
        "DeleteBotLocale": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "DeleteBotReplica": [
            "botId",
            "replicaRegion"
        ],
        "DeleteBotVersion": [
            "botId",
            "botVersion"
        ],
        "DeleteCustomVocabulary": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "DeleteExport": [
            "exportId"
        ],
        "DeleteImport": [
            "importId"
        ],
        "DeleteIntent": [
            "intentId",
            "botId",
            "botVersion",
            "localeId"
        ],
        "DeleteResourcePolicy": [
            "resourceArn"
        ],
        "DeleteResourcePolicyStatement": [
            "resourceArn",
            "statementId"
        ],
        "DeleteSlot": [
            "slotId",
            "botId",
            "botVersion",
            "localeId",
            "intentId"
        ],
        "DeleteSlotType": [
            "slotTypeId",
            "botId",
            "botVersion",
            "localeId"
        ],
        "DeleteTestSet": [
            "testSetId"
        ],
        "DeleteUtterances": [
            "botId"
        ],
        "DescribeBot": [
            "botId"
        ],
        "DescribeBotAlias": [
            "botAliasId",
            "botId"
        ],
        "DescribeBotLocale": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "DescribeBotRecommendation": [
            "botId",
            "botVersion",
            "localeId",
            "botRecommendationId"
        ],
        "DescribeBotReplica": [
            "botId",
            "replicaRegion"
        ],
        "DescribeBotResourceGeneration": [
            "botId",
            "botVersion",
            "localeId",
            "generationId"
        ],
        "DescribeBotVersion": [
            "botId",
            "botVersion"
        ],
        "DescribeCustomVocabularyMetadata": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "DescribeExport": [
            "exportId"
        ],
        "DescribeImport": [
            "importId"
        ],
        "DescribeIntent": [
            "intentId",
            "botId",
            "botVersion",
            "localeId"
        ],
        "DescribeResourcePolicy": [
            "resourceArn"
        ],
        "DescribeSlot": [
            "slotId",
            "botId",
            "botVersion",
            "localeId",
            "intentId"
        ],
        "DescribeSlotType": [
            "slotTypeId",
            "botId",
            "botVersion",
            "localeId"
        ],
        "DescribeTestExecution": [
            "testExecutionId"
        ],
        "DescribeTestSet": [
            "testSetId"
        ],
        "DescribeTestSetDiscrepancyReport": [
            "testSetDiscrepancyReportId"
        ],
        "DescribeTestSetGeneration": [
            "testSetGenerationId"
        ],
        "GenerateBotElement": [
            "intentId",
            "botId",
            "botVersion",
            "localeId"
        ],
        "GetTestExecutionArtifactsUrl": [
            "testExecutionId"
        ],
        "ListAggregatedUtterances": [
            "botId",
            "localeId",
            "aggregationDuration"
        ],
        "ListBotAliasReplicas": [
            "botId",
            "replicaRegion"
        ],
        "ListBotAliases": [
            "botId"
        ],
        "ListBotLocales": [
            "botId",
            "botVersion"
        ],
        "ListBotRecommendations": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "ListBotReplicas": [
            "botId"
        ],
        "ListBotResourceGenerations": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "ListBotVersionReplicas": [
            "botId",
            "replicaRegion"
        ],
        "ListBotVersions": [
            "botId"
        ],
        "ListBots": "",
        "ListBuiltInIntents": [
            "localeId"
        ],
        "ListBuiltInSlotTypes": [
            "localeId"
        ],
        "ListCustomVocabularyItems": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "ListExports": "",
        "ListImports": "",
        "ListIntentMetrics": [
            "botId",
            "startDateTime",
            "endDateTime",
            "metrics"
        ],
        "ListIntentPaths": [
            "botId",
            "startDateTime",
            "endDateTime",
            "intentPath"
        ],
        "ListIntentStageMetrics": [
            "botId",
            "startDateTime",
            "endDateTime",
            "metrics"
        ],
        "ListIntents": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "ListRecommendedIntents": [
            "botId",
            "botVersion",
            "localeId",
            "botRecommendationId"
        ],
        "ListSessionAnalyticsData": [
            "botId",
            "startDateTime",
            "endDateTime"
        ],
        "ListSessionMetrics": [
            "botId",
            "startDateTime",
            "endDateTime",
            "metrics"
        ],
        "ListSlotTypes": [
            "botId",
            "botVersion",
            "localeId"
        ],
        "ListSlots": [
            "botId",
            "botVersion",
            "localeId",
            "intentId"
        ],
        "ListTagsForResource": [
            "resourceARN"
        ],
        "ListTestExecutionResultItems": [
            "testExecutionId",
            "resultFilterBy"
        ],
        "ListTestExecutions": "",
        "ListTestSetRecords": [
            "testSetId"
        ],
        "ListTestSets": "",
        "ListUtteranceAnalyticsData": [
            "botId",
            "startDateTime",
            "endDateTime"
        ],
        "ListUtteranceMetrics": [
            "botId",
            "startDateTime",
            "endDateTime",
            "metrics"
        ],
        "SearchAssociatedTranscripts": [
            "botId",
            "botVersion",
            "localeId",
            "botRecommendationId",
            "filters"
        ],
        "StartBotRecommendation": [
            "botId",
            "botVersion",
            "localeId",
            "transcriptSourceSetting"
        ],
        "StartBotResourceGeneration": [
            "generationInputPrompt",
            "botId",
            "botVersion",
            "localeId"
        ],
        "StartImport": [
            "importId",
            "resourceSpecification",
            "mergeStrategy"
        ],
        "StartTestExecution": [
            "testSetId",
            "target",
            "apiMode"
        ],
        "StartTestSetGeneration": [
            "testSetName",
            "storageLocation",
            "generationDataSource",
            "roleArn"
        ],
        "StopBotRecommendation": [
            "botId",
            "botVersion",
            "localeId",
            "botRecommendationId"
        ],
        "TagResource": [
            "resourceARN",
            "tags"
        ],
        "UntagResource": [
            "resourceARN",
            "tagKeys"
        ],
        "UpdateBot": [
            "botId",
            "botName",
            "roleArn",
            "dataPrivacy",
            "idleSessionTTLInSeconds"
        ],
        "UpdateBotAlias": [
            "botAliasId",
            "botAliasName",
            "botId"
        ],
        "UpdateBotLocale": [
            "botId",
            "botVersion",
            "localeId",
            "nluIntentConfidenceThreshold"
        ],
        "UpdateBotRecommendation": [
            "botId",
            "botVersion",
            "localeId",
            "botRecommendationId",
            "encryptionSetting"
        ],
        "UpdateExport": [
            "exportId"
        ],
        "UpdateIntent": [
            "intentId",
            "intentName",
            "botId",
            "botVersion",
            "localeId"
        ],
        "UpdateResourcePolicy": [
            "resourceArn",
            "policy"
        ],
        "UpdateSlot": [
            "slotId",
            "slotName",
            "valueElicitationSetting",
            "botId",
            "botVersion",
            "localeId",
            "intentId"
        ],
        "UpdateSlotType": [
            "slotTypeId",
            "slotTypeName",
            "botId",
            "botVersion",
            "localeId"
        ],
        "UpdateTestSet": [
            "testSetId",
            "testSetName"
        ]
    },
    "monitoring": {
        "DeleteAlarms": [
            "AlarmNames"
        ],
        "DeleteAnomalyDetector": "",
        "DeleteDashboards": [
            "DashboardNames"
        ],
        "DeleteInsightRules": [
            "RuleNames"
        ],
        "DeleteMetricStream": [
            "Name"
        ],
        "DescribeAlarmHistory": "",
        "DescribeAlarms": "",
        "DescribeAlarmsForMetric": [
            "MetricName",
            "Namespace"
        ],
        "DescribeAnomalyDetectors": "",
        "DescribeInsightRules": "",
        "DisableAlarmActions": [
            "AlarmNames"
        ],
        "DisableInsightRules": [
            "RuleNames"
        ],
        "EnableAlarmActions": [
            "AlarmNames"
        ],
        "EnableInsightRules": [
            "RuleNames"
        ],
        "GetDashboard": [
            "DashboardName"
        ],
        "GetInsightRuleReport": [
            "RuleName",
            "StartTime",
            "EndTime",
            "Period"
        ],
        "GetMetricData": [
            "MetricDataQueries",
            "StartTime",
            "EndTime"
        ],
        "GetMetricStatistics": [
            "Namespace",
            "MetricName",
            "StartTime",
            "EndTime",
            "Period"
        ],
        "GetMetricStream": [
            "Name"
        ],
        "GetMetricWidgetImage": [
            "MetricWidget"
        ],
        "ListDashboards": "",
        "ListManagedInsightRules": [
            "ResourceARN"
        ],
        "ListMetricStreams": "",
        "ListMetrics": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutAnomalyDetector": "",
        "PutCompositeAlarm": [
            "AlarmName",
            "AlarmRule"
        ],
        "PutDashboard": [
            "DashboardName",
            "DashboardBody"
        ],
        "PutInsightRule": [
            "RuleName",
            "RuleDefinition"
        ],
        "PutManagedInsightRules": [
            "ManagedRules"
        ],
        "PutMetricAlarm": [
            "AlarmName",
            "EvaluationPeriods",
            "ComparisonOperator"
        ],
        "PutMetricData": [
            "Namespace",
            "MetricData"
        ],
        "PutMetricStream": [
            "Name",
            "FirehoseArn",
            "RoleArn",
            "OutputFormat"
        ],
        "SetAlarmState": [
            "AlarmName",
            "StateValue",
            "StateReason"
        ],
        "StartMetricStreams": [
            "Names"
        ],
        "StopMetricStreams": [
            "Names"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ]
    },
    "mq": {
        "CreateBroker": [
            "EngineVersion",
            "HostInstanceType",
            "AutoMinorVersionUpgrade",
            "Users",
            "BrokerName",
            "DeploymentMode",
            "EngineType",
            "PubliclyAccessible"
        ],
        "CreateConfiguration": [
            "EngineVersion",
            "EngineType",
            "Name"
        ],
        "CreateTags": [
            "ResourceArn"
        ],
        "CreateUser": [
            "Username",
            "BrokerId",
            "Password"
        ],
        "DeleteBroker": [
            "BrokerId"
        ],
        "DeleteTags": [
            "TagKeys",
            "ResourceArn"
        ],
        "DeleteUser": [
            "Username",
            "BrokerId"
        ],
        "DescribeBroker": [
            "BrokerId"
        ],
        "DescribeBrokerEngineTypes": "",
        "DescribeBrokerInstanceOptions": "",
        "DescribeConfiguration": [
            "ConfigurationId"
        ],
        "DescribeConfigurationRevision": [
            "ConfigurationRevision",
            "ConfigurationId"
        ],
        "DescribeUser": [
            "Username",
            "BrokerId"
        ],
        "ListBrokers": "",
        "ListConfigurationRevisions": [
            "ConfigurationId"
        ],
        "ListConfigurations": "",
        "ListTags": [
            "ResourceArn"
        ],
        "ListUsers": [
            "BrokerId"
        ],
        "Promote": [
            "BrokerId",
            "Mode"
        ],
        "RebootBroker": [
            "BrokerId"
        ],
        "UpdateBroker": [
            "BrokerId"
        ],
        "UpdateConfiguration": [
            "ConfigurationId",
            "Data"
        ],
        "UpdateUser": [
            "Username",
            "BrokerId"
        ]
    },
    "mturk-requester": {
        "AcceptQualificationRequest": [
            "QualificationRequestId"
        ],
        "ApproveAssignment": [
            "AssignmentId"
        ],
        "AssociateQualificationWithWorker": [
            "QualificationTypeId",
            "WorkerId"
        ],
        "CreateAdditionalAssignmentsForHIT": [
            "HITId",
            "NumberOfAdditionalAssignments"
        ],
        "CreateHIT": [
            "LifetimeInSeconds",
            "AssignmentDurationInSeconds",
            "Reward",
            "Title",
            "Description"
        ],
        "CreateHITType": [
            "AssignmentDurationInSeconds",
            "Reward",
            "Title",
            "Description"
        ],
        "CreateHITWithHITType": [
            "HITTypeId",
            "LifetimeInSeconds"
        ],
        "CreateQualificationType": [
            "Name",
            "Description",
            "QualificationTypeStatus"
        ],
        "CreateWorkerBlock": [
            "WorkerId",
            "Reason"
        ],
        "DeleteHIT": [
            "HITId"
        ],
        "DeleteQualificationType": [
            "QualificationTypeId"
        ],
        "DeleteWorkerBlock": [
            "WorkerId"
        ],
        "DisassociateQualificationFromWorker": [
            "WorkerId",
            "QualificationTypeId"
        ],
        "GetAccountBalance": "",
        "GetAssignment": [
            "AssignmentId"
        ],
        "GetFileUploadURL": [
            "AssignmentId",
            "QuestionIdentifier"
        ],
        "GetHIT": [
            "HITId"
        ],
        "GetQualificationScore": [
            "QualificationTypeId",
            "WorkerId"
        ],
        "GetQualificationType": [
            "QualificationTypeId"
        ],
        "ListAssignmentsForHIT": [
            "HITId"
        ],
        "ListBonusPayments": "",
        "ListHITs": "",
        "ListHITsForQualificationType": [
            "QualificationTypeId"
        ],
        "ListQualificationRequests": "",
        "ListQualificationTypes": [
            "MustBeRequestable"
        ],
        "ListReviewPolicyResultsForHIT": [
            "HITId"
        ],
        "ListReviewableHITs": "",
        "ListWorkerBlocks": "",
        "ListWorkersWithQualificationType": [
            "QualificationTypeId"
        ],
        "NotifyWorkers": [
            "Subject",
            "MessageText",
            "WorkerIds"
        ],
        "RejectAssignment": [
            "AssignmentId",
            "RequesterFeedback"
        ],
        "RejectQualificationRequest": [
            "QualificationRequestId"
        ],
        "SendBonus": [
            "WorkerId",
            "BonusAmount",
            "AssignmentId",
            "Reason"
        ],
        "SendTestEventNotification": [
            "Notification",
            "TestEventType"
        ],
        "UpdateExpirationForHIT": [
            "HITId",
            "ExpireAt"
        ],
        "UpdateHITReviewStatus": [
            "HITId"
        ],
        "UpdateHITTypeOfHIT": [
            "HITId",
            "HITTypeId"
        ],
        "UpdateNotificationSettings": [
            "HITTypeId"
        ],
        "UpdateQualificationType": [
            "QualificationTypeId"
        ]
    },
    "mwaa": {
        "CreateCliToken": [
            "Name"
        ],
        "CreateEnvironment": [
            "DagS3Path",
            "ExecutionRoleArn",
            "Name",
            "NetworkConfiguration",
            "SourceBucketArn"
        ],
        "CreateWebLoginToken": [
            "Name"
        ],
        "DeleteEnvironment": [
            "Name"
        ],
        "GetEnvironment": [
            "Name"
        ],
        "ListEnvironments": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PublishMetrics": [
            "EnvironmentName",
            "MetricData"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "tagKeys"
        ],
        "UpdateEnvironment": [
            "Name"
        ]
    },
    "neptune": {
        "AddRoleToDBCluster": [
            "DBClusterIdentifier",
            "RoleArn"
        ],
        "AddSourceIdentifierToSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "AddTagsToResource": [
            "ResourceName",
            "Tags"
        ],
        "ApplyPendingMaintenanceAction": [
            "ResourceIdentifier",
            "ApplyAction",
            "OptInType"
        ],
        "CopyDBClusterParameterGroup": [
            "SourceDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupDescription"
        ],
        "CopyDBClusterSnapshot": [
            "SourceDBClusterSnapshotIdentifier",
            "TargetDBClusterSnapshotIdentifier"
        ],
        "CopyDBParameterGroup": [
            "SourceDBParameterGroupIdentifier",
            "TargetDBParameterGroupIdentifier",
            "TargetDBParameterGroupDescription"
        ],
        "CreateDBCluster": [
            "DBClusterIdentifier",
            "Engine"
        ],
        "CreateDBClusterEndpoint": [
            "DBClusterIdentifier",
            "DBClusterEndpointIdentifier",
            "EndpointType"
        ],
        "CreateDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "DBParameterGroupFamily",
            "Description"
        ],
        "CreateDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier",
            "DBClusterIdentifier"
        ],
        "CreateDBInstance": [
            "DBInstanceIdentifier",
            "DBInstanceClass",
            "Engine",
            "DBClusterIdentifier"
        ],
        "CreateDBParameterGroup": [
            "DBParameterGroupName",
            "DBParameterGroupFamily",
            "Description"
        ],
        "CreateDBSubnetGroup": [
            "DBSubnetGroupName",
            "DBSubnetGroupDescription",
            "SubnetIds"
        ],
        "CreateEventSubscription": [
            "SubscriptionName",
            "SnsTopicArn"
        ],
        "CreateGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "DeleteDBCluster": [
            "DBClusterIdentifier"
        ],
        "DeleteDBClusterEndpoint": [
            "DBClusterEndpointIdentifier"
        ],
        "DeleteDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "DeleteDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier"
        ],
        "DeleteDBInstance": [
            "DBInstanceIdentifier"
        ],
        "DeleteDBParameterGroup": [
            "DBParameterGroupName"
        ],
        "DeleteDBSubnetGroup": [
            "DBSubnetGroupName"
        ],
        "DeleteEventSubscription": [
            "SubscriptionName"
        ],
        "DeleteGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "DescribeDBClusterEndpoints": "",
        "DescribeDBClusterParameterGroups": "",
        "DescribeDBClusterParameters": [
            "DBClusterParameterGroupName"
        ],
        "DescribeDBClusterSnapshotAttributes": [
            "DBClusterSnapshotIdentifier"
        ],
        "DescribeDBClusterSnapshots": "",
        "DescribeDBClusters": "",
        "DescribeDBEngineVersions": "",
        "DescribeDBInstances": "",
        "DescribeDBParameterGroups": "",
        "DescribeDBParameters": [
            "DBParameterGroupName"
        ],
        "DescribeDBSubnetGroups": "",
        "DescribeEngineDefaultClusterParameters": [
            "DBParameterGroupFamily"
        ],
        "DescribeEngineDefaultParameters": [
            "DBParameterGroupFamily"
        ],
        "DescribeEventCategories": "",
        "DescribeEventSubscriptions": "",
        "DescribeEvents": "",
        "DescribeGlobalClusters": "",
        "DescribeOrderableDBInstanceOptions": [
            "Engine"
        ],
        "DescribePendingMaintenanceActions": "",
        "DescribeValidDBInstanceModifications": [
            "DBInstanceIdentifier"
        ],
        "FailoverDBCluster": "",
        "FailoverGlobalCluster": [
            "GlobalClusterIdentifier",
            "TargetDbClusterIdentifier"
        ],
        "ListTagsForResource": [
            "ResourceName"
        ],
        "ModifyDBCluster": [
            "DBClusterIdentifier"
        ],
        "ModifyDBClusterEndpoint": [
            "DBClusterEndpointIdentifier"
        ],
        "ModifyDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "Parameters"
        ],
        "ModifyDBClusterSnapshotAttribute": [
            "DBClusterSnapshotIdentifier",
            "AttributeName"
        ],
        "ModifyDBInstance": [
            "DBInstanceIdentifier"
        ],
        "ModifyDBParameterGroup": [
            "DBParameterGroupName",
            "Parameters"
        ],
        "ModifyDBSubnetGroup": [
            "DBSubnetGroupName",
            "SubnetIds"
        ],
        "ModifyEventSubscription": [
            "SubscriptionName"
        ],
        "ModifyGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "PromoteReadReplicaDBCluster": [
            "DBClusterIdentifier"
        ],
        "RebootDBInstance": [
            "DBInstanceIdentifier"
        ],
        "RemoveFromGlobalCluster": [
            "GlobalClusterIdentifier",
            "DbClusterIdentifier"
        ],
        "RemoveRoleFromDBCluster": [
            "DBClusterIdentifier",
            "RoleArn"
        ],
        "RemoveSourceIdentifierFromSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "RemoveTagsFromResource": [
            "ResourceName",
            "TagKeys"
        ],
        "ResetDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "ResetDBParameterGroup": [
            "DBParameterGroupName"
        ],
        "RestoreDBClusterFromSnapshot": [
            "DBClusterIdentifier",
            "SnapshotIdentifier",
            "Engine"
        ],
        "RestoreDBClusterToPointInTime": [
            "DBClusterIdentifier",
            "SourceDBClusterIdentifier"
        ],
        "StartDBCluster": [
            "DBClusterIdentifier"
        ],
        "StopDBCluster": [
            "DBClusterIdentifier"
        ]
    },
    "neptunedata": {
        "CancelGremlinQuery": [
            "queryId"
        ],
        "CancelLoaderJob": [
            "loadId"
        ],
        "CancelMLDataProcessingJob": [
            "id"
        ],
        "CancelMLModelTrainingJob": [
            "id"
        ],
        "CancelMLModelTransformJob": [
            "id"
        ],
        "CancelOpenCypherQuery": [
            "queryId"
        ],
        "CreateMLEndpoint": "",
        "DeleteMLEndpoint": [
            "id"
        ],
        "DeletePropertygraphStatistics": "",
        "DeleteSparqlStatistics": "",
        "ExecuteFastReset": [
            "action"
        ],
        "ExecuteGremlinExplainQuery": [
            "gremlinQuery"
        ],
        "ExecuteGremlinProfileQuery": [
            "gremlinQuery"
        ],
        "ExecuteGremlinQuery": [
            "gremlinQuery"
        ],
        "ExecuteOpenCypherExplainQuery": [
            "openCypherQuery",
            "explainMode"
        ],
        "ExecuteOpenCypherQuery": [
            "openCypherQuery"
        ],
        "GetEngineStatus": "",
        "GetGremlinQueryStatus": [
            "queryId"
        ],
        "GetLoaderJobStatus": [
            "loadId"
        ],
        "GetMLDataProcessingJob": [
            "id"
        ],
        "GetMLEndpoint": [
            "id"
        ],
        "GetMLModelTrainingJob": [
            "id"
        ],
        "GetMLModelTransformJob": [
            "id"
        ],
        "GetOpenCypherQueryStatus": [
            "queryId"
        ],
        "GetPropertygraphStatistics": "",
        "GetPropertygraphStream": "",
        "GetPropertygraphSummary": "",
        "GetRDFGraphSummary": "",
        "GetSparqlStatistics": "",
        "GetSparqlStream": "",
        "ListGremlinQueries": "",
        "ListLoaderJobs": "",
        "ListMLDataProcessingJobs": "",
        "ListMLEndpoints": "",
        "ListMLModelTrainingJobs": "",
        "ListMLModelTransformJobs": "",
        "ListOpenCypherQueries": "",
        "ManagePropertygraphStatistics": "",
        "ManageSparqlStatistics": "",
        "StartLoaderJob": [
            "source",
            "format",
            "s3BucketRegion",
            "iamRoleArn"
        ],
        "StartMLDataProcessingJob": [
            "inputDataS3Location",
            "processedDataS3Location"
        ],
        "StartMLModelTrainingJob": [
            "dataProcessingJobId",
            "trainModelS3Location"
        ],
        "StartMLModelTransformJob": [
            "modelTransformOutputS3Location"
        ]
    },
    "network-firewall": {
        "AssociateFirewallPolicy": [
            "FirewallPolicyArn"
        ],
        "AssociateSubnets": [
            "SubnetMappings"
        ],
        "CreateFirewall": [
            "FirewallName",
            "FirewallPolicyArn",
            "VpcId",
            "SubnetMappings"
        ],
        "CreateFirewallPolicy": [
            "FirewallPolicyName",
            "FirewallPolicy"
        ],
        "CreateRuleGroup": [
            "RuleGroupName",
            "Type",
            "Capacity"
        ],
        "CreateTLSInspectionConfiguration": [
            "TLSInspectionConfigurationName",
            "TLSInspectionConfiguration"
        ],
        "DeleteFirewall": "",
        "DeleteFirewallPolicy": "",
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteRuleGroup": "",
        "DeleteTLSInspectionConfiguration": "",
        "DescribeFirewall": "",
        "DescribeFirewallPolicy": "",
        "DescribeLoggingConfiguration": "",
        "DescribeResourcePolicy": [
            "ResourceArn"
        ],
        "DescribeRuleGroup": "",
        "DescribeRuleGroupMetadata": "",
        "DescribeTLSInspectionConfiguration": "",
        "DisassociateSubnets": [
            "SubnetIds"
        ],
        "ListFirewallPolicies": "",
        "ListFirewalls": "",
        "ListRuleGroups": "",
        "ListTLSInspectionConfigurations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "Policy"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateFirewallDeleteProtection": [
            "DeleteProtection"
        ],
        "UpdateFirewallDescription": "",
        "UpdateFirewallEncryptionConfiguration": "",
        "UpdateFirewallPolicy": [
            "UpdateToken",
            "FirewallPolicy"
        ],
        "UpdateFirewallPolicyChangeProtection": [
            "FirewallPolicyChangeProtection"
        ],
        "UpdateLoggingConfiguration": "",
        "UpdateRuleGroup": [
            "UpdateToken"
        ],
        "UpdateSubnetChangeProtection": [
            "SubnetChangeProtection"
        ],
        "UpdateTLSInspectionConfiguration": [
            "TLSInspectionConfiguration",
            "UpdateToken"
        ]
    },
    "networkmanager": {
        "AcceptAttachment": [
            "AttachmentId"
        ],
        "AssociateConnectPeer": [
            "GlobalNetworkId",
            "ConnectPeerId",
            "DeviceId"
        ],
        "AssociateCustomerGateway": [
            "CustomerGatewayArn",
            "GlobalNetworkId",
            "DeviceId"
        ],
        "AssociateLink": [
            "GlobalNetworkId",
            "DeviceId",
            "LinkId"
        ],
        "AssociateTransitGatewayConnectPeer": [
            "GlobalNetworkId",
            "TransitGatewayConnectPeerArn",
            "DeviceId"
        ],
        "CreateConnectAttachment": [
            "CoreNetworkId",
            "EdgeLocation",
            "TransportAttachmentId",
            "Options"
        ],
        "CreateConnectPeer": [
            "ConnectAttachmentId",
            "PeerAddress"
        ],
        "CreateConnection": [
            "GlobalNetworkId",
            "DeviceId",
            "ConnectedDeviceId"
        ],
        "CreateCoreNetwork": [
            "GlobalNetworkId"
        ],
        "CreateDevice": [
            "GlobalNetworkId"
        ],
        "CreateGlobalNetwork": "",
        "CreateLink": [
            "GlobalNetworkId",
            "Bandwidth",
            "SiteId"
        ],
        "CreateSite": [
            "GlobalNetworkId"
        ],
        "CreateSiteToSiteVpnAttachment": [
            "CoreNetworkId",
            "VpnConnectionArn"
        ],
        "CreateTransitGatewayPeering": [
            "CoreNetworkId",
            "TransitGatewayArn"
        ],
        "CreateTransitGatewayRouteTableAttachment": [
            "PeeringId",
            "TransitGatewayRouteTableArn"
        ],
        "CreateVpcAttachment": [
            "CoreNetworkId",
            "VpcArn",
            "SubnetArns"
        ],
        "DeleteAttachment": [
            "AttachmentId"
        ],
        "DeleteConnectPeer": [
            "ConnectPeerId"
        ],
        "DeleteConnection": [
            "GlobalNetworkId",
            "ConnectionId"
        ],
        "DeleteCoreNetwork": [
            "CoreNetworkId"
        ],
        "DeleteCoreNetworkPolicyVersion": [
            "CoreNetworkId",
            "PolicyVersionId"
        ],
        "DeleteDevice": [
            "GlobalNetworkId",
            "DeviceId"
        ],
        "DeleteGlobalNetwork": [
            "GlobalNetworkId"
        ],
        "DeleteLink": [
            "GlobalNetworkId",
            "LinkId"
        ],
        "DeletePeering": [
            "PeeringId"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteSite": [
            "GlobalNetworkId",
            "SiteId"
        ],
        "DeregisterTransitGateway": [
            "GlobalNetworkId",
            "TransitGatewayArn"
        ],
        "DescribeGlobalNetworks": "",
        "DisassociateConnectPeer": [
            "GlobalNetworkId",
            "ConnectPeerId"
        ],
        "DisassociateCustomerGateway": [
            "GlobalNetworkId",
            "CustomerGatewayArn"
        ],
        "DisassociateLink": [
            "GlobalNetworkId",
            "DeviceId",
            "LinkId"
        ],
        "DisassociateTransitGatewayConnectPeer": [
            "GlobalNetworkId",
            "TransitGatewayConnectPeerArn"
        ],
        "ExecuteCoreNetworkChangeSet": [
            "CoreNetworkId",
            "PolicyVersionId"
        ],
        "GetConnectAttachment": [
            "AttachmentId"
        ],
        "GetConnectPeer": [
            "ConnectPeerId"
        ],
        "GetConnectPeerAssociations": [
            "GlobalNetworkId"
        ],
        "GetConnections": [
            "GlobalNetworkId"
        ],
        "GetCoreNetwork": [
            "CoreNetworkId"
        ],
        "GetCoreNetworkChangeEvents": [
            "CoreNetworkId",
            "PolicyVersionId"
        ],
        "GetCoreNetworkChangeSet": [
            "CoreNetworkId",
            "PolicyVersionId"
        ],
        "GetCoreNetworkPolicy": [
            "CoreNetworkId"
        ],
        "GetCustomerGatewayAssociations": [
            "GlobalNetworkId"
        ],
        "GetDevices": [
            "GlobalNetworkId"
        ],
        "GetLinkAssociations": [
            "GlobalNetworkId"
        ],
        "GetLinks": [
            "GlobalNetworkId"
        ],
        "GetNetworkResourceCounts": [
            "GlobalNetworkId"
        ],
        "GetNetworkResourceRelationships": [
            "GlobalNetworkId"
        ],
        "GetNetworkResources": [
            "GlobalNetworkId"
        ],
        "GetNetworkRoutes": [
            "GlobalNetworkId",
            "RouteTableIdentifier"
        ],
        "GetNetworkTelemetry": [
            "GlobalNetworkId"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "GetRouteAnalysis": [
            "GlobalNetworkId",
            "RouteAnalysisId"
        ],
        "GetSiteToSiteVpnAttachment": [
            "AttachmentId"
        ],
        "GetSites": [
            "GlobalNetworkId"
        ],
        "GetTransitGatewayConnectPeerAssociations": [
            "GlobalNetworkId"
        ],
        "GetTransitGatewayPeering": [
            "PeeringId"
        ],
        "GetTransitGatewayRegistrations": [
            "GlobalNetworkId"
        ],
        "GetTransitGatewayRouteTableAttachment": [
            "AttachmentId"
        ],
        "GetVpcAttachment": [
            "AttachmentId"
        ],
        "ListAttachments": "",
        "ListConnectPeers": "",
        "ListCoreNetworkPolicyVersions": [
            "CoreNetworkId"
        ],
        "ListCoreNetworks": "",
        "ListOrganizationServiceAccessStatus": "",
        "ListPeerings": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutCoreNetworkPolicy": [
            "CoreNetworkId",
            "PolicyDocument"
        ],
        "PutResourcePolicy": [
            "PolicyDocument",
            "ResourceArn"
        ],
        "RegisterTransitGateway": [
            "GlobalNetworkId",
            "TransitGatewayArn"
        ],
        "RejectAttachment": [
            "AttachmentId"
        ],
        "RestoreCoreNetworkPolicyVersion": [
            "CoreNetworkId",
            "PolicyVersionId"
        ],
        "StartOrganizationServiceAccessUpdate": [
            "Action"
        ],
        "StartRouteAnalysis": [
            "GlobalNetworkId",
            "Source",
            "Destination"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateConnection": [
            "GlobalNetworkId",
            "ConnectionId"
        ],
        "UpdateCoreNetwork": [
            "CoreNetworkId"
        ],
        "UpdateDevice": [
            "GlobalNetworkId",
            "DeviceId"
        ],
        "UpdateGlobalNetwork": [
            "GlobalNetworkId"
        ],
        "UpdateLink": [
            "GlobalNetworkId",
            "LinkId"
        ],
        "UpdateNetworkResourceMetadata": [
            "GlobalNetworkId",
            "ResourceArn",
            "Metadata"
        ],
        "UpdateSite": [
            "GlobalNetworkId",
            "SiteId"
        ],
        "UpdateVpcAttachment": [
            "AttachmentId"
        ]
    },
    "networkmonitor": {
        "CreateMonitor": [
            "monitorName"
        ],
        "CreateProbe": [
            "monitorName",
            "probe"
        ],
        "DeleteMonitor": [
            "monitorName"
        ],
        "DeleteProbe": [
            "monitorName",
            "probeId"
        ],
        "GetMonitor": [
            "monitorName"
        ],
        "GetProbe": [
            "monitorName",
            "probeId"
        ],
        "ListMonitors": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateMonitor": [
            "monitorName",
            "aggregationPeriod"
        ],
        "UpdateProbe": [
            "monitorName",
            "probeId"
        ]
    },
    "nimble": {
        "AcceptEulas": [
            "studioId"
        ],
        "CreateLaunchProfile": [
            "ec2SubnetIds",
            "launchProfileProtocolVersions",
            "name",
            "streamConfiguration",
            "studioComponentIds",
            "studioId"
        ],
        "CreateStreamingImage": [
            "ec2ImageId",
            "name",
            "studioId"
        ],
        "CreateStreamingSession": [
            "launchProfileId",
            "studioId"
        ],
        "CreateStreamingSessionStream": [
            "sessionId",
            "studioId"
        ],
        "CreateStudio": [
            "adminRoleArn",
            "displayName",
            "studioName",
            "userRoleArn"
        ],
        "CreateStudioComponent": [
            "name",
            "studioId",
            "type"
        ],
        "DeleteLaunchProfile": [
            "launchProfileId",
            "studioId"
        ],
        "DeleteLaunchProfileMember": [
            "launchProfileId",
            "principalId",
            "studioId"
        ],
        "DeleteStreamingImage": [
            "streamingImageId",
            "studioId"
        ],
        "DeleteStreamingSession": [
            "sessionId",
            "studioId"
        ],
        "DeleteStudio": [
            "studioId"
        ],
        "DeleteStudioComponent": [
            "studioComponentId",
            "studioId"
        ],
        "DeleteStudioMember": [
            "principalId",
            "studioId"
        ],
        "GetEula": [
            "eulaId"
        ],
        "GetLaunchProfile": [
            "launchProfileId",
            "studioId"
        ],
        "GetLaunchProfileDetails": [
            "launchProfileId",
            "studioId"
        ],
        "GetLaunchProfileInitialization": [
            "launchProfileId",
            "launchProfileProtocolVersions",
            "launchPurpose",
            "platform",
            "studioId"
        ],
        "GetLaunchProfileMember": [
            "launchProfileId",
            "principalId",
            "studioId"
        ],
        "GetStreamingImage": [
            "streamingImageId",
            "studioId"
        ],
        "GetStreamingSession": [
            "sessionId",
            "studioId"
        ],
        "GetStreamingSessionBackup": [
            "backupId",
            "studioId"
        ],
        "GetStreamingSessionStream": [
            "sessionId",
            "streamId",
            "studioId"
        ],
        "GetStudio": [
            "studioId"
        ],
        "GetStudioComponent": [
            "studioComponentId",
            "studioId"
        ],
        "GetStudioMember": [
            "principalId",
            "studioId"
        ],
        "ListEulaAcceptances": [
            "studioId"
        ],
        "ListEulas": "",
        "ListLaunchProfileMembers": [
            "launchProfileId",
            "studioId"
        ],
        "ListLaunchProfiles": [
            "studioId"
        ],
        "ListStreamingImages": [
            "studioId"
        ],
        "ListStreamingSessionBackups": [
            "studioId"
        ],
        "ListStreamingSessions": [
            "studioId"
        ],
        "ListStudioComponents": [
            "studioId"
        ],
        "ListStudioMembers": [
            "studioId"
        ],
        "ListStudios": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutLaunchProfileMembers": [
            "identityStoreId",
            "launchProfileId",
            "members",
            "studioId"
        ],
        "PutStudioMembers": [
            "identityStoreId",
            "members",
            "studioId"
        ],
        "StartStreamingSession": [
            "sessionId",
            "studioId"
        ],
        "StartStudioSSOConfigurationRepair": [
            "studioId"
        ],
        "StopStreamingSession": [
            "sessionId",
            "studioId"
        ],
        "TagResource": [
            "resourceArn"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateLaunchProfile": [
            "launchProfileId",
            "studioId"
        ],
        "UpdateLaunchProfileMember": [
            "launchProfileId",
            "persona",
            "principalId",
            "studioId"
        ],
        "UpdateStreamingImage": [
            "streamingImageId",
            "studioId"
        ],
        "UpdateStudio": [
            "studioId"
        ],
        "UpdateStudioComponent": [
            "studioComponentId",
            "studioId"
        ]
    },
    "oam": {
        "CreateLink": [
            "LabelTemplate",
            "ResourceTypes",
            "SinkIdentifier"
        ],
        "CreateSink": [
            "Name"
        ],
        "DeleteLink": [
            "Identifier"
        ],
        "DeleteSink": [
            "Identifier"
        ],
        "GetLink": [
            "Identifier"
        ],
        "GetSink": [
            "Identifier"
        ],
        "GetSinkPolicy": [
            "SinkIdentifier"
        ],
        "ListAttachedLinks": [
            "SinkIdentifier"
        ],
        "ListLinks": "",
        "ListSinks": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutSinkPolicy": [
            "SinkIdentifier",
            "Policy"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateLink": [
            "Identifier",
            "ResourceTypes"
        ]
    },
    "omics": {
        "AbortMultipartReadSetUpload": [
            "sequenceStoreId",
            "uploadId"
        ],
        "AcceptShare": [
            "shareId"
        ],
        "BatchDeleteReadSet": [
            "ids",
            "sequenceStoreId"
        ],
        "CancelAnnotationImportJob": [
            "jobId"
        ],
        "CancelRun": [
            "id"
        ],
        "CancelVariantImportJob": [
            "jobId"
        ],
        "CompleteMultipartReadSetUpload": [
            "sequenceStoreId",
            "uploadId",
            "parts"
        ],
        "CreateAnnotationStore": [
            "storeFormat"
        ],
        "CreateAnnotationStoreVersion": [
            "name",
            "versionName"
        ],
        "CreateMultipartReadSetUpload": [
            "sequenceStoreId",
            "sourceFileType",
            "subjectId",
            "sampleId",
            "name"
        ],
        "CreateReferenceStore": [
            "name"
        ],
        "CreateRunGroup": [
            "requestId"
        ],
        "CreateSequenceStore": [
            "name"
        ],
        "CreateShare": [
            "resourceArn",
            "principalSubscriber"
        ],
        "CreateVariantStore": [
            "reference"
        ],
        "CreateWorkflow": [
            "requestId"
        ],
        "DeleteAnnotationStore": [
            "name"
        ],
        "DeleteAnnotationStoreVersions": [
            "name",
            "versions"
        ],
        "DeleteReference": [
            "id",
            "referenceStoreId"
        ],
        "DeleteReferenceStore": [
            "id"
        ],
        "DeleteRun": [
            "id"
        ],
        "DeleteRunGroup": [
            "id"
        ],
        "DeleteSequenceStore": [
            "id"
        ],
        "DeleteShare": [
            "shareId"
        ],
        "DeleteVariantStore": [
            "name"
        ],
        "DeleteWorkflow": [
            "id"
        ],
        "GetAnnotationImportJob": [
            "jobId"
        ],
        "GetAnnotationStore": [
            "name"
        ],
        "GetAnnotationStoreVersion": [
            "name",
            "versionName"
        ],
        "GetReadSet": [
            "id",
            "sequenceStoreId",
            "partNumber"
        ],
        "GetReadSetActivationJob": [
            "id",
            "sequenceStoreId"
        ],
        "GetReadSetExportJob": [
            "sequenceStoreId",
            "id"
        ],
        "GetReadSetImportJob": [
            "id",
            "sequenceStoreId"
        ],
        "GetReadSetMetadata": [
            "id",
            "sequenceStoreId"
        ],
        "GetReference": [
            "id",
            "referenceStoreId",
            "partNumber"
        ],
        "GetReferenceImportJob": [
            "id",
            "referenceStoreId"
        ],
        "GetReferenceMetadata": [
            "id",
            "referenceStoreId"
        ],
        "GetReferenceStore": [
            "id"
        ],
        "GetRun": [
            "id"
        ],
        "GetRunGroup": [
            "id"
        ],
        "GetRunTask": [
            "id",
            "taskId"
        ],
        "GetSequenceStore": [
            "id"
        ],
        "GetShare": [
            "shareId"
        ],
        "GetVariantImportJob": [
            "jobId"
        ],
        "GetVariantStore": [
            "name"
        ],
        "GetWorkflow": [
            "id"
        ],
        "ListAnnotationImportJobs": "",
        "ListAnnotationStoreVersions": [
            "name"
        ],
        "ListAnnotationStores": "",
        "ListMultipartReadSetUploads": [
            "sequenceStoreId"
        ],
        "ListReadSetActivationJobs": [
            "sequenceStoreId"
        ],
        "ListReadSetExportJobs": [
            "sequenceStoreId"
        ],
        "ListReadSetImportJobs": [
            "sequenceStoreId"
        ],
        "ListReadSetUploadParts": [
            "sequenceStoreId",
            "uploadId",
            "partSource"
        ],
        "ListReadSets": [
            "sequenceStoreId"
        ],
        "ListReferenceImportJobs": [
            "referenceStoreId"
        ],
        "ListReferenceStores": "",
        "ListReferences": [
            "referenceStoreId"
        ],
        "ListRunGroups": "",
        "ListRunTasks": [
            "id"
        ],
        "ListRuns": "",
        "ListSequenceStores": "",
        "ListShares": [
            "resourceOwner"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListVariantImportJobs": "",
        "ListVariantStores": "",
        "ListWorkflows": "",
        "StartAnnotationImportJob": [
            "destinationName",
            "roleArn",
            "items"
        ],
        "StartReadSetActivationJob": [
            "sequenceStoreId",
            "sources"
        ],
        "StartReadSetExportJob": [
            "sequenceStoreId",
            "destination",
            "roleArn",
            "sources"
        ],
        "StartReadSetImportJob": [
            "sequenceStoreId",
            "roleArn",
            "sources"
        ],
        "StartReferenceImportJob": [
            "referenceStoreId",
            "roleArn",
            "sources"
        ],
        "StartRun": [
            "roleArn",
            "requestId"
        ],
        "StartVariantImportJob": [
            "destinationName",
            "roleArn",
            "items"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAnnotationStore": [
            "name"
        ],
        "UpdateAnnotationStoreVersion": [
            "name",
            "versionName"
        ],
        "UpdateRunGroup": [
            "id"
        ],
        "UpdateVariantStore": [
            "name"
        ],
        "UpdateWorkflow": [
            "id"
        ],
        "UploadReadSetPart": [
            "sequenceStoreId",
            "uploadId",
            "partSource",
            "partNumber",
            "payload"
        ]
    },
    "opensearch": {
        "AcceptInboundConnection": [
            "ConnectionId"
        ],
        "AddDataSource": [
            "DomainName",
            "Name",
            "DataSourceType"
        ],
        "AddTags": [
            "ARN",
            "TagList"
        ],
        "AssociatePackage": [
            "PackageID",
            "DomainName"
        ],
        "AuthorizeVpcEndpointAccess": [
            "DomainName",
            "Account"
        ],
        "CancelDomainConfigChange": [
            "DomainName"
        ],
        "CancelServiceSoftwareUpdate": [
            "DomainName"
        ],
        "CreateDomain": [
            "DomainName"
        ],
        "CreateOutboundConnection": [
            "LocalDomainInfo",
            "RemoteDomainInfo",
            "ConnectionAlias"
        ],
        "CreatePackage": [
            "PackageName",
            "PackageType",
            "PackageSource"
        ],
        "CreateVpcEndpoint": [
            "DomainArn",
            "VpcOptions"
        ],
        "DeleteDataSource": [
            "DomainName",
            "Name"
        ],
        "DeleteDomain": [
            "DomainName"
        ],
        "DeleteInboundConnection": [
            "ConnectionId"
        ],
        "DeleteOutboundConnection": [
            "ConnectionId"
        ],
        "DeletePackage": [
            "PackageID"
        ],
        "DeleteVpcEndpoint": [
            "VpcEndpointId"
        ],
        "DescribeDomain": [
            "DomainName"
        ],
        "DescribeDomainAutoTunes": [
            "DomainName"
        ],
        "DescribeDomainChangeProgress": [
            "DomainName"
        ],
        "DescribeDomainConfig": [
            "DomainName"
        ],
        "DescribeDomainHealth": [
            "DomainName"
        ],
        "DescribeDomainNodes": [
            "DomainName"
        ],
        "DescribeDomains": [
            "DomainNames"
        ],
        "DescribeDryRunProgress": [
            "DomainName"
        ],
        "DescribeInboundConnections": "",
        "DescribeInstanceTypeLimits": [
            "InstanceType",
            "EngineVersion"
        ],
        "DescribeOutboundConnections": "",
        "DescribePackages": "",
        "DescribeReservedInstanceOfferings": "",
        "DescribeReservedInstances": "",
        "DescribeVpcEndpoints": [
            "VpcEndpointIds"
        ],
        "DissociatePackage": [
            "PackageID",
            "DomainName"
        ],
        "GetCompatibleVersions": "",
        "GetDataSource": [
            "DomainName",
            "Name"
        ],
        "GetDomainMaintenanceStatus": [
            "DomainName",
            "MaintenanceId"
        ],
        "GetPackageVersionHistory": [
            "PackageID"
        ],
        "GetUpgradeHistory": [
            "DomainName"
        ],
        "GetUpgradeStatus": [
            "DomainName"
        ],
        "ListDataSources": [
            "DomainName"
        ],
        "ListDomainMaintenances": [
            "DomainName"
        ],
        "ListDomainNames": "",
        "ListDomainsForPackage": [
            "PackageID"
        ],
        "ListInstanceTypeDetails": [
            "EngineVersion"
        ],
        "ListPackagesForDomain": [
            "DomainName"
        ],
        "ListScheduledActions": [
            "DomainName"
        ],
        "ListTags": [
            "ARN"
        ],
        "ListVersions": "",
        "ListVpcEndpointAccess": [
            "DomainName"
        ],
        "ListVpcEndpoints": "",
        "ListVpcEndpointsForDomain": [
            "DomainName"
        ],
        "PurchaseReservedInstanceOffering": [
            "ReservedInstanceOfferingId",
            "ReservationName"
        ],
        "RejectInboundConnection": [
            "ConnectionId"
        ],
        "RemoveTags": [
            "ARN",
            "TagKeys"
        ],
        "RevokeVpcEndpointAccess": [
            "DomainName",
            "Account"
        ],
        "StartDomainMaintenance": [
            "DomainName",
            "Action"
        ],
        "StartServiceSoftwareUpdate": [
            "DomainName"
        ],
        "UpdateDataSource": [
            "DomainName",
            "Name",
            "DataSourceType"
        ],
        "UpdateDomainConfig": [
            "DomainName"
        ],
        "UpdatePackage": [
            "PackageID",
            "PackageSource"
        ],
        "UpdateScheduledAction": [
            "DomainName",
            "ActionID",
            "ActionType",
            "ScheduleAt"
        ],
        "UpdateVpcEndpoint": [
            "VpcEndpointId",
            "VpcOptions"
        ],
        "UpgradeDomain": [
            "DomainName",
            "TargetVersion"
        ]
    },
    "opensearchserverless": {
        "BatchGetCollection": "",
        "BatchGetEffectiveLifecyclePolicy": [
            "resourceIdentifiers"
        ],
        "BatchGetLifecyclePolicy": [
            "identifiers"
        ],
        "BatchGetVpcEndpoint": [
            "ids"
        ],
        "CreateAccessPolicy": [
            "name",
            "policy",
            "type"
        ],
        "CreateCollection": [
            "name"
        ],
        "CreateLifecyclePolicy": [
            "name",
            "policy",
            "type"
        ],
        "CreateSecurityConfig": [
            "name",
            "type"
        ],
        "CreateSecurityPolicy": [
            "name",
            "policy",
            "type"
        ],
        "CreateVpcEndpoint": [
            "name",
            "subnetIds",
            "vpcId"
        ],
        "DeleteAccessPolicy": [
            "name",
            "type"
        ],
        "DeleteCollection": [
            "id"
        ],
        "DeleteLifecyclePolicy": [
            "name",
            "type"
        ],
        "DeleteSecurityConfig": [
            "id"
        ],
        "DeleteSecurityPolicy": [
            "name",
            "type"
        ],
        "DeleteVpcEndpoint": [
            "id"
        ],
        "GetAccessPolicy": [
            "name",
            "type"
        ],
        "GetAccountSettings": "",
        "GetPoliciesStats": "",
        "GetSecurityConfig": [
            "id"
        ],
        "GetSecurityPolicy": [
            "name",
            "type"
        ],
        "ListAccessPolicies": [
            "type"
        ],
        "ListCollections": "",
        "ListLifecyclePolicies": [
            "type"
        ],
        "ListSecurityConfigs": [
            "type"
        ],
        "ListSecurityPolicies": [
            "type"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListVpcEndpoints": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccessPolicy": [
            "name",
            "policyVersion",
            "type"
        ],
        "UpdateAccountSettings": "",
        "UpdateCollection": [
            "id"
        ],
        "UpdateLifecyclePolicy": [
            "name",
            "policyVersion",
            "type"
        ],
        "UpdateSecurityConfig": [
            "configVersion",
            "id"
        ],
        "UpdateSecurityPolicy": [
            "name",
            "policyVersion",
            "type"
        ],
        "UpdateVpcEndpoint": [
            "id"
        ]
    },
    "opsworks": {
        "AssignInstance": [
            "InstanceId",
            "LayerIds"
        ],
        "AssignVolume": [
            "VolumeId"
        ],
        "AssociateElasticIp": [
            "ElasticIp"
        ],
        "AttachElasticLoadBalancer": [
            "ElasticLoadBalancerName",
            "LayerId"
        ],
        "CloneStack": [
            "SourceStackId",
            "ServiceRoleArn"
        ],
        "CreateApp": [
            "StackId",
            "Name",
            "Type"
        ],
        "CreateDeployment": [
            "StackId",
            "Command"
        ],
        "CreateInstance": [
            "StackId",
            "LayerIds",
            "InstanceType"
        ],
        "CreateLayer": [
            "StackId",
            "Type",
            "Name",
            "Shortname"
        ],
        "CreateStack": [
            "Name",
            "Region",
            "ServiceRoleArn",
            "DefaultInstanceProfileArn"
        ],
        "CreateUserProfile": [
            "IamUserArn"
        ],
        "DeleteApp": [
            "AppId"
        ],
        "DeleteInstance": [
            "InstanceId"
        ],
        "DeleteLayer": [
            "LayerId"
        ],
        "DeleteStack": [
            "StackId"
        ],
        "DeleteUserProfile": [
            "IamUserArn"
        ],
        "DeregisterEcsCluster": [
            "EcsClusterArn"
        ],
        "DeregisterElasticIp": [
            "ElasticIp"
        ],
        "DeregisterInstance": [
            "InstanceId"
        ],
        "DeregisterRdsDbInstance": [
            "RdsDbInstanceArn"
        ],
        "DeregisterVolume": [
            "VolumeId"
        ],
        "DescribeAgentVersions": "",
        "DescribeApps": "",
        "DescribeCommands": "",
        "DescribeDeployments": "",
        "DescribeEcsClusters": "",
        "DescribeElasticIps": "",
        "DescribeElasticLoadBalancers": "",
        "DescribeInstances": "",
        "DescribeLayers": "",
        "DescribeLoadBasedAutoScaling": [
            "LayerIds"
        ],
        "DescribeMyUserProfile": "",
        "DescribeOperatingSystems": "",
        "DescribePermissions": "",
        "DescribeRaidArrays": "",
        "DescribeRdsDbInstances": [
            "StackId"
        ],
        "DescribeServiceErrors": "",
        "DescribeStackProvisioningParameters": [
            "StackId"
        ],
        "DescribeStackSummary": [
            "StackId"
        ],
        "DescribeStacks": "",
        "DescribeTimeBasedAutoScaling": [
            "InstanceIds"
        ],
        "DescribeUserProfiles": "",
        "DescribeVolumes": "",
        "DetachElasticLoadBalancer": [
            "ElasticLoadBalancerName",
            "LayerId"
        ],
        "DisassociateElasticIp": [
            "ElasticIp"
        ],
        "GetHostnameSuggestion": [
            "LayerId"
        ],
        "GrantAccess": [
            "InstanceId"
        ],
        "ListTags": [
            "ResourceArn"
        ],
        "RebootInstance": [
            "InstanceId"
        ],
        "RegisterEcsCluster": [
            "EcsClusterArn",
            "StackId"
        ],
        "RegisterElasticIp": [
            "ElasticIp",
            "StackId"
        ],
        "RegisterInstance": [
            "StackId"
        ],
        "RegisterRdsDbInstance": [
            "StackId",
            "RdsDbInstanceArn",
            "DbUser",
            "DbPassword"
        ],
        "RegisterVolume": [
            "StackId"
        ],
        "SetLoadBasedAutoScaling": [
            "LayerId"
        ],
        "SetPermission": [
            "StackId",
            "IamUserArn"
        ],
        "SetTimeBasedAutoScaling": [
            "InstanceId"
        ],
        "StartInstance": [
            "InstanceId"
        ],
        "StartStack": [
            "StackId"
        ],
        "StopInstance": [
            "InstanceId"
        ],
        "StopStack": [
            "StackId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UnassignInstance": [
            "InstanceId"
        ],
        "UnassignVolume": [
            "VolumeId"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateApp": [
            "AppId"
        ],
        "UpdateElasticIp": [
            "ElasticIp"
        ],
        "UpdateInstance": [
            "InstanceId"
        ],
        "UpdateLayer": [
            "LayerId"
        ],
        "UpdateMyUserProfile": "",
        "UpdateRdsDbInstance": [
            "RdsDbInstanceArn"
        ],
        "UpdateStack": [
            "StackId"
        ],
        "UpdateUserProfile": [
            "IamUserArn"
        ],
        "UpdateVolume": [
            "VolumeId"
        ]
    },
    "opsworkscm": {
        "AssociateNode": [
            "ServerName",
            "NodeName",
            "EngineAttributes"
        ],
        "CreateBackup": [
            "ServerName"
        ],
        "CreateServer": [
            "Engine",
            "ServerName",
            "InstanceProfileArn",
            "InstanceType",
            "ServiceRoleArn"
        ],
        "DeleteBackup": [
            "BackupId"
        ],
        "DeleteServer": [
            "ServerName"
        ],
        "DescribeAccountAttributes": "",
        "DescribeBackups": "",
        "DescribeEvents": [
            "ServerName"
        ],
        "DescribeNodeAssociationStatus": [
            "NodeAssociationStatusToken",
            "ServerName"
        ],
        "DescribeServers": "",
        "DisassociateNode": [
            "ServerName",
            "NodeName"
        ],
        "ExportServerEngineAttribute": [
            "ExportAttributeName",
            "ServerName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RestoreServer": [
            "BackupId",
            "ServerName"
        ],
        "StartMaintenance": [
            "ServerName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateServer": [
            "ServerName"
        ],
        "UpdateServerEngineAttributes": [
            "ServerName",
            "AttributeName"
        ]
    },
    "organizations": {
        "AcceptHandshake": [
            "HandshakeId"
        ],
        "AttachPolicy": [
            "PolicyId",
            "TargetId"
        ],
        "CancelHandshake": [
            "HandshakeId"
        ],
        "CloseAccount": [
            "AccountId"
        ],
        "CreateAccount": [
            "Email",
            "AccountName"
        ],
        "CreateGovCloudAccount": [
            "Email",
            "AccountName"
        ],
        "CreateOrganization": "",
        "CreateOrganizationalUnit": [
            "ParentId",
            "Name"
        ],
        "CreatePolicy": [
            "Content",
            "Description",
            "Name",
            "Type"
        ],
        "DeclineHandshake": [
            "HandshakeId"
        ],
        "DeleteOrganization": "",
        "DeleteOrganizationalUnit": [
            "OrganizationalUnitId"
        ],
        "DeletePolicy": [
            "PolicyId"
        ],
        "DeleteResourcePolicy": "",
        "DeregisterDelegatedAdministrator": [
            "AccountId",
            "ServicePrincipal"
        ],
        "DescribeAccount": [
            "AccountId"
        ],
        "DescribeCreateAccountStatus": [
            "CreateAccountRequestId"
        ],
        "DescribeEffectivePolicy": [
            "PolicyType"
        ],
        "DescribeHandshake": [
            "HandshakeId"
        ],
        "DescribeOrganization": "",
        "DescribeOrganizationalUnit": [
            "OrganizationalUnitId"
        ],
        "DescribePolicy": [
            "PolicyId"
        ],
        "DescribeResourcePolicy": "",
        "DetachPolicy": [
            "PolicyId",
            "TargetId"
        ],
        "DisableAWSServiceAccess": [
            "ServicePrincipal"
        ],
        "DisablePolicyType": [
            "RootId",
            "PolicyType"
        ],
        "EnableAWSServiceAccess": [
            "ServicePrincipal"
        ],
        "EnableAllFeatures": "",
        "EnablePolicyType": [
            "RootId",
            "PolicyType"
        ],
        "InviteAccountToOrganization": [
            "Target"
        ],
        "LeaveOrganization": "",
        "ListAWSServiceAccessForOrganization": "",
        "ListAccounts": "",
        "ListAccountsForParent": [
            "ParentId"
        ],
        "ListChildren": [
            "ParentId",
            "ChildType"
        ],
        "ListCreateAccountStatus": "",
        "ListDelegatedAdministrators": "",
        "ListDelegatedServicesForAccount": [
            "AccountId"
        ],
        "ListHandshakesForAccount": "",
        "ListHandshakesForOrganization": "",
        "ListOrganizationalUnitsForParent": [
            "ParentId"
        ],
        "ListParents": [
            "ChildId"
        ],
        "ListPolicies": [
            "Filter"
        ],
        "ListPoliciesForTarget": [
            "TargetId",
            "Filter"
        ],
        "ListRoots": "",
        "ListTagsForResource": [
            "ResourceId"
        ],
        "ListTargetsForPolicy": [
            "PolicyId"
        ],
        "MoveAccount": [
            "AccountId",
            "SourceParentId",
            "DestinationParentId"
        ],
        "PutResourcePolicy": [
            "Content"
        ],
        "RegisterDelegatedAdministrator": [
            "AccountId",
            "ServicePrincipal"
        ],
        "RemoveAccountFromOrganization": [
            "AccountId"
        ],
        "TagResource": [
            "ResourceId",
            "Tags"
        ],
        "UntagResource": [
            "ResourceId",
            "TagKeys"
        ],
        "UpdateOrganizationalUnit": [
            "OrganizationalUnitId"
        ],
        "UpdatePolicy": [
            "PolicyId"
        ]
    },
    "osis": {
        "CreatePipeline": [
            "PipelineName",
            "MinUnits",
            "MaxUnits",
            "PipelineConfigurationBody"
        ],
        "DeletePipeline": [
            "PipelineName"
        ],
        "GetPipeline": [
            "PipelineName"
        ],
        "GetPipelineBlueprint": [
            "BlueprintName"
        ],
        "GetPipelineChangeProgress": [
            "PipelineName"
        ],
        "ListPipelineBlueprints": "",
        "ListPipelines": "",
        "ListTagsForResource": [
            "Arn"
        ],
        "StartPipeline": [
            "PipelineName"
        ],
        "StopPipeline": [
            "PipelineName"
        ],
        "TagResource": [
            "Arn",
            "Tags"
        ],
        "UntagResource": [
            "Arn",
            "TagKeys"
        ],
        "UpdatePipeline": [
            "PipelineName"
        ],
        "ValidatePipeline": [
            "PipelineConfigurationBody"
        ]
    },
    "outposts": {
        "CancelOrder": [
            "OrderId"
        ],
        "CreateOrder": [
            "OutpostIdentifier",
            "LineItems",
            "PaymentOption"
        ],
        "CreateOutpost": [
            "Name",
            "SiteId"
        ],
        "CreateSite": [
            "Name"
        ],
        "DeleteOutpost": [
            "OutpostId"
        ],
        "DeleteSite": [
            "SiteId"
        ],
        "GetCatalogItem": [
            "CatalogItemId"
        ],
        "GetConnection": [
            "ConnectionId"
        ],
        "GetOrder": [
            "OrderId"
        ],
        "GetOutpost": [
            "OutpostId"
        ],
        "GetOutpostInstanceTypes": [
            "OutpostId"
        ],
        "GetSite": [
            "SiteId"
        ],
        "GetSiteAddress": [
            "SiteId",
            "AddressType"
        ],
        "ListAssets": [
            "OutpostIdentifier"
        ],
        "ListCatalogItems": "",
        "ListOrders": "",
        "ListOutposts": "",
        "ListSites": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartConnection": [
            "AssetId",
            "ClientPublicKey",
            "NetworkInterfaceDeviceIndex"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateOutpost": [
            "OutpostId"
        ],
        "UpdateSite": [
            "SiteId"
        ],
        "UpdateSiteAddress": [
            "SiteId",
            "AddressType",
            "Address"
        ],
        "UpdateSiteRackPhysicalProperties": [
            "SiteId"
        ]
    },
    "panorama": {
        "CreateApplicationInstance": [
            "DefaultRuntimeContextDevice",
            "ManifestPayload"
        ],
        "CreateJobForDevices": [
            "DeviceIds",
            "JobType"
        ],
        "CreateNodeFromTemplateJob": [
            "NodeName",
            "OutputPackageName",
            "OutputPackageVersion",
            "TemplateParameters",
            "TemplateType"
        ],
        "CreatePackage": [
            "PackageName"
        ],
        "CreatePackageImportJob": [
            "ClientToken",
            "InputConfig",
            "JobType",
            "OutputConfig"
        ],
        "DeleteDevice": [
            "DeviceId"
        ],
        "DeletePackage": [
            "PackageId"
        ],
        "DeregisterPackageVersion": [
            "PackageId",
            "PackageVersion",
            "PatchVersion"
        ],
        "DescribeApplicationInstance": [
            "ApplicationInstanceId"
        ],
        "DescribeApplicationInstanceDetails": [
            "ApplicationInstanceId"
        ],
        "DescribeDevice": [
            "DeviceId"
        ],
        "DescribeDeviceJob": [
            "JobId"
        ],
        "DescribeNode": [
            "NodeId"
        ],
        "DescribeNodeFromTemplateJob": [
            "JobId"
        ],
        "DescribePackage": [
            "PackageId"
        ],
        "DescribePackageImportJob": [
            "JobId"
        ],
        "DescribePackageVersion": [
            "PackageId",
            "PackageVersion"
        ],
        "ListApplicationInstanceDependencies": [
            "ApplicationInstanceId"
        ],
        "ListApplicationInstanceNodeInstances": [
            "ApplicationInstanceId"
        ],
        "ListApplicationInstances": "",
        "ListDevices": "",
        "ListDevicesJobs": "",
        "ListNodeFromTemplateJobs": "",
        "ListNodes": "",
        "ListPackageImportJobs": "",
        "ListPackages": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ProvisionDevice": [
            "Name"
        ],
        "RegisterPackageVersion": [
            "PackageId",
            "PackageVersion",
            "PatchVersion"
        ],
        "RemoveApplicationInstance": [
            "ApplicationInstanceId"
        ],
        "SignalApplicationInstanceNodeInstances": [
            "ApplicationInstanceId",
            "NodeSignals"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDeviceMetadata": [
            "DeviceId"
        ]
    },
    "payment-cryptography": {
        "CreateAlias": [
            "AliasName"
        ],
        "CreateKey": [
            "Exportable",
            "KeyAttributes"
        ],
        "DeleteAlias": [
            "AliasName"
        ],
        "DeleteKey": [
            "KeyIdentifier"
        ],
        "ExportKey": [
            "ExportKeyIdentifier",
            "KeyMaterial"
        ],
        "GetAlias": [
            "AliasName"
        ],
        "GetKey": [
            "KeyIdentifier"
        ],
        "GetParametersForExport": [
            "KeyMaterialType",
            "SigningKeyAlgorithm"
        ],
        "GetParametersForImport": [
            "KeyMaterialType",
            "WrappingKeyAlgorithm"
        ],
        "GetPublicKeyCertificate": [
            "KeyIdentifier"
        ],
        "ImportKey": [
            "KeyMaterial"
        ],
        "ListAliases": "",
        "ListKeys": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "RestoreKey": [
            "KeyIdentifier"
        ],
        "StartKeyUsage": [
            "KeyIdentifier"
        ],
        "StopKeyUsage": [
            "KeyIdentifier"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAlias": [
            "AliasName"
        ]
    },
    "payment-cryptography-data": {
        "DecryptData": [
            "CipherText",
            "DecryptionAttributes",
            "KeyIdentifier"
        ],
        "EncryptData": [
            "EncryptionAttributes",
            "KeyIdentifier",
            "PlainText"
        ],
        "GenerateCardValidationData": [
            "GenerationAttributes",
            "KeyIdentifier",
            "PrimaryAccountNumber"
        ],
        "GenerateMac": [
            "GenerationAttributes",
            "KeyIdentifier",
            "MessageData"
        ],
        "GeneratePinData": [
            "EncryptionKeyIdentifier",
            "GenerationAttributes",
            "GenerationKeyIdentifier",
            "PinBlockFormat",
            "PrimaryAccountNumber"
        ],
        "ReEncryptData": [
            "CipherText",
            "IncomingEncryptionAttributes",
            "IncomingKeyIdentifier",
            "OutgoingEncryptionAttributes",
            "OutgoingKeyIdentifier"
        ],
        "TranslatePinData": [
            "EncryptedPinBlock",
            "IncomingKeyIdentifier",
            "IncomingTranslationAttributes",
            "OutgoingKeyIdentifier",
            "OutgoingTranslationAttributes"
        ],
        "VerifyAuthRequestCryptogram": [
            "AuthRequestCryptogram",
            "KeyIdentifier",
            "MajorKeyDerivationMode",
            "SessionKeyDerivationAttributes",
            "TransactionData"
        ],
        "VerifyCardValidationData": [
            "KeyIdentifier",
            "PrimaryAccountNumber",
            "ValidationData",
            "VerificationAttributes"
        ],
        "VerifyMac": [
            "KeyIdentifier",
            "Mac",
            "MessageData",
            "VerificationAttributes"
        ],
        "VerifyPinData": [
            "EncryptedPinBlock",
            "EncryptionKeyIdentifier",
            "PinBlockFormat",
            "PrimaryAccountNumber",
            "VerificationAttributes",
            "VerificationKeyIdentifier"
        ]
    },
    "pca-connector-ad": {
        "CreateConnector": [
            "CertificateAuthorityArn",
            "DirectoryId",
            "VpcInformation"
        ],
        "CreateDirectoryRegistration": [
            "DirectoryId"
        ],
        "CreateServicePrincipalName": [
            "ConnectorArn",
            "DirectoryRegistrationArn"
        ],
        "CreateTemplate": [
            "ConnectorArn",
            "Definition",
            "Name"
        ],
        "CreateTemplateGroupAccessControlEntry": [
            "AccessRights",
            "GroupDisplayName",
            "GroupSecurityIdentifier",
            "TemplateArn"
        ],
        "DeleteConnector": [
            "ConnectorArn"
        ],
        "DeleteDirectoryRegistration": [
            "DirectoryRegistrationArn"
        ],
        "DeleteServicePrincipalName": [
            "ConnectorArn",
            "DirectoryRegistrationArn"
        ],
        "DeleteTemplate": [
            "TemplateArn"
        ],
        "DeleteTemplateGroupAccessControlEntry": [
            "GroupSecurityIdentifier",
            "TemplateArn"
        ],
        "GetConnector": [
            "ConnectorArn"
        ],
        "GetDirectoryRegistration": [
            "DirectoryRegistrationArn"
        ],
        "GetServicePrincipalName": [
            "ConnectorArn",
            "DirectoryRegistrationArn"
        ],
        "GetTemplate": [
            "TemplateArn"
        ],
        "GetTemplateGroupAccessControlEntry": [
            "GroupSecurityIdentifier",
            "TemplateArn"
        ],
        "ListConnectors": "",
        "ListDirectoryRegistrations": "",
        "ListServicePrincipalNames": [
            "DirectoryRegistrationArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTemplateGroupAccessControlEntries": [
            "TemplateArn"
        ],
        "ListTemplates": [
            "ConnectorArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateTemplate": [
            "TemplateArn"
        ],
        "UpdateTemplateGroupAccessControlEntry": [
            "GroupSecurityIdentifier",
            "TemplateArn"
        ]
    },
    "personalize": {
        "CreateBatchInferenceJob": [
            "jobName",
            "solutionVersionArn",
            "jobInput",
            "jobOutput",
            "roleArn"
        ],
        "CreateBatchSegmentJob": [
            "jobName",
            "solutionVersionArn",
            "jobInput",
            "jobOutput",
            "roleArn"
        ],
        "CreateCampaign": [
            "name",
            "solutionVersionArn"
        ],
        "CreateDataset": [
            "name",
            "schemaArn",
            "datasetGroupArn",
            "datasetType"
        ],
        "CreateDatasetExportJob": [
            "jobName",
            "datasetArn",
            "roleArn",
            "jobOutput"
        ],
        "CreateDatasetGroup": [
            "name"
        ],
        "CreateDatasetImportJob": [
            "jobName",
            "datasetArn",
            "dataSource",
            "roleArn"
        ],
        "CreateEventTracker": [
            "name",
            "datasetGroupArn"
        ],
        "CreateFilter": [
            "name",
            "datasetGroupArn",
            "filterExpression"
        ],
        "CreateMetricAttribution": [
            "name",
            "datasetGroupArn",
            "metrics",
            "metricsOutputConfig"
        ],
        "CreateRecommender": [
            "name",
            "datasetGroupArn",
            "recipeArn"
        ],
        "CreateSchema": [
            "name",
            "schema"
        ],
        "CreateSolution": [
            "name",
            "datasetGroupArn"
        ],
        "CreateSolutionVersion": [
            "solutionArn"
        ],
        "DeleteCampaign": [
            "campaignArn"
        ],
        "DeleteDataset": [
            "datasetArn"
        ],
        "DeleteDatasetGroup": [
            "datasetGroupArn"
        ],
        "DeleteEventTracker": [
            "eventTrackerArn"
        ],
        "DeleteFilter": [
            "filterArn"
        ],
        "DeleteMetricAttribution": [
            "metricAttributionArn"
        ],
        "DeleteRecommender": [
            "recommenderArn"
        ],
        "DeleteSchema": [
            "schemaArn"
        ],
        "DeleteSolution": [
            "solutionArn"
        ],
        "DescribeAlgorithm": [
            "algorithmArn"
        ],
        "DescribeBatchInferenceJob": [
            "batchInferenceJobArn"
        ],
        "DescribeBatchSegmentJob": [
            "batchSegmentJobArn"
        ],
        "DescribeCampaign": [
            "campaignArn"
        ],
        "DescribeDataset": [
            "datasetArn"
        ],
        "DescribeDatasetExportJob": [
            "datasetExportJobArn"
        ],
        "DescribeDatasetGroup": [
            "datasetGroupArn"
        ],
        "DescribeDatasetImportJob": [
            "datasetImportJobArn"
        ],
        "DescribeEventTracker": [
            "eventTrackerArn"
        ],
        "DescribeFeatureTransformation": [
            "featureTransformationArn"
        ],
        "DescribeFilter": [
            "filterArn"
        ],
        "DescribeMetricAttribution": [
            "metricAttributionArn"
        ],
        "DescribeRecipe": [
            "recipeArn"
        ],
        "DescribeRecommender": [
            "recommenderArn"
        ],
        "DescribeSchema": [
            "schemaArn"
        ],
        "DescribeSolution": [
            "solutionArn"
        ],
        "DescribeSolutionVersion": [
            "solutionVersionArn"
        ],
        "GetSolutionMetrics": [
            "solutionVersionArn"
        ],
        "ListBatchInferenceJobs": "",
        "ListBatchSegmentJobs": "",
        "ListCampaigns": "",
        "ListDatasetExportJobs": "",
        "ListDatasetGroups": "",
        "ListDatasetImportJobs": "",
        "ListDatasets": "",
        "ListEventTrackers": "",
        "ListFilters": "",
        "ListMetricAttributionMetrics": "",
        "ListMetricAttributions": "",
        "ListRecipes": "",
        "ListRecommenders": "",
        "ListSchemas": "",
        "ListSolutionVersions": "",
        "ListSolutions": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartRecommender": [
            "recommenderArn"
        ],
        "StopRecommender": [
            "recommenderArn"
        ],
        "StopSolutionVersionCreation": [
            "solutionVersionArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCampaign": [
            "campaignArn"
        ],
        "UpdateDataset": [
            "datasetArn",
            "schemaArn"
        ],
        "UpdateMetricAttribution": "",
        "UpdateRecommender": [
            "recommenderArn",
            "recommenderConfig"
        ]
    },
    "personalize-events": {
        "PutActionInteractions": [
            "trackingId",
            "actionInteractions"
        ],
        "PutActions": [
            "datasetArn",
            "actions"
        ],
        "PutEvents": [
            "trackingId",
            "sessionId",
            "eventList"
        ],
        "PutItems": [
            "datasetArn",
            "items"
        ],
        "PutUsers": [
            "datasetArn",
            "users"
        ]
    },
    "personalize-runtime": {
        "GetActionRecommendations": "",
        "GetPersonalizedRanking": [
            "campaignArn",
            "inputList",
            "userId"
        ],
        "GetRecommendations": ""
    },
    "pi": {
        "CreatePerformanceAnalysisReport": [
            "ServiceType",
            "Identifier",
            "StartTime",
            "EndTime"
        ],
        "DeletePerformanceAnalysisReport": [
            "ServiceType",
            "Identifier",
            "AnalysisReportId"
        ],
        "DescribeDimensionKeys": [
            "ServiceType",
            "Identifier",
            "StartTime",
            "EndTime",
            "Metric",
            "GroupBy"
        ],
        "GetDimensionKeyDetails": [
            "ServiceType",
            "Identifier",
            "Group",
            "GroupIdentifier"
        ],
        "GetPerformanceAnalysisReport": [
            "ServiceType",
            "Identifier",
            "AnalysisReportId"
        ],
        "GetResourceMetadata": [
            "ServiceType",
            "Identifier"
        ],
        "GetResourceMetrics": [
            "ServiceType",
            "Identifier",
            "MetricQueries",
            "StartTime",
            "EndTime"
        ],
        "ListAvailableResourceDimensions": [
            "ServiceType",
            "Identifier",
            "Metrics"
        ],
        "ListAvailableResourceMetrics": [
            "ServiceType",
            "Identifier",
            "MetricTypes"
        ],
        "ListPerformanceAnalysisReports": [
            "ServiceType",
            "Identifier"
        ],
        "ListTagsForResource": [
            "ServiceType",
            "ResourceARN"
        ],
        "TagResource": [
            "ServiceType",
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ServiceType",
            "ResourceARN",
            "TagKeys"
        ]
    },
    "pinpoint": {
        "CreateApp": [
            "CreateApplicationRequest"
        ],
        "CreateCampaign": [
            "ApplicationId",
            "WriteCampaignRequest"
        ],
        "CreateEmailTemplate": [
            "TemplateName",
            "EmailTemplateRequest"
        ],
        "CreateExportJob": [
            "ApplicationId",
            "ExportJobRequest"
        ],
        "CreateImportJob": [
            "ApplicationId",
            "ImportJobRequest"
        ],
        "CreateInAppTemplate": [
            "TemplateName",
            "InAppTemplateRequest"
        ],
        "CreateJourney": [
            "ApplicationId",
            "WriteJourneyRequest"
        ],
        "CreatePushTemplate": [
            "TemplateName",
            "PushNotificationTemplateRequest"
        ],
        "CreateRecommenderConfiguration": [
            "CreateRecommenderConfiguration"
        ],
        "CreateSegment": [
            "ApplicationId",
            "WriteSegmentRequest"
        ],
        "CreateSmsTemplate": [
            "TemplateName",
            "SMSTemplateRequest"
        ],
        "CreateVoiceTemplate": [
            "TemplateName",
            "VoiceTemplateRequest"
        ],
        "DeleteAdmChannel": [
            "ApplicationId"
        ],
        "DeleteApnsChannel": [
            "ApplicationId"
        ],
        "DeleteApnsSandboxChannel": [
            "ApplicationId"
        ],
        "DeleteApnsVoipChannel": [
            "ApplicationId"
        ],
        "DeleteApnsVoipSandboxChannel": [
            "ApplicationId"
        ],
        "DeleteApp": [
            "ApplicationId"
        ],
        "DeleteBaiduChannel": [
            "ApplicationId"
        ],
        "DeleteCampaign": [
            "CampaignId",
            "ApplicationId"
        ],
        "DeleteEmailChannel": [
            "ApplicationId"
        ],
        "DeleteEmailTemplate": [
            "TemplateName"
        ],
        "DeleteEndpoint": [
            "ApplicationId",
            "EndpointId"
        ],
        "DeleteEventStream": [
            "ApplicationId"
        ],
        "DeleteGcmChannel": [
            "ApplicationId"
        ],
        "DeleteInAppTemplate": [
            "TemplateName"
        ],
        "DeleteJourney": [
            "JourneyId",
            "ApplicationId"
        ],
        "DeletePushTemplate": [
            "TemplateName"
        ],
        "DeleteRecommenderConfiguration": [
            "RecommenderId"
        ],
        "DeleteSegment": [
            "SegmentId",
            "ApplicationId"
        ],
        "DeleteSmsChannel": [
            "ApplicationId"
        ],
        "DeleteSmsTemplate": [
            "TemplateName"
        ],
        "DeleteUserEndpoints": [
            "ApplicationId",
            "UserId"
        ],
        "DeleteVoiceChannel": [
            "ApplicationId"
        ],
        "DeleteVoiceTemplate": [
            "TemplateName"
        ],
        "GetAdmChannel": [
            "ApplicationId"
        ],
        "GetApnsChannel": [
            "ApplicationId"
        ],
        "GetApnsSandboxChannel": [
            "ApplicationId"
        ],
        "GetApnsVoipChannel": [
            "ApplicationId"
        ],
        "GetApnsVoipSandboxChannel": [
            "ApplicationId"
        ],
        "GetApp": [
            "ApplicationId"
        ],
        "GetApplicationDateRangeKpi": [
            "ApplicationId",
            "KpiName"
        ],
        "GetApplicationSettings": [
            "ApplicationId"
        ],
        "GetApps": "",
        "GetBaiduChannel": [
            "ApplicationId"
        ],
        "GetCampaign": [
            "CampaignId",
            "ApplicationId"
        ],
        "GetCampaignActivities": [
            "ApplicationId",
            "CampaignId"
        ],
        "GetCampaignDateRangeKpi": [
            "ApplicationId",
            "KpiName",
            "CampaignId"
        ],
        "GetCampaignVersion": [
            "Version",
            "ApplicationId",
            "CampaignId"
        ],
        "GetCampaignVersions": [
            "ApplicationId",
            "CampaignId"
        ],
        "GetCampaigns": [
            "ApplicationId"
        ],
        "GetChannels": [
            "ApplicationId"
        ],
        "GetEmailChannel": [
            "ApplicationId"
        ],
        "GetEmailTemplate": [
            "TemplateName"
        ],
        "GetEndpoint": [
            "ApplicationId",
            "EndpointId"
        ],
        "GetEventStream": [
            "ApplicationId"
        ],
        "GetExportJob": [
            "ApplicationId",
            "JobId"
        ],
        "GetExportJobs": [
            "ApplicationId"
        ],
        "GetGcmChannel": [
            "ApplicationId"
        ],
        "GetImportJob": [
            "ApplicationId",
            "JobId"
        ],
        "GetImportJobs": [
            "ApplicationId"
        ],
        "GetInAppMessages": [
            "ApplicationId",
            "EndpointId"
        ],
        "GetInAppTemplate": [
            "TemplateName"
        ],
        "GetJourney": [
            "JourneyId",
            "ApplicationId"
        ],
        "GetJourneyDateRangeKpi": [
            "JourneyId",
            "ApplicationId",
            "KpiName"
        ],
        "GetJourneyExecutionActivityMetrics": [
            "JourneyActivityId",
            "ApplicationId",
            "JourneyId"
        ],
        "GetJourneyExecutionMetrics": [
            "ApplicationId",
            "JourneyId"
        ],
        "GetJourneyRunExecutionActivityMetrics": [
            "RunId",
            "JourneyActivityId",
            "JourneyId",
            "ApplicationId"
        ],
        "GetJourneyRunExecutionMetrics": [
            "RunId",
            "ApplicationId",
            "JourneyId"
        ],
        "GetJourneyRuns": [
            "ApplicationId",
            "JourneyId"
        ],
        "GetPushTemplate": [
            "TemplateName"
        ],
        "GetRecommenderConfiguration": [
            "RecommenderId"
        ],
        "GetRecommenderConfigurations": "",
        "GetSegment": [
            "SegmentId",
            "ApplicationId"
        ],
        "GetSegmentExportJobs": [
            "SegmentId",
            "ApplicationId"
        ],
        "GetSegmentImportJobs": [
            "SegmentId",
            "ApplicationId"
        ],
        "GetSegmentVersion": [
            "SegmentId",
            "Version",
            "ApplicationId"
        ],
        "GetSegmentVersions": [
            "SegmentId",
            "ApplicationId"
        ],
        "GetSegments": [
            "ApplicationId"
        ],
        "GetSmsChannel": [
            "ApplicationId"
        ],
        "GetSmsTemplate": [
            "TemplateName"
        ],
        "GetUserEndpoints": [
            "ApplicationId",
            "UserId"
        ],
        "GetVoiceChannel": [
            "ApplicationId"
        ],
        "GetVoiceTemplate": [
            "TemplateName"
        ],
        "ListJourneys": [
            "ApplicationId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTemplateVersions": [
            "TemplateName",
            "TemplateType"
        ],
        "ListTemplates": "",
        "PhoneNumberValidate": [
            "NumberValidateRequest"
        ],
        "PutEventStream": [
            "ApplicationId",
            "WriteEventStream"
        ],
        "PutEvents": [
            "ApplicationId",
            "EventsRequest"
        ],
        "RemoveAttributes": [
            "AttributeType",
            "ApplicationId",
            "UpdateAttributesRequest"
        ],
        "SendMessages": [
            "ApplicationId",
            "MessageRequest"
        ],
        "SendOTPMessage": [
            "ApplicationId",
            "SendOTPMessageRequestParameters"
        ],
        "SendUsersMessages": [
            "ApplicationId",
            "SendUsersMessageRequest"
        ],
        "TagResource": [
            "ResourceArn",
            "TagsModel"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateAdmChannel": [
            "ApplicationId",
            "ADMChannelRequest"
        ],
        "UpdateApnsChannel": [
            "ApplicationId",
            "APNSChannelRequest"
        ],
        "UpdateApnsSandboxChannel": [
            "ApplicationId",
            "APNSSandboxChannelRequest"
        ],
        "UpdateApnsVoipChannel": [
            "ApplicationId",
            "APNSVoipChannelRequest"
        ],
        "UpdateApnsVoipSandboxChannel": [
            "ApplicationId",
            "APNSVoipSandboxChannelRequest"
        ],
        "UpdateApplicationSettings": [
            "ApplicationId",
            "WriteApplicationSettingsRequest"
        ],
        "UpdateBaiduChannel": [
            "ApplicationId",
            "BaiduChannelRequest"
        ],
        "UpdateCampaign": [
            "CampaignId",
            "ApplicationId",
            "WriteCampaignRequest"
        ],
        "UpdateEmailChannel": [
            "ApplicationId",
            "EmailChannelRequest"
        ],
        "UpdateEmailTemplate": [
            "TemplateName",
            "EmailTemplateRequest"
        ],
        "UpdateEndpoint": [
            "ApplicationId",
            "EndpointId",
            "EndpointRequest"
        ],
        "UpdateEndpointsBatch": [
            "ApplicationId",
            "EndpointBatchRequest"
        ],
        "UpdateGcmChannel": [
            "ApplicationId",
            "GCMChannelRequest"
        ],
        "UpdateInAppTemplate": [
            "TemplateName",
            "InAppTemplateRequest"
        ],
        "UpdateJourney": [
            "JourneyId",
            "ApplicationId",
            "WriteJourneyRequest"
        ],
        "UpdateJourneyState": [
            "JourneyId",
            "ApplicationId",
            "JourneyStateRequest"
        ],
        "UpdatePushTemplate": [
            "TemplateName",
            "PushNotificationTemplateRequest"
        ],
        "UpdateRecommenderConfiguration": [
            "RecommenderId",
            "UpdateRecommenderConfiguration"
        ],
        "UpdateSegment": [
            "SegmentId",
            "ApplicationId",
            "WriteSegmentRequest"
        ],
        "UpdateSmsChannel": [
            "ApplicationId",
            "SMSChannelRequest"
        ],
        "UpdateSmsTemplate": [
            "TemplateName",
            "SMSTemplateRequest"
        ],
        "UpdateTemplateActiveVersion": [
            "TemplateName",
            "TemplateType",
            "TemplateActiveVersionRequest"
        ],
        "UpdateVoiceChannel": [
            "ApplicationId",
            "VoiceChannelRequest"
        ],
        "UpdateVoiceTemplate": [
            "TemplateName",
            "VoiceTemplateRequest"
        ],
        "VerifyOTPMessage": [
            "ApplicationId",
            "VerifyOTPMessageRequestParameters"
        ]
    },
    "pinpoint-email": {
        "CreateConfigurationSet": [
            "ConfigurationSetName"
        ],
        "CreateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName",
            "EventDestination"
        ],
        "CreateDedicatedIpPool": [
            "PoolName"
        ],
        "CreateDeliverabilityTestReport": [
            "FromEmailAddress",
            "Content"
        ],
        "CreateEmailIdentity": [
            "EmailIdentity"
        ],
        "DeleteConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DeleteConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName"
        ],
        "DeleteDedicatedIpPool": [
            "PoolName"
        ],
        "DeleteEmailIdentity": [
            "EmailIdentity"
        ],
        "GetAccount": "",
        "GetBlacklistReports": [
            "BlacklistItemNames"
        ],
        "GetConfigurationSet": [
            "ConfigurationSetName"
        ],
        "GetConfigurationSetEventDestinations": [
            "ConfigurationSetName"
        ],
        "GetDedicatedIp": [
            "Ip"
        ],
        "GetDedicatedIps": "",
        "GetDeliverabilityDashboardOptions": "",
        "GetDeliverabilityTestReport": [
            "ReportId"
        ],
        "GetDomainDeliverabilityCampaign": [
            "CampaignId"
        ],
        "GetDomainStatisticsReport": [
            "Domain",
            "StartDate",
            "EndDate"
        ],
        "GetEmailIdentity": [
            "EmailIdentity"
        ],
        "ListConfigurationSets": "",
        "ListDedicatedIpPools": "",
        "ListDeliverabilityTestReports": "",
        "ListDomainDeliverabilityCampaigns": [
            "StartDate",
            "EndDate",
            "SubscribedDomain"
        ],
        "ListEmailIdentities": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutAccountDedicatedIpWarmupAttributes": "",
        "PutAccountSendingAttributes": "",
        "PutConfigurationSetDeliveryOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetReputationOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetSendingOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetTrackingOptions": [
            "ConfigurationSetName"
        ],
        "PutDedicatedIpInPool": [
            "Ip",
            "DestinationPoolName"
        ],
        "PutDedicatedIpWarmupAttributes": [
            "Ip",
            "WarmupPercentage"
        ],
        "PutDeliverabilityDashboardOption": [
            "DashboardEnabled"
        ],
        "PutEmailIdentityDkimAttributes": [
            "EmailIdentity"
        ],
        "PutEmailIdentityFeedbackAttributes": [
            "EmailIdentity"
        ],
        "PutEmailIdentityMailFromAttributes": [
            "EmailIdentity"
        ],
        "SendEmail": [
            "Destination",
            "Content"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName",
            "EventDestination"
        ]
    },
    "pinpoint-sms-voice-v2": {
        "AssociateOriginationIdentity": [
            "PoolId",
            "OriginationIdentity",
            "IsoCountryCode"
        ],
        "CreateConfigurationSet": [
            "ConfigurationSetName"
        ],
        "CreateEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName",
            "MatchingEventTypes"
        ],
        "CreateOptOutList": [
            "OptOutListName"
        ],
        "CreatePool": [
            "OriginationIdentity",
            "IsoCountryCode",
            "MessageType"
        ],
        "CreateRegistration": [
            "RegistrationType"
        ],
        "CreateRegistrationAssociation": [
            "RegistrationId",
            "ResourceId"
        ],
        "CreateRegistrationAttachment": "",
        "CreateRegistrationVersion": [
            "RegistrationId"
        ],
        "CreateVerifiedDestinationNumber": [
            "DestinationPhoneNumber"
        ],
        "DeleteConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DeleteDefaultMessageType": [
            "ConfigurationSetName"
        ],
        "DeleteDefaultSenderId": [
            "ConfigurationSetName"
        ],
        "DeleteEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName"
        ],
        "DeleteKeyword": [
            "OriginationIdentity",
            "Keyword"
        ],
        "DeleteOptOutList": [
            "OptOutListName"
        ],
        "DeleteOptedOutNumber": [
            "OptOutListName",
            "OptedOutNumber"
        ],
        "DeletePool": [
            "PoolId"
        ],
        "DeleteRegistration": [
            "RegistrationId"
        ],
        "DeleteRegistrationAttachment": [
            "RegistrationAttachmentId"
        ],
        "DeleteRegistrationFieldValue": [
            "RegistrationId",
            "FieldPath"
        ],
        "DeleteTextMessageSpendLimitOverride": "",
        "DeleteVerifiedDestinationNumber": [
            "VerifiedDestinationNumberId"
        ],
        "DeleteVoiceMessageSpendLimitOverride": "",
        "DescribeAccountAttributes": "",
        "DescribeAccountLimits": "",
        "DescribeConfigurationSets": "",
        "DescribeKeywords": [
            "OriginationIdentity"
        ],
        "DescribeOptOutLists": "",
        "DescribeOptedOutNumbers": [
            "OptOutListName"
        ],
        "DescribePhoneNumbers": "",
        "DescribePools": "",
        "DescribeRegistrationAttachments": "",
        "DescribeRegistrationFieldDefinitions": [
            "RegistrationType"
        ],
        "DescribeRegistrationFieldValues": [
            "RegistrationId"
        ],
        "DescribeRegistrationSectionDefinitions": [
            "RegistrationType"
        ],
        "DescribeRegistrationTypeDefinitions": "",
        "DescribeRegistrationVersions": [
            "RegistrationId"
        ],
        "DescribeRegistrations": "",
        "DescribeSenderIds": "",
        "DescribeSpendLimits": "",
        "DescribeVerifiedDestinationNumbers": "",
        "DisassociateOriginationIdentity": [
            "PoolId",
            "OriginationIdentity",
            "IsoCountryCode"
        ],
        "DiscardRegistrationVersion": [
            "RegistrationId"
        ],
        "ListPoolOriginationIdentities": [
            "PoolId"
        ],
        "ListRegistrationAssociations": [
            "RegistrationId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutKeyword": [
            "OriginationIdentity",
            "Keyword",
            "KeywordMessage"
        ],
        "PutOptedOutNumber": [
            "OptOutListName",
            "OptedOutNumber"
        ],
        "PutRegistrationFieldValue": [
            "RegistrationId",
            "FieldPath"
        ],
        "ReleasePhoneNumber": [
            "PhoneNumberId"
        ],
        "ReleaseSenderId": [
            "SenderId",
            "IsoCountryCode"
        ],
        "RequestPhoneNumber": [
            "IsoCountryCode",
            "MessageType",
            "NumberCapabilities",
            "NumberType"
        ],
        "RequestSenderId": [
            "SenderId",
            "IsoCountryCode"
        ],
        "SendDestinationNumberVerificationCode": [
            "VerifiedDestinationNumberId",
            "VerificationChannel"
        ],
        "SendTextMessage": [
            "DestinationPhoneNumber"
        ],
        "SendVoiceMessage": [
            "DestinationPhoneNumber",
            "OriginationIdentity"
        ],
        "SetDefaultMessageType": [
            "ConfigurationSetName",
            "MessageType"
        ],
        "SetDefaultSenderId": [
            "ConfigurationSetName",
            "SenderId"
        ],
        "SetTextMessageSpendLimitOverride": [
            "MonthlyLimit"
        ],
        "SetVoiceMessageSpendLimitOverride": [
            "MonthlyLimit"
        ],
        "SubmitRegistrationVersion": [
            "RegistrationId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName"
        ],
        "UpdatePhoneNumber": [
            "PhoneNumberId"
        ],
        "UpdatePool": [
            "PoolId"
        ],
        "UpdateSenderId": [
            "SenderId",
            "IsoCountryCode"
        ],
        "VerifyDestinationNumber": [
            "VerifiedDestinationNumberId",
            "VerificationCode"
        ]
    },
    "pipes": {
        "CreatePipe": [
            "Name",
            "RoleArn",
            "Source",
            "Target"
        ],
        "DeletePipe": [
            "Name"
        ],
        "DescribePipe": [
            "Name"
        ],
        "ListPipes": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "StartPipe": [
            "Name"
        ],
        "StopPipe": [
            "Name"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdatePipe": [
            "Name",
            "RoleArn"
        ]
    },
    "polly": {
        "DeleteLexicon": [
            "Name"
        ],
        "DescribeVoices": "",
        "GetLexicon": [
            "Name"
        ],
        "GetSpeechSynthesisTask": [
            "TaskId"
        ],
        "ListLexicons": "",
        "ListSpeechSynthesisTasks": "",
        "PutLexicon": [
            "Name",
            "Content"
        ],
        "StartSpeechSynthesisTask": [
            "OutputFormat",
            "OutputS3BucketName",
            "Text",
            "VoiceId"
        ],
        "SynthesizeSpeech": [
            "OutputFormat",
            "Text",
            "VoiceId"
        ]
    },
    "pricing": {
        "DescribeServices": "",
        "GetAttributeValues": [
            "ServiceCode",
            "AttributeName"
        ],
        "GetPriceListFileUrl": [
            "PriceListArn",
            "FileFormat"
        ],
        "GetProducts": [
            "ServiceCode"
        ],
        "ListPriceLists": [
            "ServiceCode",
            "EffectiveDate",
            "CurrencyCode"
        ]
    },
    "privatenetworks": {
        "AcknowledgeOrderReceipt": [
            "orderArn"
        ],
        "ActivateDeviceIdentifier": [
            "deviceIdentifierArn"
        ],
        "ActivateNetworkSite": [
            "networkSiteArn",
            "shippingAddress"
        ],
        "ConfigureAccessPoint": [
            "accessPointArn"
        ],
        "CreateNetwork": [
            "networkName"
        ],
        "CreateNetworkSite": [
            "networkArn",
            "networkSiteName"
        ],
        "DeactivateDeviceIdentifier": [
            "deviceIdentifierArn"
        ],
        "DeleteNetwork": [
            "networkArn"
        ],
        "DeleteNetworkSite": [
            "networkSiteArn"
        ],
        "GetDeviceIdentifier": [
            "deviceIdentifierArn"
        ],
        "GetNetwork": [
            "networkArn"
        ],
        "GetNetworkResource": [
            "networkResourceArn"
        ],
        "GetNetworkSite": [
            "networkSiteArn"
        ],
        "GetOrder": [
            "orderArn"
        ],
        "ListDeviceIdentifiers": [
            "networkArn"
        ],
        "ListNetworkResources": [
            "networkArn"
        ],
        "ListNetworkSites": [
            "networkArn"
        ],
        "ListNetworks": "",
        "ListOrders": [
            "networkArn"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "Ping": "",
        "StartNetworkResourceUpdate": [
            "networkResourceArn",
            "updateType"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateNetworkSite": [
            "networkSiteArn"
        ],
        "UpdateNetworkSitePlan": [
            "networkSiteArn",
            "pendingPlan"
        ]
    },
    "proton": {
        "AcceptEnvironmentAccountConnection": [
            "id"
        ],
        "CancelComponentDeployment": [
            "componentName"
        ],
        "CancelEnvironmentDeployment": [
            "environmentName"
        ],
        "CancelServiceInstanceDeployment": [
            "serviceInstanceName",
            "serviceName"
        ],
        "CancelServicePipelineDeployment": [
            "serviceName"
        ],
        "CreateComponent": [
            "manifest",
            "name",
            "templateFile"
        ],
        "CreateEnvironment": [
            "name",
            "spec",
            "templateMajorVersion",
            "templateName"
        ],
        "CreateEnvironmentAccountConnection": [
            "environmentName",
            "managementAccountId"
        ],
        "CreateEnvironmentTemplate": [
            "name"
        ],
        "CreateEnvironmentTemplateVersion": [
            "source",
            "templateName"
        ],
        "CreateRepository": [
            "connectionArn",
            "name",
            "provider"
        ],
        "CreateService": [
            "name",
            "spec",
            "templateMajorVersion",
            "templateName"
        ],
        "CreateServiceInstance": [
            "name",
            "serviceName",
            "spec"
        ],
        "CreateServiceSyncConfig": [
            "branch",
            "filePath",
            "repositoryName",
            "repositoryProvider",
            "serviceName"
        ],
        "CreateServiceTemplate": [
            "name"
        ],
        "CreateServiceTemplateVersion": [
            "compatibleEnvironmentTemplates",
            "source",
            "templateName"
        ],
        "CreateTemplateSyncConfig": [
            "branch",
            "repositoryName",
            "repositoryProvider",
            "templateName",
            "templateType"
        ],
        "DeleteComponent": [
            "name"
        ],
        "DeleteDeployment": [
            "id"
        ],
        "DeleteEnvironment": [
            "name"
        ],
        "DeleteEnvironmentAccountConnection": [
            "id"
        ],
        "DeleteEnvironmentTemplate": [
            "name"
        ],
        "DeleteEnvironmentTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "DeleteRepository": [
            "name",
            "provider"
        ],
        "DeleteService": [
            "name"
        ],
        "DeleteServiceSyncConfig": [
            "serviceName"
        ],
        "DeleteServiceTemplate": [
            "name"
        ],
        "DeleteServiceTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "DeleteTemplateSyncConfig": [
            "templateName",
            "templateType"
        ],
        "GetAccountSettings": "",
        "GetComponent": [
            "name"
        ],
        "GetDeployment": [
            "id"
        ],
        "GetEnvironment": [
            "name"
        ],
        "GetEnvironmentAccountConnection": [
            "id"
        ],
        "GetEnvironmentTemplate": [
            "name"
        ],
        "GetEnvironmentTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "GetRepository": [
            "name",
            "provider"
        ],
        "GetRepositorySyncStatus": [
            "branch",
            "repositoryName",
            "repositoryProvider",
            "syncType"
        ],
        "GetResourcesSummary": "",
        "GetService": [
            "name"
        ],
        "GetServiceInstance": [
            "name",
            "serviceName"
        ],
        "GetServiceInstanceSyncStatus": [
            "serviceInstanceName",
            "serviceName"
        ],
        "GetServiceSyncBlockerSummary": [
            "serviceName"
        ],
        "GetServiceSyncConfig": [
            "serviceName"
        ],
        "GetServiceTemplate": [
            "name"
        ],
        "GetServiceTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "GetTemplateSyncConfig": [
            "templateName",
            "templateType"
        ],
        "GetTemplateSyncStatus": [
            "templateName",
            "templateType",
            "templateVersion"
        ],
        "ListComponentOutputs": [
            "componentName"
        ],
        "ListComponentProvisionedResources": [
            "componentName"
        ],
        "ListComponents": "",
        "ListDeployments": "",
        "ListEnvironmentAccountConnections": [
            "requestedBy"
        ],
        "ListEnvironmentOutputs": [
            "environmentName"
        ],
        "ListEnvironmentProvisionedResources": [
            "environmentName"
        ],
        "ListEnvironmentTemplateVersions": [
            "templateName"
        ],
        "ListEnvironmentTemplates": "",
        "ListEnvironments": "",
        "ListRepositories": "",
        "ListRepositorySyncDefinitions": [
            "repositoryName",
            "repositoryProvider",
            "syncType"
        ],
        "ListServiceInstanceOutputs": [
            "serviceInstanceName",
            "serviceName"
        ],
        "ListServiceInstanceProvisionedResources": [
            "serviceInstanceName",
            "serviceName"
        ],
        "ListServiceInstances": "",
        "ListServicePipelineOutputs": [
            "serviceName"
        ],
        "ListServicePipelineProvisionedResources": [
            "serviceName"
        ],
        "ListServiceTemplateVersions": [
            "templateName"
        ],
        "ListServiceTemplates": "",
        "ListServices": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "NotifyResourceDeploymentStatusChange": [
            "resourceArn"
        ],
        "RejectEnvironmentAccountConnection": [
            "id"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccountSettings": "",
        "UpdateComponent": [
            "deploymentType",
            "name"
        ],
        "UpdateEnvironment": [
            "deploymentType",
            "name"
        ],
        "UpdateEnvironmentAccountConnection": [
            "id"
        ],
        "UpdateEnvironmentTemplate": [
            "name"
        ],
        "UpdateEnvironmentTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "UpdateService": [
            "name"
        ],
        "UpdateServiceInstance": [
            "deploymentType",
            "name",
            "serviceName"
        ],
        "UpdateServicePipeline": [
            "deploymentType",
            "serviceName",
            "spec"
        ],
        "UpdateServiceSyncBlocker": [
            "id",
            "resolvedReason"
        ],
        "UpdateServiceSyncConfig": [
            "branch",
            "filePath",
            "repositoryName",
            "repositoryProvider",
            "serviceName"
        ],
        "UpdateServiceTemplate": [
            "name"
        ],
        "UpdateServiceTemplateVersion": [
            "majorVersion",
            "minorVersion",
            "templateName"
        ],
        "UpdateTemplateSyncConfig": [
            "branch",
            "repositoryName",
            "repositoryProvider",
            "templateName",
            "templateType"
        ]
    },
    "qbusiness": {
        "BatchDeleteDocument": [
            "applicationId",
            "documents",
            "indexId"
        ],
        "BatchPutDocument": [
            "applicationId",
            "documents",
            "indexId"
        ],
        "ChatSync": [
            "applicationId",
            "userId"
        ],
        "CreateApplication": [
            "displayName",
            "roleArn"
        ],
        "CreateDataSource": [
            "applicationId",
            "configuration",
            "displayName",
            "indexId"
        ],
        "CreateIndex": [
            "applicationId",
            "displayName"
        ],
        "CreatePlugin": [
            "applicationId",
            "authConfiguration",
            "displayName",
            "serverUrl",
            "type"
        ],
        "CreateRetriever": [
            "applicationId",
            "configuration",
            "displayName",
            "type"
        ],
        "CreateUser": [
            "applicationId",
            "userId"
        ],
        "CreateWebExperience": [
            "applicationId"
        ],
        "DeleteApplication": [
            "applicationId"
        ],
        "DeleteChatControlsConfiguration": [
            "applicationId"
        ],
        "DeleteConversation": [
            "applicationId",
            "conversationId",
            "userId"
        ],
        "DeleteDataSource": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "DeleteGroup": [
            "applicationId",
            "groupName",
            "indexId"
        ],
        "DeleteIndex": [
            "applicationId",
            "indexId"
        ],
        "DeletePlugin": [
            "applicationId",
            "pluginId"
        ],
        "DeleteRetriever": [
            "applicationId",
            "retrieverId"
        ],
        "DeleteUser": [
            "applicationId",
            "userId"
        ],
        "DeleteWebExperience": [
            "applicationId",
            "webExperienceId"
        ],
        "GetApplication": [
            "applicationId"
        ],
        "GetChatControlsConfiguration": [
            "applicationId"
        ],
        "GetDataSource": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "GetGroup": [
            "applicationId",
            "groupName",
            "indexId"
        ],
        "GetIndex": [
            "applicationId",
            "indexId"
        ],
        "GetPlugin": [
            "applicationId",
            "pluginId"
        ],
        "GetRetriever": [
            "applicationId",
            "retrieverId"
        ],
        "GetUser": [
            "applicationId",
            "userId"
        ],
        "GetWebExperience": [
            "applicationId",
            "webExperienceId"
        ],
        "ListApplications": "",
        "ListConversations": [
            "applicationId",
            "userId"
        ],
        "ListDataSourceSyncJobs": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "ListDataSources": [
            "applicationId",
            "indexId"
        ],
        "ListDocuments": [
            "applicationId",
            "indexId"
        ],
        "ListGroups": [
            "applicationId",
            "indexId",
            "updatedEarlierThan"
        ],
        "ListIndices": [
            "applicationId"
        ],
        "ListMessages": [
            "applicationId",
            "conversationId",
            "userId"
        ],
        "ListPlugins": [
            "applicationId"
        ],
        "ListRetrievers": [
            "applicationId"
        ],
        "ListTagsForResource": [
            "resourceARN"
        ],
        "ListWebExperiences": [
            "applicationId"
        ],
        "PutFeedback": [
            "applicationId",
            "conversationId",
            "messageId",
            "userId"
        ],
        "PutGroup": [
            "applicationId",
            "groupMembers",
            "groupName",
            "indexId",
            "type"
        ],
        "StartDataSourceSyncJob": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "StopDataSourceSyncJob": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "TagResource": [
            "resourceARN",
            "tags"
        ],
        "UntagResource": [
            "resourceARN",
            "tagKeys"
        ],
        "UpdateApplication": [
            "applicationId"
        ],
        "UpdateChatControlsConfiguration": [
            "applicationId"
        ],
        "UpdateDataSource": [
            "applicationId",
            "dataSourceId",
            "indexId"
        ],
        "UpdateIndex": [
            "applicationId",
            "indexId"
        ],
        "UpdatePlugin": [
            "applicationId",
            "pluginId"
        ],
        "UpdateRetriever": [
            "applicationId",
            "retrieverId"
        ],
        "UpdateUser": [
            "applicationId",
            "userId"
        ],
        "UpdateWebExperience": [
            "applicationId",
            "webExperienceId"
        ]
    },
    "qconnect": {
        "CreateAssistant": [
            "name",
            "type"
        ],
        "CreateAssistantAssociation": [
            "assistantId",
            "association",
            "associationType"
        ],
        "CreateContent": [
            "knowledgeBaseId",
            "name",
            "uploadId"
        ],
        "CreateKnowledgeBase": [
            "knowledgeBaseType",
            "name"
        ],
        "CreateQuickResponse": [
            "content",
            "knowledgeBaseId",
            "name"
        ],
        "CreateSession": [
            "assistantId",
            "name"
        ],
        "DeleteAssistant": [
            "assistantId"
        ],
        "DeleteAssistantAssociation": [
            "assistantAssociationId",
            "assistantId"
        ],
        "DeleteContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "DeleteImportJob": [
            "importJobId",
            "knowledgeBaseId"
        ],
        "DeleteKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "DeleteQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ],
        "GetAssistant": [
            "assistantId"
        ],
        "GetAssistantAssociation": [
            "assistantAssociationId",
            "assistantId"
        ],
        "GetContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "GetContentSummary": [
            "contentId",
            "knowledgeBaseId"
        ],
        "GetImportJob": [
            "importJobId",
            "knowledgeBaseId"
        ],
        "GetKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "GetQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ],
        "GetRecommendations": [
            "assistantId",
            "sessionId"
        ],
        "GetSession": [
            "assistantId",
            "sessionId"
        ],
        "ListAssistantAssociations": [
            "assistantId"
        ],
        "ListAssistants": "",
        "ListContents": [
            "knowledgeBaseId"
        ],
        "ListImportJobs": [
            "knowledgeBaseId"
        ],
        "ListKnowledgeBases": "",
        "ListQuickResponses": [
            "knowledgeBaseId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "NotifyRecommendationsReceived": [
            "assistantId",
            "recommendationIds",
            "sessionId"
        ],
        "PutFeedback": [
            "assistantId",
            "contentFeedback",
            "targetId",
            "targetType"
        ],
        "QueryAssistant": [
            "assistantId",
            "queryText"
        ],
        "RemoveKnowledgeBaseTemplateUri": [
            "knowledgeBaseId"
        ],
        "SearchContent": [
            "knowledgeBaseId",
            "searchExpression"
        ],
        "SearchQuickResponses": [
            "knowledgeBaseId",
            "searchExpression"
        ],
        "SearchSessions": [
            "assistantId",
            "searchExpression"
        ],
        "StartContentUpload": [
            "contentType",
            "knowledgeBaseId"
        ],
        "StartImportJob": [
            "importJobType",
            "knowledgeBaseId",
            "uploadId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "UpdateKnowledgeBaseTemplateUri": [
            "knowledgeBaseId",
            "templateUri"
        ],
        "UpdateQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ]
    },
    "qldb": {
        "CancelJournalKinesisStream": [
            "LedgerName",
            "StreamId"
        ],
        "CreateLedger": [
            "Name",
            "PermissionsMode"
        ],
        "DeleteLedger": [
            "Name"
        ],
        "DescribeJournalKinesisStream": [
            "LedgerName",
            "StreamId"
        ],
        "DescribeJournalS3Export": [
            "Name",
            "ExportId"
        ],
        "DescribeLedger": [
            "Name"
        ],
        "ExportJournalToS3": [
            "Name",
            "InclusiveStartTime",
            "ExclusiveEndTime",
            "S3ExportConfiguration",
            "RoleArn"
        ],
        "GetBlock": [
            "Name",
            "BlockAddress"
        ],
        "GetDigest": [
            "Name"
        ],
        "GetRevision": [
            "Name",
            "BlockAddress",
            "DocumentId"
        ],
        "ListJournalKinesisStreamsForLedger": [
            "LedgerName"
        ],
        "ListJournalS3Exports": "",
        "ListJournalS3ExportsForLedger": [
            "Name"
        ],
        "ListLedgers": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StreamJournalToKinesis": [
            "LedgerName",
            "RoleArn",
            "InclusiveStartTime",
            "KinesisConfiguration",
            "StreamName"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateLedger": [
            "Name"
        ],
        "UpdateLedgerPermissionsMode": [
            "Name",
            "PermissionsMode"
        ]
    },
    "qldb-session": {
        "SendCommand": ""
    },
    "quicksight": {
        "CancelIngestion": [
            "AwsAccountId",
            "DataSetId",
            "IngestionId"
        ],
        "CreateAccountCustomization": [
            "AwsAccountId",
            "AccountCustomization"
        ],
        "CreateAccountSubscription": [
            "Edition",
            "AuthenticationMethod",
            "AwsAccountId",
            "AccountName",
            "NotificationEmail"
        ],
        "CreateAnalysis": [
            "AwsAccountId",
            "AnalysisId",
            "Name"
        ],
        "CreateDashboard": [
            "AwsAccountId",
            "DashboardId",
            "Name"
        ],
        "CreateDataSet": [
            "AwsAccountId",
            "DataSetId",
            "Name",
            "PhysicalTableMap",
            "ImportMode"
        ],
        "CreateDataSource": [
            "AwsAccountId",
            "DataSourceId",
            "Name",
            "Type"
        ],
        "CreateFolder": [
            "AwsAccountId",
            "FolderId"
        ],
        "CreateFolderMembership": [
            "AwsAccountId",
            "FolderId",
            "MemberId",
            "MemberType"
        ],
        "CreateGroup": [
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "CreateGroupMembership": [
            "MemberName",
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "CreateIAMPolicyAssignment": [
            "AwsAccountId",
            "AssignmentName",
            "AssignmentStatus",
            "Namespace"
        ],
        "CreateIngestion": [
            "DataSetId",
            "IngestionId",
            "AwsAccountId"
        ],
        "CreateNamespace": [
            "AwsAccountId",
            "Namespace",
            "IdentityStore"
        ],
        "CreateRefreshSchedule": [
            "DataSetId",
            "AwsAccountId",
            "Schedule"
        ],
        "CreateRoleMembership": [
            "MemberName",
            "AwsAccountId",
            "Namespace",
            "Role"
        ],
        "CreateTemplate": [
            "AwsAccountId",
            "TemplateId"
        ],
        "CreateTemplateAlias": [
            "AwsAccountId",
            "TemplateId",
            "AliasName",
            "TemplateVersionNumber"
        ],
        "CreateTheme": [
            "AwsAccountId",
            "ThemeId",
            "Name",
            "BaseThemeId",
            "Configuration"
        ],
        "CreateThemeAlias": [
            "AwsAccountId",
            "ThemeId",
            "AliasName",
            "ThemeVersionNumber"
        ],
        "CreateTopic": [
            "AwsAccountId",
            "TopicId",
            "Topic"
        ],
        "CreateTopicRefreshSchedule": [
            "AwsAccountId",
            "TopicId",
            "DatasetArn",
            "RefreshSchedule"
        ],
        "CreateVPCConnection": [
            "AwsAccountId",
            "VPCConnectionId",
            "Name",
            "SubnetIds",
            "SecurityGroupIds",
            "RoleArn"
        ],
        "DeleteAccountCustomization": [
            "AwsAccountId"
        ],
        "DeleteAccountSubscription": [
            "AwsAccountId"
        ],
        "DeleteAnalysis": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "DeleteDashboard": [
            "AwsAccountId",
            "DashboardId"
        ],
        "DeleteDataSet": [
            "AwsAccountId",
            "DataSetId"
        ],
        "DeleteDataSetRefreshProperties": [
            "AwsAccountId",
            "DataSetId"
        ],
        "DeleteDataSource": [
            "AwsAccountId",
            "DataSourceId"
        ],
        "DeleteFolder": [
            "AwsAccountId",
            "FolderId"
        ],
        "DeleteFolderMembership": [
            "AwsAccountId",
            "FolderId",
            "MemberId",
            "MemberType"
        ],
        "DeleteGroup": [
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteGroupMembership": [
            "MemberName",
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteIAMPolicyAssignment": [
            "AwsAccountId",
            "AssignmentName",
            "Namespace"
        ],
        "DeleteIdentityPropagationConfig": [
            "AwsAccountId",
            "Service"
        ],
        "DeleteNamespace": [
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteRefreshSchedule": [
            "DataSetId",
            "AwsAccountId",
            "ScheduleId"
        ],
        "DeleteRoleCustomPermission": [
            "Role",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteRoleMembership": [
            "MemberName",
            "Role",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteTemplate": [
            "AwsAccountId",
            "TemplateId"
        ],
        "DeleteTemplateAlias": [
            "AwsAccountId",
            "TemplateId",
            "AliasName"
        ],
        "DeleteTheme": [
            "AwsAccountId",
            "ThemeId"
        ],
        "DeleteThemeAlias": [
            "AwsAccountId",
            "ThemeId",
            "AliasName"
        ],
        "DeleteTopic": [
            "AwsAccountId",
            "TopicId"
        ],
        "DeleteTopicRefreshSchedule": [
            "AwsAccountId",
            "TopicId",
            "DatasetId"
        ],
        "DeleteUser": [
            "UserName",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteUserByPrincipalId": [
            "PrincipalId",
            "AwsAccountId",
            "Namespace"
        ],
        "DeleteVPCConnection": [
            "AwsAccountId",
            "VPCConnectionId"
        ],
        "DescribeAccountCustomization": [
            "AwsAccountId"
        ],
        "DescribeAccountSettings": [
            "AwsAccountId"
        ],
        "DescribeAccountSubscription": [
            "AwsAccountId"
        ],
        "DescribeAnalysis": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "DescribeAnalysisDefinition": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "DescribeAnalysisPermissions": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "DescribeAssetBundleExportJob": [
            "AwsAccountId",
            "AssetBundleExportJobId"
        ],
        "DescribeAssetBundleImportJob": [
            "AwsAccountId",
            "AssetBundleImportJobId"
        ],
        "DescribeDashboard": [
            "AwsAccountId",
            "DashboardId"
        ],
        "DescribeDashboardDefinition": [
            "AwsAccountId",
            "DashboardId"
        ],
        "DescribeDashboardPermissions": [
            "AwsAccountId",
            "DashboardId"
        ],
        "DescribeDashboardSnapshotJob": [
            "AwsAccountId",
            "DashboardId",
            "SnapshotJobId"
        ],
        "DescribeDashboardSnapshotJobResult": [
            "AwsAccountId",
            "DashboardId",
            "SnapshotJobId"
        ],
        "DescribeDataSet": [
            "AwsAccountId",
            "DataSetId"
        ],
        "DescribeDataSetPermissions": [
            "AwsAccountId",
            "DataSetId"
        ],
        "DescribeDataSetRefreshProperties": [
            "AwsAccountId",
            "DataSetId"
        ],
        "DescribeDataSource": [
            "AwsAccountId",
            "DataSourceId"
        ],
        "DescribeDataSourcePermissions": [
            "AwsAccountId",
            "DataSourceId"
        ],
        "DescribeFolder": [
            "AwsAccountId",
            "FolderId"
        ],
        "DescribeFolderPermissions": [
            "AwsAccountId",
            "FolderId"
        ],
        "DescribeFolderResolvedPermissions": [
            "AwsAccountId",
            "FolderId"
        ],
        "DescribeGroup": [
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "DescribeGroupMembership": [
            "MemberName",
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "DescribeIAMPolicyAssignment": [
            "AwsAccountId",
            "AssignmentName",
            "Namespace"
        ],
        "DescribeIngestion": [
            "AwsAccountId",
            "DataSetId",
            "IngestionId"
        ],
        "DescribeIpRestriction": [
            "AwsAccountId"
        ],
        "DescribeNamespace": [
            "AwsAccountId",
            "Namespace"
        ],
        "DescribeRefreshSchedule": [
            "AwsAccountId",
            "DataSetId",
            "ScheduleId"
        ],
        "DescribeRoleCustomPermission": [
            "Role",
            "AwsAccountId",
            "Namespace"
        ],
        "DescribeTemplate": [
            "AwsAccountId",
            "TemplateId"
        ],
        "DescribeTemplateAlias": [
            "AwsAccountId",
            "TemplateId",
            "AliasName"
        ],
        "DescribeTemplateDefinition": [
            "AwsAccountId",
            "TemplateId"
        ],
        "DescribeTemplatePermissions": [
            "AwsAccountId",
            "TemplateId"
        ],
        "DescribeTheme": [
            "AwsAccountId",
            "ThemeId"
        ],
        "DescribeThemeAlias": [
            "AwsAccountId",
            "ThemeId",
            "AliasName"
        ],
        "DescribeThemePermissions": [
            "AwsAccountId",
            "ThemeId"
        ],
        "DescribeTopic": [
            "AwsAccountId",
            "TopicId"
        ],
        "DescribeTopicPermissions": [
            "AwsAccountId",
            "TopicId"
        ],
        "DescribeTopicRefresh": [
            "AwsAccountId",
            "TopicId",
            "RefreshId"
        ],
        "DescribeTopicRefreshSchedule": [
            "AwsAccountId",
            "TopicId",
            "DatasetId"
        ],
        "DescribeUser": [
            "UserName",
            "AwsAccountId",
            "Namespace"
        ],
        "DescribeVPCConnection": [
            "AwsAccountId",
            "VPCConnectionId"
        ],
        "GenerateEmbedUrlForAnonymousUser": [
            "AwsAccountId",
            "Namespace",
            "AuthorizedResourceArns",
            "ExperienceConfiguration"
        ],
        "GenerateEmbedUrlForRegisteredUser": [
            "AwsAccountId",
            "UserArn",
            "ExperienceConfiguration"
        ],
        "GetDashboardEmbedUrl": [
            "AwsAccountId",
            "DashboardId",
            "IdentityType"
        ],
        "GetSessionEmbedUrl": [
            "AwsAccountId"
        ],
        "ListAnalyses": [
            "AwsAccountId"
        ],
        "ListAssetBundleExportJobs": [
            "AwsAccountId"
        ],
        "ListAssetBundleImportJobs": [
            "AwsAccountId"
        ],
        "ListDashboardVersions": [
            "AwsAccountId",
            "DashboardId"
        ],
        "ListDashboards": [
            "AwsAccountId"
        ],
        "ListDataSets": [
            "AwsAccountId"
        ],
        "ListDataSources": [
            "AwsAccountId"
        ],
        "ListFolderMembers": [
            "AwsAccountId",
            "FolderId"
        ],
        "ListFolders": [
            "AwsAccountId"
        ],
        "ListGroupMemberships": [
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "ListGroups": [
            "AwsAccountId",
            "Namespace"
        ],
        "ListIAMPolicyAssignments": [
            "AwsAccountId",
            "Namespace"
        ],
        "ListIAMPolicyAssignmentsForUser": [
            "AwsAccountId",
            "UserName",
            "Namespace"
        ],
        "ListIdentityPropagationConfigs": [
            "AwsAccountId"
        ],
        "ListIngestions": [
            "DataSetId",
            "AwsAccountId"
        ],
        "ListNamespaces": [
            "AwsAccountId"
        ],
        "ListRefreshSchedules": [
            "AwsAccountId",
            "DataSetId"
        ],
        "ListRoleMemberships": [
            "Role",
            "AwsAccountId",
            "Namespace"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTemplateAliases": [
            "AwsAccountId",
            "TemplateId"
        ],
        "ListTemplateVersions": [
            "AwsAccountId",
            "TemplateId"
        ],
        "ListTemplates": [
            "AwsAccountId"
        ],
        "ListThemeAliases": [
            "AwsAccountId",
            "ThemeId"
        ],
        "ListThemeVersions": [
            "AwsAccountId",
            "ThemeId"
        ],
        "ListThemes": [
            "AwsAccountId"
        ],
        "ListTopicRefreshSchedules": [
            "AwsAccountId",
            "TopicId"
        ],
        "ListTopics": [
            "AwsAccountId"
        ],
        "ListUserGroups": [
            "UserName",
            "AwsAccountId",
            "Namespace"
        ],
        "ListUsers": [
            "AwsAccountId",
            "Namespace"
        ],
        "ListVPCConnections": [
            "AwsAccountId"
        ],
        "PutDataSetRefreshProperties": [
            "AwsAccountId",
            "DataSetId",
            "DataSetRefreshProperties"
        ],
        "RegisterUser": [
            "IdentityType",
            "Email",
            "UserRole",
            "AwsAccountId",
            "Namespace"
        ],
        "RestoreAnalysis": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "SearchAnalyses": [
            "AwsAccountId",
            "Filters"
        ],
        "SearchDashboards": [
            "AwsAccountId",
            "Filters"
        ],
        "SearchDataSets": [
            "AwsAccountId",
            "Filters"
        ],
        "SearchDataSources": [
            "AwsAccountId",
            "Filters"
        ],
        "SearchFolders": [
            "AwsAccountId",
            "Filters"
        ],
        "SearchGroups": [
            "AwsAccountId",
            "Namespace",
            "Filters"
        ],
        "StartAssetBundleExportJob": [
            "AwsAccountId",
            "AssetBundleExportJobId",
            "ResourceArns",
            "ExportFormat"
        ],
        "StartAssetBundleImportJob": [
            "AwsAccountId",
            "AssetBundleImportJobId",
            "AssetBundleImportSource"
        ],
        "StartDashboardSnapshotJob": [
            "AwsAccountId",
            "DashboardId",
            "SnapshotJobId",
            "UserConfiguration",
            "SnapshotConfiguration"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAccountCustomization": [
            "AwsAccountId",
            "AccountCustomization"
        ],
        "UpdateAccountSettings": [
            "AwsAccountId",
            "DefaultNamespace"
        ],
        "UpdateAnalysis": [
            "AwsAccountId",
            "AnalysisId",
            "Name"
        ],
        "UpdateAnalysisPermissions": [
            "AwsAccountId",
            "AnalysisId"
        ],
        "UpdateDashboard": [
            "AwsAccountId",
            "DashboardId",
            "Name"
        ],
        "UpdateDashboardLinks": [
            "AwsAccountId",
            "DashboardId",
            "LinkEntities"
        ],
        "UpdateDashboardPermissions": [
            "AwsAccountId",
            "DashboardId"
        ],
        "UpdateDashboardPublishedVersion": [
            "AwsAccountId",
            "DashboardId",
            "VersionNumber"
        ],
        "UpdateDataSet": [
            "AwsAccountId",
            "DataSetId",
            "Name",
            "PhysicalTableMap",
            "ImportMode"
        ],
        "UpdateDataSetPermissions": [
            "AwsAccountId",
            "DataSetId"
        ],
        "UpdateDataSource": [
            "AwsAccountId",
            "DataSourceId",
            "Name"
        ],
        "UpdateDataSourcePermissions": [
            "AwsAccountId",
            "DataSourceId"
        ],
        "UpdateFolder": [
            "AwsAccountId",
            "FolderId",
            "Name"
        ],
        "UpdateFolderPermissions": [
            "AwsAccountId",
            "FolderId"
        ],
        "UpdateGroup": [
            "GroupName",
            "AwsAccountId",
            "Namespace"
        ],
        "UpdateIAMPolicyAssignment": [
            "AwsAccountId",
            "AssignmentName",
            "Namespace"
        ],
        "UpdateIdentityPropagationConfig": [
            "AwsAccountId",
            "Service"
        ],
        "UpdateIpRestriction": [
            "AwsAccountId"
        ],
        "UpdatePublicSharingSettings": [
            "AwsAccountId"
        ],
        "UpdateRefreshSchedule": [
            "DataSetId",
            "AwsAccountId",
            "Schedule"
        ],
        "UpdateRoleCustomPermission": [
            "CustomPermissionsName",
            "Role",
            "AwsAccountId",
            "Namespace"
        ],
        "UpdateTemplate": [
            "AwsAccountId",
            "TemplateId"
        ],
        "UpdateTemplateAlias": [
            "AwsAccountId",
            "TemplateId",
            "AliasName",
            "TemplateVersionNumber"
        ],
        "UpdateTemplatePermissions": [
            "AwsAccountId",
            "TemplateId"
        ],
        "UpdateTheme": [
            "AwsAccountId",
            "ThemeId",
            "BaseThemeId"
        ],
        "UpdateThemeAlias": [
            "AwsAccountId",
            "ThemeId",
            "AliasName",
            "ThemeVersionNumber"
        ],
        "UpdateThemePermissions": [
            "AwsAccountId",
            "ThemeId"
        ],
        "UpdateTopic": [
            "AwsAccountId",
            "TopicId",
            "Topic"
        ],
        "UpdateTopicPermissions": [
            "AwsAccountId",
            "TopicId"
        ],
        "UpdateTopicRefreshSchedule": [
            "AwsAccountId",
            "TopicId",
            "DatasetId",
            "RefreshSchedule"
        ],
        "UpdateUser": [
            "UserName",
            "AwsAccountId",
            "Namespace",
            "Email",
            "Role"
        ],
        "UpdateVPCConnection": [
            "AwsAccountId",
            "VPCConnectionId",
            "Name",
            "SubnetIds",
            "SecurityGroupIds",
            "RoleArn"
        ]
    },
    "ram": {
        "AcceptResourceShareInvitation": [
            "resourceShareInvitationArn"
        ],
        "AssociateResourceShare": [
            "resourceShareArn"
        ],
        "AssociateResourceSharePermission": [
            "resourceShareArn",
            "permissionArn"
        ],
        "CreatePermission": [
            "name",
            "resourceType",
            "policyTemplate"
        ],
        "CreatePermissionVersion": [
            "permissionArn",
            "policyTemplate"
        ],
        "CreateResourceShare": [
            "name"
        ],
        "DeletePermission": [
            "permissionArn"
        ],
        "DeletePermissionVersion": [
            "permissionArn",
            "permissionVersion"
        ],
        "DeleteResourceShare": [
            "resourceShareArn"
        ],
        "DisassociateResourceShare": [
            "resourceShareArn"
        ],
        "DisassociateResourceSharePermission": [
            "resourceShareArn",
            "permissionArn"
        ],
        "EnableSharingWithAwsOrganization": "",
        "GetPermission": [
            "permissionArn"
        ],
        "GetResourcePolicies": [
            "resourceArns"
        ],
        "GetResourceShareAssociations": [
            "associationType"
        ],
        "GetResourceShareInvitations": "",
        "GetResourceShares": [
            "resourceOwner"
        ],
        "ListPendingInvitationResources": [
            "resourceShareInvitationArn"
        ],
        "ListPermissionAssociations": "",
        "ListPermissionVersions": [
            "permissionArn"
        ],
        "ListPermissions": "",
        "ListPrincipals": [
            "resourceOwner"
        ],
        "ListReplacePermissionAssociationsWork": "",
        "ListResourceSharePermissions": [
            "resourceShareArn"
        ],
        "ListResourceTypes": "",
        "ListResources": [
            "resourceOwner"
        ],
        "PromotePermissionCreatedFromPolicy": [
            "permissionArn",
            "name"
        ],
        "PromoteResourceShareCreatedFromPolicy": [
            "resourceShareArn"
        ],
        "RejectResourceShareInvitation": [
            "resourceShareInvitationArn"
        ],
        "ReplacePermissionAssociations": [
            "fromPermissionArn",
            "toPermissionArn"
        ],
        "SetDefaultPermissionVersion": [
            "permissionArn",
            "permissionVersion"
        ],
        "TagResource": [
            "tags"
        ],
        "UntagResource": [
            "tagKeys"
        ],
        "UpdateResourceShare": [
            "resourceShareArn"
        ]
    },
    "rbin": {
        "CreateRule": [
            "RetentionPeriod",
            "ResourceType"
        ],
        "DeleteRule": [
            "Identifier"
        ],
        "GetRule": [
            "Identifier"
        ],
        "ListRules": [
            "ResourceType"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "LockRule": [
            "Identifier",
            "LockConfiguration"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UnlockRule": [
            "Identifier"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateRule": [
            "Identifier"
        ]
    },
    "rds": {
        "AddRoleToDBCluster": [
            "DBClusterIdentifier",
            "RoleArn"
        ],
        "AddRoleToDBInstance": [
            "DBInstanceIdentifier",
            "RoleArn",
            "FeatureName"
        ],
        "AddSourceIdentifierToSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "AddTagsToResource": [
            "ResourceName",
            "Tags"
        ],
        "ApplyPendingMaintenanceAction": [
            "ResourceIdentifier",
            "ApplyAction",
            "OptInType"
        ],
        "AuthorizeDBSecurityGroupIngress": [
            "DBSecurityGroupName"
        ],
        "BacktrackDBCluster": [
            "DBClusterIdentifier",
            "BacktrackTo"
        ],
        "CancelExportTask": [
            "ExportTaskIdentifier"
        ],
        "CopyDBClusterParameterGroup": [
            "SourceDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupIdentifier",
            "TargetDBClusterParameterGroupDescription"
        ],
        "CopyDBClusterSnapshot": [
            "SourceDBClusterSnapshotIdentifier",
            "TargetDBClusterSnapshotIdentifier"
        ],
        "CopyDBParameterGroup": [
            "SourceDBParameterGroupIdentifier",
            "TargetDBParameterGroupIdentifier",
            "TargetDBParameterGroupDescription"
        ],
        "CopyDBSnapshot": [
            "SourceDBSnapshotIdentifier",
            "TargetDBSnapshotIdentifier"
        ],
        "CopyOptionGroup": [
            "SourceOptionGroupIdentifier",
            "TargetOptionGroupIdentifier",
            "TargetOptionGroupDescription"
        ],
        "CreateBlueGreenDeployment": [
            "BlueGreenDeploymentName",
            "Source"
        ],
        "CreateCustomDBEngineVersion": [
            "Engine",
            "EngineVersion"
        ],
        "CreateDBCluster": [
            "DBClusterIdentifier",
            "Engine"
        ],
        "CreateDBClusterEndpoint": [
            "DBClusterIdentifier",
            "DBClusterEndpointIdentifier",
            "EndpointType"
        ],
        "CreateDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "DBParameterGroupFamily",
            "Description"
        ],
        "CreateDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier",
            "DBClusterIdentifier"
        ],
        "CreateDBInstance": [
            "DBInstanceIdentifier",
            "DBInstanceClass",
            "Engine"
        ],
        "CreateDBInstanceReadReplica": [
            "DBInstanceIdentifier"
        ],
        "CreateDBParameterGroup": [
            "DBParameterGroupName",
            "DBParameterGroupFamily",
            "Description"
        ],
        "CreateDBProxy": [
            "DBProxyName",
            "EngineFamily",
            "Auth",
            "RoleArn",
            "VpcSubnetIds"
        ],
        "CreateDBProxyEndpoint": [
            "DBProxyName",
            "DBProxyEndpointName",
            "VpcSubnetIds"
        ],
        "CreateDBSecurityGroup": [
            "DBSecurityGroupName",
            "DBSecurityGroupDescription"
        ],
        "CreateDBShardGroup": [
            "DBShardGroupIdentifier",
            "DBClusterIdentifier",
            "MaxACU"
        ],
        "CreateDBSnapshot": [
            "DBSnapshotIdentifier",
            "DBInstanceIdentifier"
        ],
        "CreateDBSubnetGroup": [
            "DBSubnetGroupName",
            "DBSubnetGroupDescription",
            "SubnetIds"
        ],
        "CreateEventSubscription": [
            "SubscriptionName",
            "SnsTopicArn"
        ],
        "CreateGlobalCluster": "",
        "CreateIntegration": [
            "SourceArn",
            "TargetArn",
            "IntegrationName"
        ],
        "CreateOptionGroup": [
            "OptionGroupName",
            "EngineName",
            "MajorEngineVersion",
            "OptionGroupDescription"
        ],
        "CreateTenantDatabase": [
            "DBInstanceIdentifier",
            "TenantDBName",
            "MasterUsername",
            "MasterUserPassword"
        ],
        "DeleteBlueGreenDeployment": [
            "BlueGreenDeploymentIdentifier"
        ],
        "DeleteCustomDBEngineVersion": [
            "Engine",
            "EngineVersion"
        ],
        "DeleteDBCluster": [
            "DBClusterIdentifier"
        ],
        "DeleteDBClusterAutomatedBackup": [
            "DbClusterResourceId"
        ],
        "DeleteDBClusterEndpoint": [
            "DBClusterEndpointIdentifier"
        ],
        "DeleteDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "DeleteDBClusterSnapshot": [
            "DBClusterSnapshotIdentifier"
        ],
        "DeleteDBInstance": [
            "DBInstanceIdentifier"
        ],
        "DeleteDBInstanceAutomatedBackup": "",
        "DeleteDBParameterGroup": [
            "DBParameterGroupName"
        ],
        "DeleteDBProxy": [
            "DBProxyName"
        ],
        "DeleteDBProxyEndpoint": [
            "DBProxyEndpointName"
        ],
        "DeleteDBSecurityGroup": [
            "DBSecurityGroupName"
        ],
        "DeleteDBShardGroup": [
            "DBShardGroupIdentifier"
        ],
        "DeleteDBSnapshot": [
            "DBSnapshotIdentifier"
        ],
        "DeleteDBSubnetGroup": [
            "DBSubnetGroupName"
        ],
        "DeleteEventSubscription": [
            "SubscriptionName"
        ],
        "DeleteGlobalCluster": [
            "GlobalClusterIdentifier"
        ],
        "DeleteIntegration": [
            "IntegrationIdentifier"
        ],
        "DeleteOptionGroup": [
            "OptionGroupName"
        ],
        "DeleteTenantDatabase": [
            "DBInstanceIdentifier",
            "TenantDBName"
        ],
        "DeregisterDBProxyTargets": [
            "DBProxyName"
        ],
        "DescribeAccountAttributes": "",
        "DescribeBlueGreenDeployments": "",
        "DescribeCertificates": "",
        "DescribeDBClusterAutomatedBackups": "",
        "DescribeDBClusterBacktracks": [
            "DBClusterIdentifier"
        ],
        "DescribeDBClusterEndpoints": "",
        "DescribeDBClusterParameterGroups": "",
        "DescribeDBClusterParameters": [
            "DBClusterParameterGroupName"
        ],
        "DescribeDBClusterSnapshotAttributes": [
            "DBClusterSnapshotIdentifier"
        ],
        "DescribeDBClusterSnapshots": "",
        "DescribeDBClusters": "",
        "DescribeDBEngineVersions": "",
        "DescribeDBInstanceAutomatedBackups": "",
        "DescribeDBInstances": "",
        "DescribeDBLogFiles": [
            "DBInstanceIdentifier"
        ],
        "DescribeDBParameterGroups": "",
        "DescribeDBParameters": [
            "DBParameterGroupName"
        ],
        "DescribeDBProxies": "",
        "DescribeDBProxyEndpoints": "",
        "DescribeDBProxyTargetGroups": [
            "DBProxyName"
        ],
        "DescribeDBProxyTargets": [
            "DBProxyName"
        ],
        "DescribeDBRecommendations": "",
        "DescribeDBSecurityGroups": "",
        "DescribeDBShardGroups": "",
        "DescribeDBSnapshotAttributes": [
            "DBSnapshotIdentifier"
        ],
        "DescribeDBSnapshotTenantDatabases": "",
        "DescribeDBSnapshots": "",
        "DescribeDBSubnetGroups": "",
        "DescribeEngineDefaultClusterParameters": [
            "DBParameterGroupFamily"
        ],
        "DescribeEngineDefaultParameters": [
            "DBParameterGroupFamily"
        ],
        "DescribeEventCategories": "",
        "DescribeEventSubscriptions": "",
        "DescribeEvents": "",
        "DescribeExportTasks": "",
        "DescribeGlobalClusters": "",
        "DescribeIntegrations": "",
        "DescribeOptionGroupOptions": [
            "EngineName"
        ],
        "DescribeOptionGroups": "",
        "DescribeOrderableDBInstanceOptions": [
            "Engine"
        ],
        "DescribePendingMaintenanceActions": "",
        "DescribeReservedDBInstances": "",
        "DescribeReservedDBInstancesOfferings": "",
        "DescribeSourceRegions": "",
        "DescribeTenantDatabases": "",
        "DescribeValidDBInstanceModifications": [
            "DBInstanceIdentifier"
        ],
        "DisableHttpEndpoint": [
            "ResourceArn"
        ],
        "DownloadDBLogFilePortion": [
            "DBInstanceIdentifier",
            "LogFileName"
        ],
        "EnableHttpEndpoint": [
            "ResourceArn"
        ],
        "FailoverDBCluster": [
            "DBClusterIdentifier"
        ],
        "FailoverGlobalCluster": [
            "GlobalClusterIdentifier",
            "TargetDbClusterIdentifier"
        ],
        "ListTagsForResource": [
            "ResourceName"
        ],
        "ModifyActivityStream": "",
        "ModifyCertificates": "",
        "ModifyCurrentDBClusterCapacity": [
            "DBClusterIdentifier"
        ],
        "ModifyCustomDBEngineVersion": [
            "Engine",
            "EngineVersion"
        ],
        "ModifyDBCluster": [
            "DBClusterIdentifier"
        ],
        "ModifyDBClusterEndpoint": [
            "DBClusterEndpointIdentifier"
        ],
        "ModifyDBClusterParameterGroup": [
            "DBClusterParameterGroupName",
            "Parameters"
        ],
        "ModifyDBClusterSnapshotAttribute": [
            "DBClusterSnapshotIdentifier",
            "AttributeName"
        ],
        "ModifyDBInstance": [
            "DBInstanceIdentifier"
        ],
        "ModifyDBParameterGroup": [
            "DBParameterGroupName",
            "Parameters"
        ],
        "ModifyDBProxy": [
            "DBProxyName"
        ],
        "ModifyDBProxyEndpoint": [
            "DBProxyEndpointName"
        ],
        "ModifyDBProxyTargetGroup": [
            "TargetGroupName",
            "DBProxyName"
        ],
        "ModifyDBRecommendation": [
            "RecommendationId"
        ],
        "ModifyDBShardGroup": [
            "DBShardGroupIdentifier"
        ],
        "ModifyDBSnapshot": [
            "DBSnapshotIdentifier"
        ],
        "ModifyDBSnapshotAttribute": [
            "DBSnapshotIdentifier",
            "AttributeName"
        ],
        "ModifyDBSubnetGroup": [
            "DBSubnetGroupName",
            "SubnetIds"
        ],
        "ModifyEventSubscription": [
            "SubscriptionName"
        ],
        "ModifyGlobalCluster": "",
        "ModifyIntegration": [
            "IntegrationIdentifier"
        ],
        "ModifyOptionGroup": [
            "OptionGroupName"
        ],
        "ModifyTenantDatabase": [
            "DBInstanceIdentifier",
            "TenantDBName"
        ],
        "PromoteReadReplica": [
            "DBInstanceIdentifier"
        ],
        "PromoteReadReplicaDBCluster": [
            "DBClusterIdentifier"
        ],
        "PurchaseReservedDBInstancesOffering": [
            "ReservedDBInstancesOfferingId"
        ],
        "RebootDBCluster": [
            "DBClusterIdentifier"
        ],
        "RebootDBInstance": [
            "DBInstanceIdentifier"
        ],
        "RebootDBShardGroup": [
            "DBShardGroupIdentifier"
        ],
        "RegisterDBProxyTargets": [
            "DBProxyName"
        ],
        "RemoveFromGlobalCluster": "",
        "RemoveRoleFromDBCluster": [
            "DBClusterIdentifier",
            "RoleArn"
        ],
        "RemoveRoleFromDBInstance": [
            "DBInstanceIdentifier",
            "RoleArn",
            "FeatureName"
        ],
        "RemoveSourceIdentifierFromSubscription": [
            "SubscriptionName",
            "SourceIdentifier"
        ],
        "RemoveTagsFromResource": [
            "ResourceName",
            "TagKeys"
        ],
        "ResetDBClusterParameterGroup": [
            "DBClusterParameterGroupName"
        ],
        "ResetDBParameterGroup": [
            "DBParameterGroupName"
        ],
        "RestoreDBClusterFromS3": [
            "DBClusterIdentifier",
            "Engine",
            "MasterUsername",
            "SourceEngine",
            "SourceEngineVersion",
            "S3BucketName",
            "S3IngestionRoleArn"
        ],
        "RestoreDBClusterFromSnapshot": [
            "DBClusterIdentifier",
            "SnapshotIdentifier",
            "Engine"
        ],
        "RestoreDBClusterToPointInTime": [
            "DBClusterIdentifier"
        ],
        "RestoreDBInstanceFromDBSnapshot": [
            "DBInstanceIdentifier"
        ],
        "RestoreDBInstanceFromS3": [
            "DBInstanceIdentifier",
            "DBInstanceClass",
            "Engine",
            "SourceEngine",
            "SourceEngineVersion",
            "S3BucketName",
            "S3IngestionRoleArn"
        ],
        "RestoreDBInstanceToPointInTime": [
            "TargetDBInstanceIdentifier"
        ],
        "RevokeDBSecurityGroupIngress": [
            "DBSecurityGroupName"
        ],
        "StartActivityStream": [
            "ResourceArn",
            "Mode",
            "KmsKeyId"
        ],
        "StartDBCluster": [
            "DBClusterIdentifier"
        ],
        "StartDBInstance": [
            "DBInstanceIdentifier"
        ],
        "StartDBInstanceAutomatedBackupsReplication": [
            "SourceDBInstanceArn"
        ],
        "StartExportTask": [
            "ExportTaskIdentifier",
            "SourceArn",
            "S3BucketName",
            "IamRoleArn",
            "KmsKeyId"
        ],
        "StopActivityStream": [
            "ResourceArn"
        ],
        "StopDBCluster": [
            "DBClusterIdentifier"
        ],
        "StopDBInstance": [
            "DBInstanceIdentifier"
        ],
        "StopDBInstanceAutomatedBackupsReplication": [
            "SourceDBInstanceArn"
        ],
        "SwitchoverBlueGreenDeployment": [
            "BlueGreenDeploymentIdentifier"
        ],
        "SwitchoverGlobalCluster": [
            "GlobalClusterIdentifier",
            "TargetDbClusterIdentifier"
        ],
        "SwitchoverReadReplica": [
            "DBInstanceIdentifier"
        ]
    },
    "rds-data": {
        "BatchExecuteStatement": [
            "resourceArn",
            "secretArn",
            "sql"
        ],
        "BeginTransaction": [
            "resourceArn",
            "secretArn"
        ],
        "CommitTransaction": [
            "resourceArn",
            "secretArn",
            "transactionId"
        ],
        "ExecuteSql": [
            "dbClusterOrInstanceArn",
            "awsSecretStoreArn",
            "sqlStatements"
        ],
        "ExecuteStatement": [
            "resourceArn",
            "secretArn",
            "sql"
        ],
        "RollbackTransaction": [
            "resourceArn",
            "secretArn",
            "transactionId"
        ]
    },
    "redshift": {
        "AcceptReservedNodeExchange": [
            "ReservedNodeId",
            "TargetReservedNodeOfferingId"
        ],
        "AddPartner": "",
        "AssociateDataShareConsumer": [
            "DataShareArn"
        ],
        "AuthorizeClusterSecurityGroupIngress": [
            "ClusterSecurityGroupName"
        ],
        "AuthorizeDataShare": [
            "DataShareArn",
            "ConsumerIdentifier"
        ],
        "AuthorizeEndpointAccess": [
            "Account"
        ],
        "AuthorizeSnapshotAccess": [
            "AccountWithRestoreAccess"
        ],
        "BatchDeleteClusterSnapshots": [
            "Identifiers"
        ],
        "BatchModifyClusterSnapshots": [
            "SnapshotIdentifierList"
        ],
        "CancelResize": [
            "ClusterIdentifier"
        ],
        "CopyClusterSnapshot": [
            "SourceSnapshotIdentifier",
            "TargetSnapshotIdentifier"
        ],
        "CreateAuthenticationProfile": [
            "AuthenticationProfileName",
            "AuthenticationProfileContent"
        ],
        "CreateCluster": [
            "ClusterIdentifier",
            "NodeType",
            "MasterUsername"
        ],
        "CreateClusterParameterGroup": [
            "ParameterGroupName",
            "ParameterGroupFamily",
            "Description"
        ],
        "CreateClusterSecurityGroup": [
            "ClusterSecurityGroupName",
            "Description"
        ],
        "CreateClusterSnapshot": [
            "SnapshotIdentifier",
            "ClusterIdentifier"
        ],
        "CreateClusterSubnetGroup": [
            "ClusterSubnetGroupName",
            "Description",
            "SubnetIds"
        ],
        "CreateCustomDomainAssociation": [
            "CustomDomainName",
            "CustomDomainCertificateArn",
            "ClusterIdentifier"
        ],
        "CreateEndpointAccess": [
            "EndpointName",
            "SubnetGroupName"
        ],
        "CreateEventSubscription": [
            "SubscriptionName",
            "SnsTopicArn"
        ],
        "CreateHsmClientCertificate": [
            "HsmClientCertificateIdentifier"
        ],
        "CreateHsmConfiguration": [
            "HsmConfigurationIdentifier",
            "Description",
            "HsmIpAddress",
            "HsmPartitionName",
            "HsmPartitionPassword",
            "HsmServerPublicCertificate"
        ],
        "CreateRedshiftIdcApplication": [
            "IdcInstanceArn",
            "RedshiftIdcApplicationName",
            "IdcDisplayName",
            "IamRoleArn"
        ],
        "CreateScheduledAction": [
            "ScheduledActionName",
            "TargetAction",
            "Schedule",
            "IamRole"
        ],
        "CreateSnapshotCopyGrant": [
            "SnapshotCopyGrantName"
        ],
        "CreateSnapshotSchedule": "",
        "CreateTags": [
            "ResourceName",
            "Tags"
        ],
        "CreateUsageLimit": [
            "ClusterIdentifier",
            "FeatureType",
            "LimitType",
            "Amount"
        ],
        "DeauthorizeDataShare": [
            "DataShareArn",
            "ConsumerIdentifier"
        ],
        "DeleteAuthenticationProfile": [
            "AuthenticationProfileName"
        ],
        "DeleteCluster": [
            "ClusterIdentifier"
        ],
        "DeleteClusterParameterGroup": [
            "ParameterGroupName"
        ],
        "DeleteClusterSecurityGroup": [
            "ClusterSecurityGroupName"
        ],
        "DeleteClusterSnapshot": "",
        "DeleteClusterSubnetGroup": [
            "ClusterSubnetGroupName"
        ],
        "DeleteCustomDomainAssociation": [
            "ClusterIdentifier",
            "CustomDomainName"
        ],
        "DeleteEndpointAccess": [
            "EndpointName"
        ],
        "DeleteEventSubscription": [
            "SubscriptionName"
        ],
        "DeleteHsmClientCertificate": [
            "HsmClientCertificateIdentifier"
        ],
        "DeleteHsmConfiguration": [
            "HsmConfigurationIdentifier"
        ],
        "DeletePartner": "",
        "DeleteRedshiftIdcApplication": [
            "RedshiftIdcApplicationArn"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn"
        ],
        "DeleteScheduledAction": [
            "ScheduledActionName"
        ],
        "DeleteSnapshotCopyGrant": [
            "SnapshotCopyGrantName"
        ],
        "DeleteSnapshotSchedule": [
            "ScheduleIdentifier"
        ],
        "DeleteTags": [
            "ResourceName",
            "TagKeys"
        ],
        "DeleteUsageLimit": [
            "UsageLimitId"
        ],
        "DescribeAccountAttributes": "",
        "DescribeAuthenticationProfiles": "",
        "DescribeClusterDbRevisions": "",
        "DescribeClusterParameterGroups": "",
        "DescribeClusterParameters": [
            "ParameterGroupName"
        ],
        "DescribeClusterSecurityGroups": "",
        "DescribeClusterSnapshots": "",
        "DescribeClusterSubnetGroups": "",
        "DescribeClusterTracks": "",
        "DescribeClusterVersions": "",
        "DescribeClusters": "",
        "DescribeCustomDomainAssociations": "",
        "DescribeDataShares": "",
        "DescribeDataSharesForConsumer": "",
        "DescribeDataSharesForProducer": "",
        "DescribeDefaultClusterParameters": [
            "ParameterGroupFamily"
        ],
        "DescribeEndpointAccess": "",
        "DescribeEndpointAuthorization": "",
        "DescribeEventCategories": "",
        "DescribeEventSubscriptions": "",
        "DescribeEvents": "",
        "DescribeHsmClientCertificates": "",
        "DescribeHsmConfigurations": "",
        "DescribeInboundIntegrations": "",
        "DescribeLoggingStatus": [
            "ClusterIdentifier"
        ],
        "DescribeNodeConfigurationOptions": [
            "ActionType"
        ],
        "DescribeOrderableClusterOptions": "",
        "DescribePartners": [
            "AccountId",
            "ClusterIdentifier"
        ],
        "DescribeRedshiftIdcApplications": "",
        "DescribeReservedNodeExchangeStatus": "",
        "DescribeReservedNodeOfferings": "",
        "DescribeReservedNodes": "",
        "DescribeResize": [
            "ClusterIdentifier"
        ],
        "DescribeScheduledActions": "",
        "DescribeSnapshotCopyGrants": "",
        "DescribeSnapshotSchedules": "",
        "DescribeStorage": "",
        "DescribeTableRestoreStatus": "",
        "DescribeTags": "",
        "DescribeUsageLimits": "",
        "DisableLogging": [
            "ClusterIdentifier"
        ],
        "DisableSnapshotCopy": [
            "ClusterIdentifier"
        ],
        "DisassociateDataShareConsumer": [
            "DataShareArn"
        ],
        "EnableLogging": [
            "ClusterIdentifier"
        ],
        "EnableSnapshotCopy": [
            "ClusterIdentifier",
            "DestinationRegion"
        ],
        "FailoverPrimaryCompute": [
            "ClusterIdentifier"
        ],
        "GetClusterCredentials": [
            "DbUser"
        ],
        "GetClusterCredentialsWithIAM": "",
        "GetReservedNodeExchangeConfigurationOptions": [
            "ActionType"
        ],
        "GetReservedNodeExchangeOfferings": [
            "ReservedNodeId"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "ListRecommendations": "",
        "ModifyAquaConfiguration": [
            "ClusterIdentifier"
        ],
        "ModifyAuthenticationProfile": [
            "AuthenticationProfileName",
            "AuthenticationProfileContent"
        ],
        "ModifyCluster": [
            "ClusterIdentifier"
        ],
        "ModifyClusterDbRevision": [
            "ClusterIdentifier",
            "RevisionTarget"
        ],
        "ModifyClusterIamRoles": [
            "ClusterIdentifier"
        ],
        "ModifyClusterMaintenance": [
            "ClusterIdentifier"
        ],
        "ModifyClusterParameterGroup": [
            "ParameterGroupName",
            "Parameters"
        ],
        "ModifyClusterSnapshot": [
            "SnapshotIdentifier"
        ],
        "ModifyClusterSnapshotSchedule": [
            "ClusterIdentifier"
        ],
        "ModifyClusterSubnetGroup": [
            "ClusterSubnetGroupName",
            "SubnetIds"
        ],
        "ModifyCustomDomainAssociation": [
            "CustomDomainName",
            "CustomDomainCertificateArn",
            "ClusterIdentifier"
        ],
        "ModifyEndpointAccess": [
            "EndpointName"
        ],
        "ModifyEventSubscription": [
            "SubscriptionName"
        ],
        "ModifyRedshiftIdcApplication": [
            "RedshiftIdcApplicationArn"
        ],
        "ModifyScheduledAction": [
            "ScheduledActionName"
        ],
        "ModifySnapshotCopyRetentionPeriod": [
            "ClusterIdentifier",
            "RetentionPeriod"
        ],
        "ModifySnapshotSchedule": [
            "ScheduleIdentifier",
            "ScheduleDefinitions"
        ],
        "ModifyUsageLimit": [
            "UsageLimitId"
        ],
        "PauseCluster": "",
        "PurchaseReservedNodeOffering": [
            "ReservedNodeOfferingId"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "Policy"
        ],
        "RebootCluster": [
            "ClusterIdentifier"
        ],
        "RejectDataShare": [
            "DataShareArn"
        ],
        "ResetClusterParameterGroup": [
            "ParameterGroupName"
        ],
        "ResizeCluster": "",
        "RestoreFromClusterSnapshot": [
            "ClusterIdentifier"
        ],
        "RestoreTableFromClusterSnapshot": [
            "ClusterIdentifier",
            "SnapshotIdentifier",
            "SourceDatabaseName",
            "SourceTableName",
            "NewTableName"
        ],
        "ResumeCluster": "",
        "RevokeClusterSecurityGroupIngress": [
            "ClusterSecurityGroupName"
        ],
        "RevokeEndpointAccess": "",
        "RevokeSnapshotAccess": [
            "AccountWithRestoreAccess"
        ],
        "RotateEncryptionKey": [
            "ClusterIdentifier"
        ],
        "UpdatePartnerStatus": [
            "AccountId",
            "ClusterIdentifier",
            "DatabaseName",
            "PartnerName",
            "Status"
        ]
    },
    "redshift-data": {
        "BatchExecuteStatement": [
            "Database",
            "Sqls"
        ],
        "CancelStatement": [
            "Id"
        ],
        "DescribeStatement": [
            "Id"
        ],
        "DescribeTable": [
            "Database"
        ],
        "ExecuteStatement": [
            "Database",
            "Sql"
        ],
        "GetStatementResult": [
            "Id"
        ],
        "ListDatabases": [
            "Database"
        ],
        "ListSchemas": [
            "Database"
        ],
        "ListStatements": "",
        "ListTables": [
            "Database"
        ]
    },
    "redshift-serverless": {
        "ConvertRecoveryPointToSnapshot": [
            "recoveryPointId",
            "snapshotName"
        ],
        "CreateCustomDomainAssociation": [
            "customDomainCertificateArn",
            "customDomainName",
            "workgroupName"
        ],
        "CreateEndpointAccess": [
            "endpointName",
            "subnetIds",
            "workgroupName"
        ],
        "CreateNamespace": [
            "namespaceName"
        ],
        "CreateScheduledAction": [
            "namespaceName",
            "roleArn",
            "schedule",
            "scheduledActionName",
            "targetAction"
        ],
        "CreateSnapshot": [
            "namespaceName",
            "snapshotName"
        ],
        "CreateSnapshotCopyConfiguration": [
            "destinationRegion",
            "namespaceName"
        ],
        "CreateUsageLimit": [
            "amount",
            "resourceArn",
            "usageType"
        ],
        "CreateWorkgroup": [
            "namespaceName",
            "workgroupName"
        ],
        "DeleteCustomDomainAssociation": [
            "customDomainName",
            "workgroupName"
        ],
        "DeleteEndpointAccess": [
            "endpointName"
        ],
        "DeleteNamespace": [
            "namespaceName"
        ],
        "DeleteResourcePolicy": [
            "resourceArn"
        ],
        "DeleteScheduledAction": [
            "scheduledActionName"
        ],
        "DeleteSnapshot": [
            "snapshotName"
        ],
        "DeleteSnapshotCopyConfiguration": [
            "snapshotCopyConfigurationId"
        ],
        "DeleteUsageLimit": [
            "usageLimitId"
        ],
        "DeleteWorkgroup": [
            "workgroupName"
        ],
        "GetCredentials": "",
        "GetCustomDomainAssociation": [
            "customDomainName",
            "workgroupName"
        ],
        "GetEndpointAccess": [
            "endpointName"
        ],
        "GetNamespace": [
            "namespaceName"
        ],
        "GetRecoveryPoint": [
            "recoveryPointId"
        ],
        "GetResourcePolicy": [
            "resourceArn"
        ],
        "GetScheduledAction": [
            "scheduledActionName"
        ],
        "GetSnapshot": "",
        "GetTableRestoreStatus": [
            "tableRestoreRequestId"
        ],
        "GetUsageLimit": [
            "usageLimitId"
        ],
        "GetWorkgroup": [
            "workgroupName"
        ],
        "ListCustomDomainAssociations": "",
        "ListEndpointAccess": "",
        "ListNamespaces": "",
        "ListRecoveryPoints": "",
        "ListScheduledActions": "",
        "ListSnapshotCopyConfigurations": "",
        "ListSnapshots": "",
        "ListTableRestoreStatus": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListUsageLimits": "",
        "ListWorkgroups": "",
        "PutResourcePolicy": [
            "policy",
            "resourceArn"
        ],
        "RestoreFromRecoveryPoint": [
            "namespaceName",
            "recoveryPointId",
            "workgroupName"
        ],
        "RestoreFromSnapshot": [
            "namespaceName",
            "workgroupName"
        ],
        "RestoreTableFromRecoveryPoint": [
            "namespaceName",
            "newTableName",
            "recoveryPointId",
            "sourceDatabaseName",
            "sourceTableName",
            "workgroupName"
        ],
        "RestoreTableFromSnapshot": [
            "namespaceName",
            "newTableName",
            "snapshotName",
            "sourceDatabaseName",
            "sourceTableName",
            "workgroupName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCustomDomainAssociation": [
            "customDomainCertificateArn",
            "customDomainName",
            "workgroupName"
        ],
        "UpdateEndpointAccess": [
            "endpointName"
        ],
        "UpdateNamespace": [
            "namespaceName"
        ],
        "UpdateScheduledAction": [
            "scheduledActionName"
        ],
        "UpdateSnapshot": [
            "snapshotName"
        ],
        "UpdateSnapshotCopyConfiguration": [
            "snapshotCopyConfigurationId"
        ],
        "UpdateUsageLimit": [
            "usageLimitId"
        ],
        "UpdateWorkgroup": [
            "workgroupName"
        ]
    },
    "rekognition": {
        "AssociateFaces": [
            "CollectionId",
            "UserId",
            "FaceIds"
        ],
        "CompareFaces": [
            "SourceImage",
            "TargetImage"
        ],
        "CopyProjectVersion": [
            "SourceProjectArn",
            "SourceProjectVersionArn",
            "DestinationProjectArn",
            "VersionName",
            "OutputConfig"
        ],
        "CreateCollection": [
            "CollectionId"
        ],
        "CreateDataset": [
            "DatasetType",
            "ProjectArn"
        ],
        "CreateFaceLivenessSession": "",
        "CreateProject": [
            "ProjectName"
        ],
        "CreateProjectVersion": [
            "ProjectArn",
            "VersionName",
            "OutputConfig"
        ],
        "CreateStreamProcessor": [
            "Input",
            "Output",
            "Name",
            "Settings",
            "RoleArn"
        ],
        "CreateUser": [
            "CollectionId",
            "UserId"
        ],
        "DeleteCollection": [
            "CollectionId"
        ],
        "DeleteDataset": [
            "DatasetArn"
        ],
        "DeleteFaces": [
            "CollectionId",
            "FaceIds"
        ],
        "DeleteProject": [
            "ProjectArn"
        ],
        "DeleteProjectPolicy": [
            "ProjectArn",
            "PolicyName"
        ],
        "DeleteProjectVersion": [
            "ProjectVersionArn"
        ],
        "DeleteStreamProcessor": [
            "Name"
        ],
        "DeleteUser": [
            "CollectionId",
            "UserId"
        ],
        "DescribeCollection": [
            "CollectionId"
        ],
        "DescribeDataset": [
            "DatasetArn"
        ],
        "DescribeProjectVersions": [
            "ProjectArn"
        ],
        "DescribeProjects": "",
        "DescribeStreamProcessor": [
            "Name"
        ],
        "DetectCustomLabels": [
            "ProjectVersionArn",
            "Image"
        ],
        "DetectFaces": [
            "Image"
        ],
        "DetectLabels": [
            "Image"
        ],
        "DetectModerationLabels": [
            "Image"
        ],
        "DetectProtectiveEquipment": [
            "Image"
        ],
        "DetectText": [
            "Image"
        ],
        "DisassociateFaces": [
            "CollectionId",
            "UserId",
            "FaceIds"
        ],
        "DistributeDatasetEntries": [
            "Datasets"
        ],
        "GetCelebrityInfo": [
            "Id"
        ],
        "GetCelebrityRecognition": [
            "JobId"
        ],
        "GetContentModeration": [
            "JobId"
        ],
        "GetFaceDetection": [
            "JobId"
        ],
        "GetFaceLivenessSessionResults": [
            "SessionId"
        ],
        "GetFaceSearch": [
            "JobId"
        ],
        "GetLabelDetection": [
            "JobId"
        ],
        "GetMediaAnalysisJob": [
            "JobId"
        ],
        "GetPersonTracking": [
            "JobId"
        ],
        "GetSegmentDetection": [
            "JobId"
        ],
        "GetTextDetection": [
            "JobId"
        ],
        "IndexFaces": [
            "CollectionId",
            "Image"
        ],
        "ListCollections": "",
        "ListDatasetEntries": [
            "DatasetArn"
        ],
        "ListDatasetLabels": [
            "DatasetArn"
        ],
        "ListFaces": [
            "CollectionId"
        ],
        "ListMediaAnalysisJobs": "",
        "ListProjectPolicies": [
            "ProjectArn"
        ],
        "ListStreamProcessors": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListUsers": [
            "CollectionId"
        ],
        "PutProjectPolicy": [
            "ProjectArn",
            "PolicyName",
            "PolicyDocument"
        ],
        "RecognizeCelebrities": [
            "Image"
        ],
        "SearchFaces": [
            "CollectionId",
            "FaceId"
        ],
        "SearchFacesByImage": [
            "CollectionId",
            "Image"
        ],
        "SearchUsers": [
            "CollectionId"
        ],
        "SearchUsersByImage": [
            "CollectionId",
            "Image"
        ],
        "StartCelebrityRecognition": [
            "Video"
        ],
        "StartContentModeration": [
            "Video"
        ],
        "StartFaceDetection": [
            "Video"
        ],
        "StartFaceSearch": [
            "Video",
            "CollectionId"
        ],
        "StartLabelDetection": [
            "Video"
        ],
        "StartMediaAnalysisJob": [
            "OperationsConfig",
            "Input",
            "OutputConfig"
        ],
        "StartPersonTracking": [
            "Video"
        ],
        "StartProjectVersion": [
            "ProjectVersionArn",
            "MinInferenceUnits"
        ],
        "StartSegmentDetection": [
            "Video",
            "SegmentTypes"
        ],
        "StartStreamProcessor": [
            "Name"
        ],
        "StartTextDetection": [
            "Video"
        ],
        "StopProjectVersion": [
            "ProjectVersionArn"
        ],
        "StopStreamProcessor": [
            "Name"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDatasetEntries": [
            "DatasetArn",
            "Changes"
        ],
        "UpdateStreamProcessor": [
            "Name"
        ]
    },
    "repostspace": {
        "CreateSpace": [
            "name",
            "subdomain",
            "tier"
        ],
        "DeleteSpace": [
            "spaceId"
        ],
        "DeregisterAdmin": [
            "adminId",
            "spaceId"
        ],
        "GetSpace": [
            "spaceId"
        ],
        "ListSpaces": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterAdmin": [
            "adminId",
            "spaceId"
        ],
        "SendInvites": [
            "accessorIds",
            "body",
            "spaceId",
            "title"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateSpace": [
            "spaceId"
        ]
    },
    "resiliencehub": {
        "AddDraftAppVersionResourceMappings": [
            "appArn",
            "resourceMappings"
        ],
        "BatchUpdateRecommendationStatus": [
            "appArn",
            "requestEntries"
        ],
        "CreateApp": [
            "name"
        ],
        "CreateAppVersionAppComponent": [
            "appArn",
            "name",
            "type"
        ],
        "CreateAppVersionResource": [
            "appArn",
            "appComponents",
            "logicalResourceId",
            "physicalResourceId",
            "resourceType"
        ],
        "CreateRecommendationTemplate": [
            "assessmentArn",
            "name"
        ],
        "CreateResiliencyPolicy": [
            "policy",
            "policyName",
            "tier"
        ],
        "DeleteApp": [
            "appArn"
        ],
        "DeleteAppAssessment": [
            "assessmentArn"
        ],
        "DeleteAppInputSource": [
            "appArn"
        ],
        "DeleteAppVersionAppComponent": [
            "appArn",
            "id"
        ],
        "DeleteAppVersionResource": [
            "appArn"
        ],
        "DeleteRecommendationTemplate": [
            "recommendationTemplateArn"
        ],
        "DeleteResiliencyPolicy": [
            "policyArn"
        ],
        "DescribeApp": [
            "appArn"
        ],
        "DescribeAppAssessment": [
            "assessmentArn"
        ],
        "DescribeAppVersion": [
            "appArn",
            "appVersion"
        ],
        "DescribeAppVersionAppComponent": [
            "appArn",
            "appVersion",
            "id"
        ],
        "DescribeAppVersionResource": [
            "appArn",
            "appVersion"
        ],
        "DescribeAppVersionResourcesResolutionStatus": [
            "appArn",
            "appVersion"
        ],
        "DescribeAppVersionTemplate": [
            "appArn",
            "appVersion"
        ],
        "DescribeDraftAppVersionResourcesImportStatus": [
            "appArn"
        ],
        "DescribeResiliencyPolicy": [
            "policyArn"
        ],
        "ImportResourcesToDraftAppVersion": [
            "appArn"
        ],
        "ListAlarmRecommendations": [
            "assessmentArn"
        ],
        "ListAppAssessmentComplianceDrifts": [
            "assessmentArn"
        ],
        "ListAppAssessments": "",
        "ListAppComponentCompliances": [
            "assessmentArn"
        ],
        "ListAppComponentRecommendations": [
            "assessmentArn"
        ],
        "ListAppInputSources": [
            "appArn",
            "appVersion"
        ],
        "ListAppVersionAppComponents": [
            "appArn",
            "appVersion"
        ],
        "ListAppVersionResourceMappings": [
            "appArn",
            "appVersion"
        ],
        "ListAppVersionResources": [
            "appArn",
            "appVersion"
        ],
        "ListAppVersions": [
            "appArn"
        ],
        "ListApps": "",
        "ListRecommendationTemplates": [
            "assessmentArn"
        ],
        "ListResiliencyPolicies": "",
        "ListSopRecommendations": [
            "assessmentArn"
        ],
        "ListSuggestedResiliencyPolicies": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTestRecommendations": [
            "assessmentArn"
        ],
        "ListUnsupportedAppVersionResources": [
            "appArn",
            "appVersion"
        ],
        "PublishAppVersion": [
            "appArn"
        ],
        "PutDraftAppVersionTemplate": [
            "appArn",
            "appTemplateBody"
        ],
        "RemoveDraftAppVersionResourceMappings": [
            "appArn"
        ],
        "ResolveAppVersionResources": [
            "appArn",
            "appVersion"
        ],
        "StartAppAssessment": [
            "appArn",
            "appVersion",
            "assessmentName"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApp": [
            "appArn"
        ],
        "UpdateAppVersion": [
            "appArn"
        ],
        "UpdateAppVersionAppComponent": [
            "appArn",
            "id"
        ],
        "UpdateAppVersionResource": [
            "appArn"
        ],
        "UpdateResiliencyPolicy": [
            "policyArn"
        ]
    },
    "resource-explorer-2": {
        "AssociateDefaultView": [
            "ViewArn"
        ],
        "BatchGetView": "",
        "CreateIndex": "",
        "CreateView": [
            "ViewName"
        ],
        "DeleteIndex": [
            "Arn"
        ],
        "DeleteView": [
            "ViewArn"
        ],
        "DisassociateDefaultView": "",
        "GetAccountLevelServiceConfiguration": "",
        "GetDefaultView": "",
        "GetIndex": "",
        "GetView": [
            "ViewArn"
        ],
        "ListIndexes": "",
        "ListIndexesForMembers": [
            "AccountIdList"
        ],
        "ListSupportedResourceTypes": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListViews": "",
        "Search": [
            "QueryString"
        ],
        "TagResource": [
            "resourceArn"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateIndexType": [
            "Arn",
            "Type"
        ],
        "UpdateView": [
            "ViewArn"
        ]
    },
    "resource-groups": {
        "CreateGroup": [
            "Name"
        ],
        "DeleteGroup": "",
        "GetAccountSettings": "",
        "GetGroup": "",
        "GetGroupConfiguration": "",
        "GetGroupQuery": "",
        "GetTags": [
            "Arn"
        ],
        "GroupResources": [
            "Group",
            "ResourceArns"
        ],
        "ListGroupResources": "",
        "ListGroups": "",
        "PutGroupConfiguration": "",
        "SearchResources": [
            "ResourceQuery"
        ],
        "Tag": [
            "Arn",
            "Tags"
        ],
        "UngroupResources": [
            "Group",
            "ResourceArns"
        ],
        "Untag": [
            "Arn",
            "Keys"
        ],
        "UpdateAccountSettings": "",
        "UpdateGroup": "",
        "UpdateGroupQuery": [
            "ResourceQuery"
        ]
    },
    "resourcegroupstaggingapi": {
        "DescribeReportCreation": "",
        "GetComplianceSummary": "",
        "GetResources": "",
        "GetTagKeys": "",
        "GetTagValues": [
            "Key"
        ],
        "StartReportCreation": [
            "S3Bucket"
        ],
        "TagResources": [
            "ResourceARNList",
            "Tags"
        ],
        "UntagResources": [
            "ResourceARNList",
            "TagKeys"
        ]
    },
    "robomaker": {
        "BatchDeleteWorlds": [
            "worlds"
        ],
        "BatchDescribeSimulationJob": [
            "jobs"
        ],
        "CancelDeploymentJob": [
            "job"
        ],
        "CancelSimulationJob": [
            "job"
        ],
        "CancelSimulationJobBatch": [
            "batch"
        ],
        "CancelWorldExportJob": [
            "job"
        ],
        "CancelWorldGenerationJob": [
            "job"
        ],
        "CreateDeploymentJob": [
            "clientRequestToken",
            "fleet",
            "deploymentApplicationConfigs"
        ],
        "CreateFleet": [
            "name"
        ],
        "CreateRobot": [
            "name",
            "architecture",
            "greengrassGroupId"
        ],
        "CreateRobotApplication": [
            "name",
            "robotSoftwareSuite"
        ],
        "CreateRobotApplicationVersion": [
            "application"
        ],
        "CreateSimulationApplication": [
            "name",
            "simulationSoftwareSuite",
            "robotSoftwareSuite"
        ],
        "CreateSimulationApplicationVersion": [
            "application"
        ],
        "CreateSimulationJob": [
            "maxJobDurationInSeconds",
            "iamRole"
        ],
        "CreateWorldExportJob": [
            "worlds",
            "outputLocation",
            "iamRole"
        ],
        "CreateWorldGenerationJob": [
            "template",
            "worldCount"
        ],
        "CreateWorldTemplate": "",
        "DeleteFleet": [
            "fleet"
        ],
        "DeleteRobot": [
            "robot"
        ],
        "DeleteRobotApplication": [
            "application"
        ],
        "DeleteSimulationApplication": [
            "application"
        ],
        "DeleteWorldTemplate": [
            "template"
        ],
        "DeregisterRobot": [
            "fleet",
            "robot"
        ],
        "DescribeDeploymentJob": [
            "job"
        ],
        "DescribeFleet": [
            "fleet"
        ],
        "DescribeRobot": [
            "robot"
        ],
        "DescribeRobotApplication": [
            "application"
        ],
        "DescribeSimulationApplication": [
            "application"
        ],
        "DescribeSimulationJob": [
            "job"
        ],
        "DescribeSimulationJobBatch": [
            "batch"
        ],
        "DescribeWorld": [
            "world"
        ],
        "DescribeWorldExportJob": [
            "job"
        ],
        "DescribeWorldGenerationJob": [
            "job"
        ],
        "DescribeWorldTemplate": [
            "template"
        ],
        "GetWorldTemplateBody": "",
        "ListDeploymentJobs": "",
        "ListFleets": "",
        "ListRobotApplications": "",
        "ListRobots": "",
        "ListSimulationApplications": "",
        "ListSimulationJobBatches": "",
        "ListSimulationJobs": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWorldExportJobs": "",
        "ListWorldGenerationJobs": "",
        "ListWorldTemplates": "",
        "ListWorlds": "",
        "RegisterRobot": [
            "fleet",
            "robot"
        ],
        "RestartSimulationJob": [
            "job"
        ],
        "StartSimulationJobBatch": [
            "createSimulationJobRequests"
        ],
        "SyncDeploymentJob": [
            "clientRequestToken",
            "fleet"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateRobotApplication": [
            "application",
            "robotSoftwareSuite"
        ],
        "UpdateSimulationApplication": [
            "application",
            "simulationSoftwareSuite",
            "robotSoftwareSuite"
        ],
        "UpdateWorldTemplate": [
            "template"
        ]
    },
    "rolesanywhere": {
        "CreateProfile": [
            "name",
            "roleArns"
        ],
        "CreateTrustAnchor": [
            "name",
            "source"
        ],
        "DeleteCrl": "",
        "DeleteProfile": "",
        "DeleteTrustAnchor": "",
        "DisableCrl": "",
        "DisableProfile": "",
        "DisableTrustAnchor": "",
        "EnableCrl": "",
        "EnableProfile": "",
        "EnableTrustAnchor": "",
        "GetCrl": "",
        "GetProfile": "",
        "GetSubject": [
            "subjectId"
        ],
        "GetTrustAnchor": "",
        "ImportCrl": [
            "crlData",
            "name",
            "trustAnchorArn"
        ],
        "ListCrls": "",
        "ListProfiles": "",
        "ListSubjects": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTrustAnchors": "",
        "PutNotificationSettings": [
            "notificationSettings",
            "trustAnchorId"
        ],
        "ResetNotificationSettings": [
            "notificationSettingKeys",
            "trustAnchorId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateCrl": [
            "crlId"
        ],
        "UpdateProfile": [
            "profileId"
        ],
        "UpdateTrustAnchor": [
            "trustAnchorId"
        ]
    },
    "route53": {
        "ActivateKeySigningKey": [
            "HostedZoneId",
            "Name"
        ],
        "AssociateVPCWithHostedZone": [
            "HostedZoneId",
            "VPC"
        ],
        "ChangeCidrCollection": [
            "Id",
            "Changes"
        ],
        "ChangeResourceRecordSets": [
            "HostedZoneId",
            "ChangeBatch"
        ],
        "ChangeTagsForResource": [
            "ResourceType",
            "ResourceId"
        ],
        "CreateCidrCollection": [
            "Name",
            "CallerReference"
        ],
        "CreateHealthCheck": [
            "CallerReference",
            "HealthCheckConfig"
        ],
        "CreateHostedZone": [
            "Name",
            "CallerReference"
        ],
        "CreateKeySigningKey": [
            "CallerReference",
            "HostedZoneId",
            "KeyManagementServiceArn",
            "Name",
            "Status"
        ],
        "CreateQueryLoggingConfig": [
            "HostedZoneId",
            "CloudWatchLogsLogGroupArn"
        ],
        "CreateReusableDelegationSet": [
            "CallerReference"
        ],
        "CreateTrafficPolicy": [
            "Name",
            "Document"
        ],
        "CreateTrafficPolicyInstance": [
            "HostedZoneId",
            "Name",
            "TTL",
            "TrafficPolicyId",
            "TrafficPolicyVersion"
        ],
        "CreateTrafficPolicyVersion": [
            "Id",
            "Document"
        ],
        "CreateVPCAssociationAuthorization": [
            "HostedZoneId",
            "VPC"
        ],
        "DeactivateKeySigningKey": [
            "HostedZoneId",
            "Name"
        ],
        "DeleteCidrCollection": [
            "Id"
        ],
        "DeleteHealthCheck": [
            "HealthCheckId"
        ],
        "DeleteHostedZone": [
            "Id"
        ],
        "DeleteKeySigningKey": [
            "HostedZoneId",
            "Name"
        ],
        "DeleteQueryLoggingConfig": [
            "Id"
        ],
        "DeleteReusableDelegationSet": [
            "Id"
        ],
        "DeleteTrafficPolicy": [
            "Id",
            "Version"
        ],
        "DeleteTrafficPolicyInstance": [
            "Id"
        ],
        "DeleteVPCAssociationAuthorization": [
            "HostedZoneId",
            "VPC"
        ],
        "DisableHostedZoneDNSSEC": [
            "HostedZoneId"
        ],
        "DisassociateVPCFromHostedZone": [
            "HostedZoneId",
            "VPC"
        ],
        "EnableHostedZoneDNSSEC": [
            "HostedZoneId"
        ],
        "GetAccountLimit": [
            "Type"
        ],
        "GetChange": [
            "Id"
        ],
        "GetCheckerIpRanges": "",
        "GetDNSSEC": [
            "HostedZoneId"
        ],
        "GetGeoLocation": "",
        "GetHealthCheck": [
            "HealthCheckId"
        ],
        "GetHealthCheckCount": "",
        "GetHealthCheckLastFailureReason": [
            "HealthCheckId"
        ],
        "GetHealthCheckStatus": [
            "HealthCheckId"
        ],
        "GetHostedZone": [
            "Id"
        ],
        "GetHostedZoneCount": "",
        "GetHostedZoneLimit": [
            "Type",
            "HostedZoneId"
        ],
        "GetQueryLoggingConfig": [
            "Id"
        ],
        "GetReusableDelegationSet": [
            "Id"
        ],
        "GetReusableDelegationSetLimit": [
            "Type",
            "DelegationSetId"
        ],
        "GetTrafficPolicy": [
            "Id",
            "Version"
        ],
        "GetTrafficPolicyInstance": [
            "Id"
        ],
        "GetTrafficPolicyInstanceCount": "",
        "ListCidrBlocks": [
            "CollectionId"
        ],
        "ListCidrCollections": "",
        "ListCidrLocations": [
            "CollectionId"
        ],
        "ListGeoLocations": "",
        "ListHealthChecks": "",
        "ListHostedZones": "",
        "ListHostedZonesByName": "",
        "ListHostedZonesByVPC": [
            "VPCId",
            "VPCRegion"
        ],
        "ListQueryLoggingConfigs": "",
        "ListResourceRecordSets": [
            "HostedZoneId"
        ],
        "ListReusableDelegationSets": "",
        "ListTagsForResource": [
            "ResourceType",
            "ResourceId"
        ],
        "ListTagsForResources": [
            "ResourceType",
            "ResourceIds"
        ],
        "ListTrafficPolicies": "",
        "ListTrafficPolicyInstances": "",
        "ListTrafficPolicyInstancesByHostedZone": [
            "HostedZoneId"
        ],
        "ListTrafficPolicyInstancesByPolicy": [
            "TrafficPolicyId",
            "TrafficPolicyVersion"
        ],
        "ListTrafficPolicyVersions": [
            "Id"
        ],
        "ListVPCAssociationAuthorizations": [
            "HostedZoneId"
        ],
        "TestDNSAnswer": [
            "HostedZoneId",
            "RecordName",
            "RecordType"
        ],
        "UpdateHealthCheck": [
            "HealthCheckId"
        ],
        "UpdateHostedZoneComment": [
            "Id"
        ],
        "UpdateTrafficPolicyComment": [
            "Id",
            "Version",
            "Comment"
        ],
        "UpdateTrafficPolicyInstance": [
            "Id",
            "TTL",
            "TrafficPolicyId",
            "TrafficPolicyVersion"
        ]
    },
    "route53-recovery-cluster": {
        "GetRoutingControlState": [
            "RoutingControlArn"
        ],
        "ListRoutingControls": "",
        "UpdateRoutingControlState": [
            "RoutingControlArn",
            "RoutingControlState"
        ],
        "UpdateRoutingControlStates": [
            "UpdateRoutingControlStateEntries"
        ]
    },
    "route53-recovery-control-config": {
        "CreateCluster": [
            "ClusterName"
        ],
        "CreateControlPanel": [
            "ClusterArn",
            "ControlPanelName"
        ],
        "CreateRoutingControl": [
            "ClusterArn",
            "RoutingControlName"
        ],
        "CreateSafetyRule": "",
        "DeleteCluster": [
            "ClusterArn"
        ],
        "DeleteControlPanel": [
            "ControlPanelArn"
        ],
        "DeleteRoutingControl": [
            "RoutingControlArn"
        ],
        "DeleteSafetyRule": [
            "SafetyRuleArn"
        ],
        "DescribeCluster": [
            "ClusterArn"
        ],
        "DescribeControlPanel": [
            "ControlPanelArn"
        ],
        "DescribeRoutingControl": [
            "RoutingControlArn"
        ],
        "DescribeSafetyRule": [
            "SafetyRuleArn"
        ],
        "GetResourcePolicy": [
            "ResourceArn"
        ],
        "ListAssociatedRoute53HealthChecks": [
            "RoutingControlArn"
        ],
        "ListClusters": "",
        "ListControlPanels": "",
        "ListRoutingControls": [
            "ControlPanelArn"
        ],
        "ListSafetyRules": [
            "ControlPanelArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateControlPanel": [
            "ControlPanelArn",
            "ControlPanelName"
        ],
        "UpdateRoutingControl": [
            "RoutingControlName",
            "RoutingControlArn"
        ],
        "UpdateSafetyRule": ""
    },
    "route53-recovery-readiness": {
        "CreateCell": [
            "CellName"
        ],
        "CreateCrossAccountAuthorization": [
            "CrossAccountAuthorization"
        ],
        "CreateReadinessCheck": [
            "ResourceSetName",
            "ReadinessCheckName"
        ],
        "CreateRecoveryGroup": [
            "RecoveryGroupName"
        ],
        "CreateResourceSet": [
            "ResourceSetType",
            "ResourceSetName",
            "Resources"
        ],
        "DeleteCell": [
            "CellName"
        ],
        "DeleteCrossAccountAuthorization": [
            "CrossAccountAuthorization"
        ],
        "DeleteReadinessCheck": [
            "ReadinessCheckName"
        ],
        "DeleteRecoveryGroup": [
            "RecoveryGroupName"
        ],
        "DeleteResourceSet": [
            "ResourceSetName"
        ],
        "GetArchitectureRecommendations": [
            "RecoveryGroupName"
        ],
        "GetCell": [
            "CellName"
        ],
        "GetCellReadinessSummary": [
            "CellName"
        ],
        "GetReadinessCheck": [
            "ReadinessCheckName"
        ],
        "GetReadinessCheckResourceStatus": [
            "ReadinessCheckName",
            "ResourceIdentifier"
        ],
        "GetReadinessCheckStatus": [
            "ReadinessCheckName"
        ],
        "GetRecoveryGroup": [
            "RecoveryGroupName"
        ],
        "GetRecoveryGroupReadinessSummary": [
            "RecoveryGroupName"
        ],
        "GetResourceSet": [
            "ResourceSetName"
        ],
        "ListCells": "",
        "ListCrossAccountAuthorizations": "",
        "ListReadinessChecks": "",
        "ListRecoveryGroups": "",
        "ListResourceSets": "",
        "ListRules": "",
        "ListTagsForResources": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateCell": [
            "CellName",
            "Cells"
        ],
        "UpdateReadinessCheck": [
            "ReadinessCheckName",
            "ResourceSetName"
        ],
        "UpdateRecoveryGroup": [
            "RecoveryGroupName",
            "Cells"
        ],
        "UpdateResourceSet": [
            "ResourceSetName",
            "ResourceSetType",
            "Resources"
        ]
    },
    "route53domains": {
        "AcceptDomainTransferFromAnotherAwsAccount": [
            "DomainName",
            "Password"
        ],
        "AssociateDelegationSignerToDomain": [
            "DomainName",
            "SigningAttributes"
        ],
        "CancelDomainTransferToAnotherAwsAccount": [
            "DomainName"
        ],
        "CheckDomainAvailability": [
            "DomainName"
        ],
        "CheckDomainTransferability": [
            "DomainName"
        ],
        "DeleteDomain": [
            "DomainName"
        ],
        "DeleteTagsForDomain": [
            "DomainName",
            "TagsToDelete"
        ],
        "DisableDomainAutoRenew": [
            "DomainName"
        ],
        "DisableDomainTransferLock": [
            "DomainName"
        ],
        "DisassociateDelegationSignerFromDomain": [
            "DomainName",
            "Id"
        ],
        "EnableDomainAutoRenew": [
            "DomainName"
        ],
        "EnableDomainTransferLock": [
            "DomainName"
        ],
        "GetContactReachabilityStatus": "",
        "GetDomainDetail": [
            "DomainName"
        ],
        "GetDomainSuggestions": [
            "DomainName",
            "SuggestionCount",
            "OnlyAvailable"
        ],
        "GetOperationDetail": [
            "OperationId"
        ],
        "ListDomains": "",
        "ListOperations": "",
        "ListPrices": "",
        "ListTagsForDomain": [
            "DomainName"
        ],
        "PushDomain": [
            "DomainName",
            "Target"
        ],
        "RegisterDomain": [
            "DomainName",
            "DurationInYears",
            "AdminContact",
            "RegistrantContact",
            "TechContact"
        ],
        "RejectDomainTransferFromAnotherAwsAccount": [
            "DomainName"
        ],
        "RenewDomain": [
            "DomainName",
            "CurrentExpiryYear"
        ],
        "ResendContactReachabilityEmail": "",
        "ResendOperationAuthorization": [
            "OperationId"
        ],
        "RetrieveDomainAuthCode": [
            "DomainName"
        ],
        "TransferDomain": [
            "DomainName",
            "DurationInYears",
            "AdminContact",
            "RegistrantContact",
            "TechContact"
        ],
        "TransferDomainToAnotherAwsAccount": [
            "DomainName",
            "AccountId"
        ],
        "UpdateDomainContact": [
            "DomainName"
        ],
        "UpdateDomainContactPrivacy": [
            "DomainName"
        ],
        "UpdateDomainNameservers": [
            "DomainName",
            "Nameservers"
        ],
        "UpdateTagsForDomain": [
            "DomainName"
        ],
        "ViewBilling": ""
    },
    "route53resolver": {
        "AssociateFirewallRuleGroup": [
            "CreatorRequestId",
            "FirewallRuleGroupId",
            "VpcId",
            "Priority",
            "Name"
        ],
        "AssociateResolverEndpointIpAddress": [
            "ResolverEndpointId",
            "IpAddress"
        ],
        "AssociateResolverQueryLogConfig": [
            "ResolverQueryLogConfigId",
            "ResourceId"
        ],
        "AssociateResolverRule": [
            "ResolverRuleId",
            "VPCId"
        ],
        "CreateFirewallDomainList": [
            "CreatorRequestId",
            "Name"
        ],
        "CreateFirewallRule": [
            "CreatorRequestId",
            "FirewallRuleGroupId",
            "FirewallDomainListId",
            "Priority",
            "Action",
            "Name"
        ],
        "CreateFirewallRuleGroup": [
            "CreatorRequestId",
            "Name"
        ],
        "CreateOutpostResolver": [
            "CreatorRequestId",
            "Name",
            "PreferredInstanceType",
            "OutpostArn"
        ],
        "CreateResolverEndpoint": [
            "CreatorRequestId",
            "SecurityGroupIds",
            "Direction",
            "IpAddresses"
        ],
        "CreateResolverQueryLogConfig": [
            "Name",
            "DestinationArn",
            "CreatorRequestId"
        ],
        "CreateResolverRule": [
            "CreatorRequestId",
            "RuleType"
        ],
        "DeleteFirewallDomainList": [
            "FirewallDomainListId"
        ],
        "DeleteFirewallRule": [
            "FirewallRuleGroupId",
            "FirewallDomainListId"
        ],
        "DeleteFirewallRuleGroup": [
            "FirewallRuleGroupId"
        ],
        "DeleteOutpostResolver": [
            "Id"
        ],
        "DeleteResolverEndpoint": [
            "ResolverEndpointId"
        ],
        "DeleteResolverQueryLogConfig": [
            "ResolverQueryLogConfigId"
        ],
        "DeleteResolverRule": [
            "ResolverRuleId"
        ],
        "DisassociateFirewallRuleGroup": [
            "FirewallRuleGroupAssociationId"
        ],
        "DisassociateResolverEndpointIpAddress": [
            "ResolverEndpointId",
            "IpAddress"
        ],
        "DisassociateResolverQueryLogConfig": [
            "ResolverQueryLogConfigId",
            "ResourceId"
        ],
        "DisassociateResolverRule": [
            "VPCId",
            "ResolverRuleId"
        ],
        "GetFirewallConfig": [
            "ResourceId"
        ],
        "GetFirewallDomainList": [
            "FirewallDomainListId"
        ],
        "GetFirewallRuleGroup": [
            "FirewallRuleGroupId"
        ],
        "GetFirewallRuleGroupAssociation": [
            "FirewallRuleGroupAssociationId"
        ],
        "GetFirewallRuleGroupPolicy": [
            "Arn"
        ],
        "GetOutpostResolver": [
            "Id"
        ],
        "GetResolverConfig": [
            "ResourceId"
        ],
        "GetResolverDnssecConfig": [
            "ResourceId"
        ],
        "GetResolverEndpoint": [
            "ResolverEndpointId"
        ],
        "GetResolverQueryLogConfig": [
            "ResolverQueryLogConfigId"
        ],
        "GetResolverQueryLogConfigAssociation": [
            "ResolverQueryLogConfigAssociationId"
        ],
        "GetResolverQueryLogConfigPolicy": [
            "Arn"
        ],
        "GetResolverRule": [
            "ResolverRuleId"
        ],
        "GetResolverRuleAssociation": [
            "ResolverRuleAssociationId"
        ],
        "GetResolverRulePolicy": [
            "Arn"
        ],
        "ImportFirewallDomains": [
            "FirewallDomainListId",
            "Operation",
            "DomainFileUrl"
        ],
        "ListFirewallConfigs": "",
        "ListFirewallDomainLists": "",
        "ListFirewallDomains": [
            "FirewallDomainListId"
        ],
        "ListFirewallRuleGroupAssociations": "",
        "ListFirewallRuleGroups": "",
        "ListFirewallRules": [
            "FirewallRuleGroupId"
        ],
        "ListOutpostResolvers": "",
        "ListResolverConfigs": "",
        "ListResolverDnssecConfigs": "",
        "ListResolverEndpointIpAddresses": [
            "ResolverEndpointId"
        ],
        "ListResolverEndpoints": "",
        "ListResolverQueryLogConfigAssociations": "",
        "ListResolverQueryLogConfigs": "",
        "ListResolverRuleAssociations": "",
        "ListResolverRules": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutFirewallRuleGroupPolicy": [
            "Arn",
            "FirewallRuleGroupPolicy"
        ],
        "PutResolverQueryLogConfigPolicy": [
            "Arn",
            "ResolverQueryLogConfigPolicy"
        ],
        "PutResolverRulePolicy": [
            "Arn",
            "ResolverRulePolicy"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateFirewallConfig": [
            "ResourceId",
            "FirewallFailOpen"
        ],
        "UpdateFirewallDomains": [
            "FirewallDomainListId",
            "Operation",
            "Domains"
        ],
        "UpdateFirewallRule": [
            "FirewallRuleGroupId",
            "FirewallDomainListId"
        ],
        "UpdateFirewallRuleGroupAssociation": [
            "FirewallRuleGroupAssociationId"
        ],
        "UpdateOutpostResolver": [
            "Id"
        ],
        "UpdateResolverConfig": [
            "ResourceId",
            "AutodefinedReverseFlag"
        ],
        "UpdateResolverDnssecConfig": [
            "ResourceId",
            "Validation"
        ],
        "UpdateResolverEndpoint": [
            "ResolverEndpointId"
        ],
        "UpdateResolverRule": [
            "ResolverRuleId",
            "Config"
        ]
    },
    "rum": {
        "BatchCreateRumMetricDefinitions": [
            "AppMonitorName",
            "Destination",
            "MetricDefinitions"
        ],
        "BatchDeleteRumMetricDefinitions": [
            "AppMonitorName",
            "Destination",
            "MetricDefinitionIds"
        ],
        "BatchGetRumMetricDefinitions": [
            "AppMonitorName",
            "Destination"
        ],
        "CreateAppMonitor": [
            "Domain",
            "Name"
        ],
        "DeleteAppMonitor": [
            "Name"
        ],
        "DeleteRumMetricsDestination": [
            "AppMonitorName",
            "Destination"
        ],
        "GetAppMonitor": [
            "Name"
        ],
        "GetAppMonitorData": [
            "Name",
            "TimeRange"
        ],
        "ListAppMonitors": "",
        "ListRumMetricsDestinations": [
            "AppMonitorName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutRumEvents": [
            "AppMonitorDetails",
            "BatchId",
            "Id",
            "RumEvents",
            "UserDetails"
        ],
        "PutRumMetricsDestination": [
            "AppMonitorName",
            "Destination"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAppMonitor": [
            "Name"
        ],
        "UpdateRumMetricDefinition": [
            "AppMonitorName",
            "Destination",
            "MetricDefinition",
            "MetricDefinitionId"
        ]
    },
    "runtime.lex": {
        "DeleteSession": [
            "botName",
            "botAlias",
            "userId"
        ],
        "GetSession": [
            "botName",
            "botAlias",
            "userId"
        ],
        "PostContent": [
            "botName",
            "botAlias",
            "userId",
            "contentType",
            "inputStream"
        ],
        "PostText": [
            "botName",
            "botAlias",
            "userId",
            "inputText"
        ],
        "PutSession": [
            "botName",
            "botAlias",
            "userId"
        ]
    },
    "runtime.lex.v2": {
        "DeleteSession": [
            "botId",
            "botAliasId",
            "sessionId",
            "localeId"
        ],
        "GetSession": [
            "botId",
            "botAliasId",
            "localeId",
            "sessionId"
        ],
        "PutSession": [
            "botId",
            "botAliasId",
            "localeId",
            "sessionState",
            "sessionId"
        ],
        "RecognizeText": [
            "botId",
            "botAliasId",
            "localeId",
            "text",
            "sessionId"
        ],
        "RecognizeUtterance": [
            "botId",
            "botAliasId",
            "localeId",
            "requestContentType",
            "sessionId"
        ]
    },
    "runtime.sagemaker": {
        "InvokeEndpoint": [
            "EndpointName",
            "Body"
        ],
        "InvokeEndpointAsync": [
            "EndpointName",
            "InputLocation"
        ],
        "InvokeEndpointWithResponseStream": [
            "EndpointName",
            "Body"
        ]
    },
    "s3": {
        "AbortMultipartUpload": [
            "Bucket",
            "Key",
            "UploadId"
        ],
        "CompleteMultipartUpload": [
            "Bucket",
            "Key",
            "UploadId"
        ],
        "CopyObject": [
            "Bucket",
            "CopySource",
            "Key"
        ],
        "CreateBucket": [
            "Bucket"
        ],
        "CreateMultipartUpload": [
            "Bucket",
            "Key"
        ],
        "CreateSession": [
            "Bucket"
        ],
        "DeleteBucket": [
            "Bucket"
        ],
        "DeleteBucketAnalyticsConfiguration": [
            "Bucket",
            "Id"
        ],
        "DeleteBucketCors": [
            "Bucket"
        ],
        "DeleteBucketEncryption": [
            "Bucket"
        ],
        "DeleteBucketIntelligentTieringConfiguration": [
            "Bucket",
            "Id"
        ],
        "DeleteBucketInventoryConfiguration": [
            "Bucket",
            "Id"
        ],
        "DeleteBucketLifecycle": [
            "Bucket"
        ],
        "DeleteBucketMetricsConfiguration": [
            "Bucket",
            "Id"
        ],
        "DeleteBucketOwnershipControls": [
            "Bucket"
        ],
        "DeleteBucketPolicy": [
            "Bucket"
        ],
        "DeleteBucketReplication": [
            "Bucket"
        ],
        "DeleteBucketTagging": [
            "Bucket"
        ],
        "DeleteBucketWebsite": [
            "Bucket"
        ],
        "DeleteObject": [
            "Bucket",
            "Key"
        ],
        "DeleteObjectTagging": [
            "Bucket",
            "Key"
        ],
        "DeleteObjects": [
            "Bucket",
            "Delete"
        ],
        "DeletePublicAccessBlock": [
            "Bucket"
        ],
        "GetBucketAccelerateConfiguration": [
            "Bucket"
        ],
        "GetBucketAcl": [
            "Bucket"
        ],
        "GetBucketAnalyticsConfiguration": [
            "Bucket",
            "Id"
        ],
        "GetBucketCors": [
            "Bucket"
        ],
        "GetBucketEncryption": [
            "Bucket"
        ],
        "GetBucketIntelligentTieringConfiguration": [
            "Bucket",
            "Id"
        ],
        "GetBucketInventoryConfiguration": [
            "Bucket",
            "Id"
        ],
        "GetBucketLifecycle": [
            "Bucket"
        ],
        "GetBucketLifecycleConfiguration": [
            "Bucket"
        ],
        "GetBucketLocation": [
            "Bucket"
        ],
        "GetBucketLogging": [
            "Bucket"
        ],
        "GetBucketMetricsConfiguration": [
            "Bucket",
            "Id"
        ],
        "GetBucketNotification": "",
        "GetBucketNotificationConfiguration": "",
        "GetBucketOwnershipControls": [
            "Bucket"
        ],
        "GetBucketPolicy": [
            "Bucket"
        ],
        "GetBucketPolicyStatus": [
            "Bucket"
        ],
        "GetBucketReplication": [
            "Bucket"
        ],
        "GetBucketRequestPayment": [
            "Bucket"
        ],
        "GetBucketTagging": [
            "Bucket"
        ],
        "GetBucketVersioning": [
            "Bucket"
        ],
        "GetBucketWebsite": [
            "Bucket"
        ],
        "GetObject": [
            "Bucket",
            "Key"
        ],
        "GetObjectAcl": [
            "Bucket",
            "Key"
        ],
        "GetObjectAttributes": [
            "Bucket",
            "Key",
            "ObjectAttributes"
        ],
        "GetObjectLegalHold": [
            "Bucket",
            "Key"
        ],
        "GetObjectLockConfiguration": [
            "Bucket"
        ],
        "GetObjectRetention": [
            "Bucket",
            "Key"
        ],
        "GetObjectTagging": [
            "Bucket",
            "Key"
        ],
        "GetObjectTorrent": [
            "Bucket",
            "Key"
        ],
        "GetPublicAccessBlock": [
            "Bucket"
        ],
        "HeadBucket": [
            "Bucket"
        ],
        "HeadObject": [
            "Bucket",
            "Key"
        ],
        "ListBucketAnalyticsConfigurations": [
            "Bucket"
        ],
        "ListBucketIntelligentTieringConfigurations": [
            "Bucket"
        ],
        "ListBucketInventoryConfigurations": [
            "Bucket"
        ],
        "ListBucketMetricsConfigurations": [
            "Bucket"
        ],
        "ListBuckets": "",
        "ListDirectoryBuckets": "",
        "ListMultipartUploads": [
            "Bucket"
        ],
        "ListObjectVersions": [
            "Bucket"
        ],
        "ListObjects": [
            "Bucket"
        ],
        "ListObjectsV2": [
            "Bucket"
        ],
        "ListParts": [
            "Bucket",
            "Key",
            "UploadId"
        ],
        "PutBucketAccelerateConfiguration": [
            "Bucket",
            "AccelerateConfiguration"
        ],
        "PutBucketAcl": [
            "Bucket"
        ],
        "PutBucketAnalyticsConfiguration": [
            "Bucket",
            "Id",
            "AnalyticsConfiguration"
        ],
        "PutBucketCors": [
            "Bucket",
            "CORSConfiguration"
        ],
        "PutBucketEncryption": [
            "Bucket",
            "ServerSideEncryptionConfiguration"
        ],
        "PutBucketIntelligentTieringConfiguration": [
            "Bucket",
            "Id",
            "IntelligentTieringConfiguration"
        ],
        "PutBucketInventoryConfiguration": [
            "Bucket",
            "Id",
            "InventoryConfiguration"
        ],
        "PutBucketLifecycle": [
            "Bucket"
        ],
        "PutBucketLifecycleConfiguration": [
            "Bucket"
        ],
        "PutBucketLogging": [
            "Bucket",
            "BucketLoggingStatus"
        ],
        "PutBucketMetricsConfiguration": [
            "Bucket",
            "Id",
            "MetricsConfiguration"
        ],
        "PutBucketNotification": [
            "Bucket",
            "NotificationConfiguration"
        ],
        "PutBucketNotificationConfiguration": [
            "Bucket",
            "NotificationConfiguration"
        ],
        "PutBucketOwnershipControls": [
            "Bucket",
            "OwnershipControls"
        ],
        "PutBucketPolicy": [
            "Bucket",
            "Policy"
        ],
        "PutBucketReplication": [
            "Bucket",
            "ReplicationConfiguration"
        ],
        "PutBucketRequestPayment": [
            "Bucket",
            "RequestPaymentConfiguration"
        ],
        "PutBucketTagging": [
            "Bucket",
            "Tagging"
        ],
        "PutBucketVersioning": [
            "Bucket",
            "VersioningConfiguration"
        ],
        "PutBucketWebsite": [
            "Bucket",
            "WebsiteConfiguration"
        ],
        "PutObject": [
            "Bucket",
            "Key"
        ],
        "PutObjectAcl": [
            "Bucket",
            "Key"
        ],
        "PutObjectLegalHold": [
            "Bucket",
            "Key"
        ],
        "PutObjectLockConfiguration": [
            "Bucket"
        ],
        "PutObjectRetention": [
            "Bucket",
            "Key"
        ],
        "PutObjectTagging": [
            "Bucket",
            "Key",
            "Tagging"
        ],
        "PutPublicAccessBlock": [
            "Bucket",
            "PublicAccessBlockConfiguration"
        ],
        "RestoreObject": [
            "Bucket",
            "Key"
        ],
        "SelectObjectContent": [
            "Bucket",
            "Key",
            "Expression",
            "ExpressionType",
            "InputSerialization",
            "OutputSerialization"
        ],
        "UploadPart": [
            "Bucket",
            "Key",
            "PartNumber",
            "UploadId"
        ],
        "UploadPartCopy": [
            "Bucket",
            "CopySource",
            "Key",
            "PartNumber",
            "UploadId"
        ],
        "WriteGetObjectResponse": [
            "RequestRoute",
            "RequestToken"
        ]
    },
    "s3control": {
        "AssociateAccessGrantsIdentityCenter": [
            "AccountId",
            "IdentityCenterArn"
        ],
        "CreateAccessGrant": [
            "AccountId",
            "AccessGrantsLocationId",
            "Grantee",
            "Permission"
        ],
        "CreateAccessGrantsInstance": [
            "AccountId"
        ],
        "CreateAccessGrantsLocation": [
            "AccountId",
            "LocationScope",
            "IAMRoleArn"
        ],
        "CreateAccessPoint": [
            "AccountId",
            "Name",
            "Bucket"
        ],
        "CreateAccessPointForObjectLambda": [
            "AccountId",
            "Name",
            "Configuration"
        ],
        "CreateBucket": [
            "Bucket"
        ],
        "CreateJob": [
            "AccountId",
            "Operation",
            "Report",
            "ClientRequestToken",
            "Priority",
            "RoleArn"
        ],
        "CreateMultiRegionAccessPoint": [
            "AccountId",
            "ClientToken",
            "Details"
        ],
        "CreateStorageLensGroup": [
            "AccountId",
            "StorageLensGroup"
        ],
        "DeleteAccessGrant": [
            "AccountId",
            "AccessGrantId"
        ],
        "DeleteAccessGrantsInstance": [
            "AccountId"
        ],
        "DeleteAccessGrantsInstanceResourcePolicy": [
            "AccountId"
        ],
        "DeleteAccessGrantsLocation": [
            "AccountId",
            "AccessGrantsLocationId"
        ],
        "DeleteAccessPoint": [
            "AccountId",
            "Name"
        ],
        "DeleteAccessPointForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "DeleteAccessPointPolicy": [
            "AccountId",
            "Name"
        ],
        "DeleteAccessPointPolicyForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "DeleteBucket": [
            "AccountId",
            "Bucket"
        ],
        "DeleteBucketLifecycleConfiguration": [
            "AccountId",
            "Bucket"
        ],
        "DeleteBucketPolicy": [
            "AccountId",
            "Bucket"
        ],
        "DeleteBucketReplication": [
            "AccountId",
            "Bucket"
        ],
        "DeleteBucketTagging": [
            "AccountId",
            "Bucket"
        ],
        "DeleteJobTagging": [
            "AccountId",
            "JobId"
        ],
        "DeleteMultiRegionAccessPoint": [
            "AccountId",
            "ClientToken",
            "Details"
        ],
        "DeletePublicAccessBlock": [
            "AccountId"
        ],
        "DeleteStorageLensConfiguration": [
            "ConfigId",
            "AccountId"
        ],
        "DeleteStorageLensConfigurationTagging": [
            "ConfigId",
            "AccountId"
        ],
        "DeleteStorageLensGroup": [
            "Name",
            "AccountId"
        ],
        "DescribeJob": [
            "AccountId",
            "JobId"
        ],
        "DescribeMultiRegionAccessPointOperation": [
            "AccountId",
            "RequestTokenARN"
        ],
        "DissociateAccessGrantsIdentityCenter": [
            "AccountId"
        ],
        "GetAccessGrant": [
            "AccountId",
            "AccessGrantId"
        ],
        "GetAccessGrantsInstance": [
            "AccountId"
        ],
        "GetAccessGrantsInstanceForPrefix": [
            "AccountId",
            "S3Prefix"
        ],
        "GetAccessGrantsInstanceResourcePolicy": [
            "AccountId"
        ],
        "GetAccessGrantsLocation": [
            "AccountId",
            "AccessGrantsLocationId"
        ],
        "GetAccessPoint": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointConfigurationForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointPolicy": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointPolicyForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointPolicyStatus": [
            "AccountId",
            "Name"
        ],
        "GetAccessPointPolicyStatusForObjectLambda": [
            "AccountId",
            "Name"
        ],
        "GetBucket": [
            "AccountId",
            "Bucket"
        ],
        "GetBucketLifecycleConfiguration": [
            "AccountId",
            "Bucket"
        ],
        "GetBucketPolicy": [
            "AccountId",
            "Bucket"
        ],
        "GetBucketReplication": [
            "AccountId",
            "Bucket"
        ],
        "GetBucketTagging": [
            "AccountId",
            "Bucket"
        ],
        "GetBucketVersioning": [
            "AccountId",
            "Bucket"
        ],
        "GetDataAccess": [
            "AccountId",
            "Target",
            "Permission"
        ],
        "GetJobTagging": [
            "AccountId",
            "JobId"
        ],
        "GetMultiRegionAccessPoint": [
            "AccountId",
            "Name"
        ],
        "GetMultiRegionAccessPointPolicy": [
            "AccountId",
            "Name"
        ],
        "GetMultiRegionAccessPointPolicyStatus": [
            "AccountId",
            "Name"
        ],
        "GetMultiRegionAccessPointRoutes": [
            "AccountId",
            "Mrap"
        ],
        "GetPublicAccessBlock": [
            "AccountId"
        ],
        "GetStorageLensConfiguration": [
            "ConfigId",
            "AccountId"
        ],
        "GetStorageLensConfigurationTagging": [
            "ConfigId",
            "AccountId"
        ],
        "GetStorageLensGroup": [
            "Name",
            "AccountId"
        ],
        "ListAccessGrants": [
            "AccountId"
        ],
        "ListAccessGrantsInstances": [
            "AccountId"
        ],
        "ListAccessGrantsLocations": [
            "AccountId"
        ],
        "ListAccessPoints": [
            "AccountId"
        ],
        "ListAccessPointsForObjectLambda": [
            "AccountId"
        ],
        "ListJobs": [
            "AccountId"
        ],
        "ListMultiRegionAccessPoints": [
            "AccountId"
        ],
        "ListRegionalBuckets": [
            "AccountId"
        ],
        "ListStorageLensConfigurations": [
            "AccountId"
        ],
        "ListStorageLensGroups": [
            "AccountId"
        ],
        "ListTagsForResource": [
            "AccountId",
            "ResourceArn"
        ],
        "PutAccessGrantsInstanceResourcePolicy": [
            "AccountId",
            "Policy"
        ],
        "PutAccessPointConfigurationForObjectLambda": [
            "AccountId",
            "Name",
            "Configuration"
        ],
        "PutAccessPointPolicy": [
            "AccountId",
            "Name",
            "Policy"
        ],
        "PutAccessPointPolicyForObjectLambda": [
            "AccountId",
            "Name",
            "Policy"
        ],
        "PutBucketLifecycleConfiguration": [
            "AccountId",
            "Bucket"
        ],
        "PutBucketPolicy": [
            "AccountId",
            "Bucket",
            "Policy"
        ],
        "PutBucketReplication": [
            "AccountId",
            "Bucket",
            "ReplicationConfiguration"
        ],
        "PutBucketTagging": [
            "AccountId",
            "Bucket",
            "Tagging"
        ],
        "PutBucketVersioning": [
            "AccountId",
            "Bucket",
            "VersioningConfiguration"
        ],
        "PutJobTagging": [
            "AccountId",
            "JobId",
            "Tags"
        ],
        "PutMultiRegionAccessPointPolicy": [
            "AccountId",
            "ClientToken",
            "Details"
        ],
        "PutPublicAccessBlock": [
            "PublicAccessBlockConfiguration",
            "AccountId"
        ],
        "PutStorageLensConfiguration": [
            "ConfigId",
            "AccountId",
            "StorageLensConfiguration"
        ],
        "PutStorageLensConfigurationTagging": [
            "ConfigId",
            "AccountId",
            "Tags"
        ],
        "SubmitMultiRegionAccessPointRoutes": [
            "AccountId",
            "Mrap",
            "RouteUpdates"
        ],
        "TagResource": [
            "AccountId",
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "AccountId",
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAccessGrantsLocation": [
            "AccountId",
            "AccessGrantsLocationId",
            "IAMRoleArn"
        ],
        "UpdateJobPriority": [
            "AccountId",
            "JobId",
            "Priority"
        ],
        "UpdateJobStatus": [
            "AccountId",
            "JobId",
            "RequestedJobStatus"
        ],
        "UpdateStorageLensGroup": [
            "Name",
            "AccountId",
            "StorageLensGroup"
        ]
    },
    "s3outposts": {
        "CreateEndpoint": [
            "OutpostId",
            "SubnetId",
            "SecurityGroupId"
        ],
        "DeleteEndpoint": [
            "EndpointId",
            "OutpostId"
        ],
        "ListEndpoints": "",
        "ListOutpostsWithS3": "",
        "ListSharedEndpoints": [
            "OutpostId"
        ]
    },
    "sagemaker": {
        "AddAssociation": [
            "SourceArn",
            "DestinationArn"
        ],
        "AddTags": [
            "ResourceArn",
            "Tags"
        ],
        "AssociateTrialComponent": [
            "TrialComponentName",
            "TrialName"
        ],
        "BatchDescribeModelPackage": [
            "ModelPackageArnList"
        ],
        "CreateAction": [
            "ActionName",
            "Source",
            "ActionType"
        ],
        "CreateAlgorithm": [
            "AlgorithmName",
            "TrainingSpecification"
        ],
        "CreateApp": [
            "DomainId",
            "AppType",
            "AppName"
        ],
        "CreateAppImageConfig": [
            "AppImageConfigName"
        ],
        "CreateArtifact": [
            "Source",
            "ArtifactType"
        ],
        "CreateAutoMLJob": [
            "AutoMLJobName",
            "InputDataConfig",
            "OutputDataConfig",
            "RoleArn"
        ],
        "CreateAutoMLJobV2": [
            "AutoMLJobName",
            "AutoMLJobInputDataConfig",
            "OutputDataConfig",
            "AutoMLProblemTypeConfig",
            "RoleArn"
        ],
        "CreateCluster": [
            "ClusterName",
            "InstanceGroups"
        ],
        "CreateCodeRepository": [
            "CodeRepositoryName",
            "GitConfig"
        ],
        "CreateCompilationJob": [
            "CompilationJobName",
            "RoleArn",
            "OutputConfig",
            "StoppingCondition"
        ],
        "CreateContext": [
            "ContextName",
            "Source",
            "ContextType"
        ],
        "CreateDataQualityJobDefinition": [
            "JobDefinitionName",
            "DataQualityAppSpecification",
            "DataQualityJobInput",
            "DataQualityJobOutputConfig",
            "JobResources",
            "RoleArn"
        ],
        "CreateDeviceFleet": [
            "DeviceFleetName",
            "OutputConfig"
        ],
        "CreateDomain": [
            "DomainName",
            "AuthMode",
            "DefaultUserSettings",
            "SubnetIds",
            "VpcId"
        ],
        "CreateEdgeDeploymentPlan": [
            "EdgeDeploymentPlanName",
            "ModelConfigs",
            "DeviceFleetName"
        ],
        "CreateEdgeDeploymentStage": [
            "EdgeDeploymentPlanName",
            "Stages"
        ],
        "CreateEdgePackagingJob": [
            "EdgePackagingJobName",
            "CompilationJobName",
            "ModelName",
            "ModelVersion",
            "RoleArn",
            "OutputConfig"
        ],
        "CreateEndpoint": [
            "EndpointName",
            "EndpointConfigName"
        ],
        "CreateEndpointConfig": [
            "EndpointConfigName",
            "ProductionVariants"
        ],
        "CreateExperiment": [
            "ExperimentName"
        ],
        "CreateFeatureGroup": [
            "FeatureGroupName",
            "RecordIdentifierFeatureName",
            "EventTimeFeatureName",
            "FeatureDefinitions"
        ],
        "CreateFlowDefinition": [
            "FlowDefinitionName",
            "OutputConfig",
            "RoleArn"
        ],
        "CreateHub": [
            "HubName",
            "HubDescription"
        ],
        "CreateHumanTaskUi": [
            "HumanTaskUiName",
            "UiTemplate"
        ],
        "CreateHyperParameterTuningJob": [
            "HyperParameterTuningJobName",
            "HyperParameterTuningJobConfig"
        ],
        "CreateImage": [
            "ImageName",
            "RoleArn"
        ],
        "CreateImageVersion": [
            "BaseImage",
            "ClientToken",
            "ImageName"
        ],
        "CreateInferenceComponent": [
            "InferenceComponentName",
            "EndpointName",
            "VariantName",
            "Specification",
            "RuntimeConfig"
        ],
        "CreateInferenceExperiment": [
            "Name",
            "Type",
            "RoleArn",
            "EndpointName",
            "ModelVariants",
            "ShadowModeConfig"
        ],
        "CreateInferenceRecommendationsJob": [
            "JobName",
            "JobType",
            "RoleArn",
            "InputConfig"
        ],
        "CreateLabelingJob": [
            "LabelingJobName",
            "LabelAttributeName",
            "InputConfig",
            "OutputConfig",
            "RoleArn",
            "HumanTaskConfig"
        ],
        "CreateModel": [
            "ModelName"
        ],
        "CreateModelBiasJobDefinition": [
            "JobDefinitionName",
            "ModelBiasAppSpecification",
            "ModelBiasJobInput",
            "ModelBiasJobOutputConfig",
            "JobResources",
            "RoleArn"
        ],
        "CreateModelCard": [
            "ModelCardName",
            "Content",
            "ModelCardStatus"
        ],
        "CreateModelCardExportJob": [
            "ModelCardName",
            "ModelCardExportJobName",
            "OutputConfig"
        ],
        "CreateModelExplainabilityJobDefinition": [
            "JobDefinitionName",
            "ModelExplainabilityAppSpecification",
            "ModelExplainabilityJobInput",
            "ModelExplainabilityJobOutputConfig",
            "JobResources",
            "RoleArn"
        ],
        "CreateModelPackage": "",
        "CreateModelPackageGroup": [
            "ModelPackageGroupName"
        ],
        "CreateModelQualityJobDefinition": [
            "JobDefinitionName",
            "ModelQualityAppSpecification",
            "ModelQualityJobInput",
            "ModelQualityJobOutputConfig",
            "JobResources",
            "RoleArn"
        ],
        "CreateMonitoringSchedule": [
            "MonitoringScheduleName",
            "MonitoringScheduleConfig"
        ],
        "CreateNotebookInstance": [
            "NotebookInstanceName",
            "InstanceType",
            "RoleArn"
        ],
        "CreateNotebookInstanceLifecycleConfig": [
            "NotebookInstanceLifecycleConfigName"
        ],
        "CreatePipeline": [
            "PipelineName",
            "ClientRequestToken",
            "RoleArn"
        ],
        "CreatePresignedDomainUrl": [
            "DomainId",
            "UserProfileName"
        ],
        "CreatePresignedNotebookInstanceUrl": [
            "NotebookInstanceName"
        ],
        "CreateProcessingJob": [
            "ProcessingJobName",
            "ProcessingResources",
            "AppSpecification",
            "RoleArn"
        ],
        "CreateProject": [
            "ProjectName",
            "ServiceCatalogProvisioningDetails"
        ],
        "CreateSpace": [
            "DomainId",
            "SpaceName"
        ],
        "CreateStudioLifecycleConfig": [
            "StudioLifecycleConfigName",
            "StudioLifecycleConfigContent",
            "StudioLifecycleConfigAppType"
        ],
        "CreateTrainingJob": [
            "TrainingJobName",
            "AlgorithmSpecification",
            "RoleArn",
            "OutputDataConfig",
            "ResourceConfig",
            "StoppingCondition"
        ],
        "CreateTransformJob": [
            "TransformJobName",
            "ModelName",
            "TransformInput",
            "TransformOutput",
            "TransformResources"
        ],
        "CreateTrial": [
            "TrialName",
            "ExperimentName"
        ],
        "CreateTrialComponent": [
            "TrialComponentName"
        ],
        "CreateUserProfile": [
            "DomainId",
            "UserProfileName"
        ],
        "CreateWorkforce": [
            "WorkforceName"
        ],
        "CreateWorkteam": [
            "WorkteamName",
            "MemberDefinitions",
            "Description"
        ],
        "DeleteAction": [
            "ActionName"
        ],
        "DeleteAlgorithm": [
            "AlgorithmName"
        ],
        "DeleteApp": [
            "DomainId",
            "AppType",
            "AppName"
        ],
        "DeleteAppImageConfig": [
            "AppImageConfigName"
        ],
        "DeleteArtifact": "",
        "DeleteAssociation": [
            "SourceArn",
            "DestinationArn"
        ],
        "DeleteCluster": [
            "ClusterName"
        ],
        "DeleteCodeRepository": [
            "CodeRepositoryName"
        ],
        "DeleteCompilationJob": [
            "CompilationJobName"
        ],
        "DeleteContext": [
            "ContextName"
        ],
        "DeleteDataQualityJobDefinition": [
            "JobDefinitionName"
        ],
        "DeleteDeviceFleet": [
            "DeviceFleetName"
        ],
        "DeleteDomain": [
            "DomainId"
        ],
        "DeleteEdgeDeploymentPlan": [
            "EdgeDeploymentPlanName"
        ],
        "DeleteEdgeDeploymentStage": [
            "EdgeDeploymentPlanName",
            "StageName"
        ],
        "DeleteEndpoint": [
            "EndpointName"
        ],
        "DeleteEndpointConfig": [
            "EndpointConfigName"
        ],
        "DeleteExperiment": [
            "ExperimentName"
        ],
        "DeleteFeatureGroup": [
            "FeatureGroupName"
        ],
        "DeleteFlowDefinition": [
            "FlowDefinitionName"
        ],
        "DeleteHub": [
            "HubName"
        ],
        "DeleteHubContent": [
            "HubName",
            "HubContentType",
            "HubContentName",
            "HubContentVersion"
        ],
        "DeleteHumanTaskUi": [
            "HumanTaskUiName"
        ],
        "DeleteHyperParameterTuningJob": [
            "HyperParameterTuningJobName"
        ],
        "DeleteImage": [
            "ImageName"
        ],
        "DeleteImageVersion": [
            "ImageName"
        ],
        "DeleteInferenceComponent": [
            "InferenceComponentName"
        ],
        "DeleteInferenceExperiment": [
            "Name"
        ],
        "DeleteModel": [
            "ModelName"
        ],
        "DeleteModelBiasJobDefinition": [
            "JobDefinitionName"
        ],
        "DeleteModelCard": [
            "ModelCardName"
        ],
        "DeleteModelExplainabilityJobDefinition": [
            "JobDefinitionName"
        ],
        "DeleteModelPackage": [
            "ModelPackageName"
        ],
        "DeleteModelPackageGroup": [
            "ModelPackageGroupName"
        ],
        "DeleteModelPackageGroupPolicy": [
            "ModelPackageGroupName"
        ],
        "DeleteModelQualityJobDefinition": [
            "JobDefinitionName"
        ],
        "DeleteMonitoringSchedule": [
            "MonitoringScheduleName"
        ],
        "DeleteNotebookInstance": [
            "NotebookInstanceName"
        ],
        "DeleteNotebookInstanceLifecycleConfig": [
            "NotebookInstanceLifecycleConfigName"
        ],
        "DeletePipeline": [
            "PipelineName",
            "ClientRequestToken"
        ],
        "DeleteProject": [
            "ProjectName"
        ],
        "DeleteSpace": [
            "DomainId",
            "SpaceName"
        ],
        "DeleteStudioLifecycleConfig": [
            "StudioLifecycleConfigName"
        ],
        "DeleteTags": [
            "ResourceArn",
            "TagKeys"
        ],
        "DeleteTrial": [
            "TrialName"
        ],
        "DeleteTrialComponent": [
            "TrialComponentName"
        ],
        "DeleteUserProfile": [
            "DomainId",
            "UserProfileName"
        ],
        "DeleteWorkforce": [
            "WorkforceName"
        ],
        "DeleteWorkteam": [
            "WorkteamName"
        ],
        "DeregisterDevices": [
            "DeviceFleetName",
            "DeviceNames"
        ],
        "DescribeAction": [
            "ActionName"
        ],
        "DescribeAlgorithm": [
            "AlgorithmName"
        ],
        "DescribeApp": [
            "DomainId",
            "AppType",
            "AppName"
        ],
        "DescribeAppImageConfig": [
            "AppImageConfigName"
        ],
        "DescribeArtifact": [
            "ArtifactArn"
        ],
        "DescribeAutoMLJob": [
            "AutoMLJobName"
        ],
        "DescribeAutoMLJobV2": [
            "AutoMLJobName"
        ],
        "DescribeCluster": [
            "ClusterName"
        ],
        "DescribeClusterNode": [
            "ClusterName",
            "NodeId"
        ],
        "DescribeCodeRepository": [
            "CodeRepositoryName"
        ],
        "DescribeCompilationJob": [
            "CompilationJobName"
        ],
        "DescribeContext": [
            "ContextName"
        ],
        "DescribeDataQualityJobDefinition": [
            "JobDefinitionName"
        ],
        "DescribeDevice": [
            "DeviceName",
            "DeviceFleetName"
        ],
        "DescribeDeviceFleet": [
            "DeviceFleetName"
        ],
        "DescribeDomain": [
            "DomainId"
        ],
        "DescribeEdgeDeploymentPlan": [
            "EdgeDeploymentPlanName"
        ],
        "DescribeEdgePackagingJob": [
            "EdgePackagingJobName"
        ],
        "DescribeEndpoint": [
            "EndpointName"
        ],
        "DescribeEndpointConfig": [
            "EndpointConfigName"
        ],
        "DescribeExperiment": [
            "ExperimentName"
        ],
        "DescribeFeatureGroup": [
            "FeatureGroupName"
        ],
        "DescribeFeatureMetadata": [
            "FeatureGroupName",
            "FeatureName"
        ],
        "DescribeFlowDefinition": [
            "FlowDefinitionName"
        ],
        "DescribeHub": [
            "HubName"
        ],
        "DescribeHubContent": [
            "HubName",
            "HubContentType",
            "HubContentName"
        ],
        "DescribeHumanTaskUi": [
            "HumanTaskUiName"
        ],
        "DescribeHyperParameterTuningJob": [
            "HyperParameterTuningJobName"
        ],
        "DescribeImage": [
            "ImageName"
        ],
        "DescribeImageVersion": [
            "ImageName"
        ],
        "DescribeInferenceComponent": [
            "InferenceComponentName"
        ],
        "DescribeInferenceExperiment": [
            "Name"
        ],
        "DescribeInferenceRecommendationsJob": [
            "JobName"
        ],
        "DescribeLabelingJob": [
            "LabelingJobName"
        ],
        "DescribeLineageGroup": [
            "LineageGroupName"
        ],
        "DescribeModel": [
            "ModelName"
        ],
        "DescribeModelBiasJobDefinition": [
            "JobDefinitionName"
        ],
        "DescribeModelCard": [
            "ModelCardName"
        ],
        "DescribeModelCardExportJob": [
            "ModelCardExportJobArn"
        ],
        "DescribeModelExplainabilityJobDefinition": [
            "JobDefinitionName"
        ],
        "DescribeModelPackage": [
            "ModelPackageName"
        ],
        "DescribeModelPackageGroup": [
            "ModelPackageGroupName"
        ],
        "DescribeModelQualityJobDefinition": [
            "JobDefinitionName"
        ],
        "DescribeMonitoringSchedule": [
            "MonitoringScheduleName"
        ],
        "DescribeNotebookInstance": [
            "NotebookInstanceName"
        ],
        "DescribeNotebookInstanceLifecycleConfig": [
            "NotebookInstanceLifecycleConfigName"
        ],
        "DescribePipeline": [
            "PipelineName"
        ],
        "DescribePipelineDefinitionForExecution": [
            "PipelineExecutionArn"
        ],
        "DescribePipelineExecution": [
            "PipelineExecutionArn"
        ],
        "DescribeProcessingJob": [
            "ProcessingJobName"
        ],
        "DescribeProject": [
            "ProjectName"
        ],
        "DescribeSpace": [
            "DomainId",
            "SpaceName"
        ],
        "DescribeStudioLifecycleConfig": [
            "StudioLifecycleConfigName"
        ],
        "DescribeSubscribedWorkteam": [
            "WorkteamArn"
        ],
        "DescribeTrainingJob": [
            "TrainingJobName"
        ],
        "DescribeTransformJob": [
            "TransformJobName"
        ],
        "DescribeTrial": [
            "TrialName"
        ],
        "DescribeTrialComponent": [
            "TrialComponentName"
        ],
        "DescribeUserProfile": [
            "DomainId",
            "UserProfileName"
        ],
        "DescribeWorkforce": [
            "WorkforceName"
        ],
        "DescribeWorkteam": [
            "WorkteamName"
        ],
        "DisableSagemakerServicecatalogPortfolio": "",
        "DisassociateTrialComponent": [
            "TrialComponentName",
            "TrialName"
        ],
        "EnableSagemakerServicecatalogPortfolio": "",
        "GetDeviceFleetReport": [
            "DeviceFleetName"
        ],
        "GetLineageGroupPolicy": [
            "LineageGroupName"
        ],
        "GetModelPackageGroupPolicy": [
            "ModelPackageGroupName"
        ],
        "GetSagemakerServicecatalogPortfolioStatus": "",
        "GetScalingConfigurationRecommendation": [
            "InferenceRecommendationsJobName"
        ],
        "GetSearchSuggestions": [
            "Resource"
        ],
        "ImportHubContent": [
            "HubContentName",
            "HubContentType",
            "DocumentSchemaVersion",
            "HubName",
            "HubContentDocument"
        ],
        "ListActions": "",
        "ListAlgorithms": "",
        "ListAliases": [
            "ImageName"
        ],
        "ListAppImageConfigs": "",
        "ListApps": "",
        "ListArtifacts": "",
        "ListAssociations": "",
        "ListAutoMLJobs": "",
        "ListCandidatesForAutoMLJob": [
            "AutoMLJobName"
        ],
        "ListClusterNodes": [
            "ClusterName"
        ],
        "ListClusters": "",
        "ListCodeRepositories": "",
        "ListCompilationJobs": "",
        "ListContexts": "",
        "ListDataQualityJobDefinitions": "",
        "ListDeviceFleets": "",
        "ListDevices": "",
        "ListDomains": "",
        "ListEdgeDeploymentPlans": "",
        "ListEdgePackagingJobs": "",
        "ListEndpointConfigs": "",
        "ListEndpoints": "",
        "ListExperiments": "",
        "ListFeatureGroups": "",
        "ListFlowDefinitions": "",
        "ListHubContentVersions": [
            "HubName",
            "HubContentType",
            "HubContentName"
        ],
        "ListHubContents": [
            "HubName",
            "HubContentType"
        ],
        "ListHubs": "",
        "ListHumanTaskUis": "",
        "ListHyperParameterTuningJobs": "",
        "ListImageVersions": [
            "ImageName"
        ],
        "ListImages": "",
        "ListInferenceComponents": "",
        "ListInferenceExperiments": "",
        "ListInferenceRecommendationsJobSteps": [
            "JobName"
        ],
        "ListInferenceRecommendationsJobs": "",
        "ListLabelingJobs": "",
        "ListLabelingJobsForWorkteam": [
            "WorkteamArn"
        ],
        "ListLineageGroups": "",
        "ListModelBiasJobDefinitions": "",
        "ListModelCardExportJobs": [
            "ModelCardName"
        ],
        "ListModelCardVersions": [
            "ModelCardName"
        ],
        "ListModelCards": "",
        "ListModelExplainabilityJobDefinitions": "",
        "ListModelMetadata": "",
        "ListModelPackageGroups": "",
        "ListModelPackages": "",
        "ListModelQualityJobDefinitions": "",
        "ListModels": "",
        "ListMonitoringAlertHistory": "",
        "ListMonitoringAlerts": [
            "MonitoringScheduleName"
        ],
        "ListMonitoringExecutions": "",
        "ListMonitoringSchedules": "",
        "ListNotebookInstanceLifecycleConfigs": "",
        "ListNotebookInstances": "",
        "ListPipelineExecutionSteps": "",
        "ListPipelineExecutions": [
            "PipelineName"
        ],
        "ListPipelineParametersForExecution": [
            "PipelineExecutionArn"
        ],
        "ListPipelines": "",
        "ListProcessingJobs": "",
        "ListProjects": "",
        "ListResourceCatalogs": "",
        "ListSpaces": "",
        "ListStageDevices": [
            "EdgeDeploymentPlanName",
            "StageName"
        ],
        "ListStudioLifecycleConfigs": "",
        "ListSubscribedWorkteams": "",
        "ListTags": [
            "ResourceArn"
        ],
        "ListTrainingJobs": "",
        "ListTrainingJobsForHyperParameterTuningJob": [
            "HyperParameterTuningJobName"
        ],
        "ListTransformJobs": "",
        "ListTrialComponents": "",
        "ListTrials": "",
        "ListUserProfiles": "",
        "ListWorkforces": "",
        "ListWorkteams": "",
        "PutModelPackageGroupPolicy": [
            "ModelPackageGroupName",
            "ResourcePolicy"
        ],
        "QueryLineage": "",
        "RegisterDevices": [
            "DeviceFleetName",
            "Devices"
        ],
        "RenderUiTemplate": [
            "Task",
            "RoleArn"
        ],
        "RetryPipelineExecution": [
            "PipelineExecutionArn",
            "ClientRequestToken"
        ],
        "Search": [
            "Resource"
        ],
        "SendPipelineExecutionStepFailure": [
            "CallbackToken"
        ],
        "SendPipelineExecutionStepSuccess": [
            "CallbackToken"
        ],
        "StartEdgeDeploymentStage": [
            "EdgeDeploymentPlanName",
            "StageName"
        ],
        "StartInferenceExperiment": [
            "Name"
        ],
        "StartMonitoringSchedule": [
            "MonitoringScheduleName"
        ],
        "StartNotebookInstance": [
            "NotebookInstanceName"
        ],
        "StartPipelineExecution": [
            "PipelineName",
            "ClientRequestToken"
        ],
        "StopAutoMLJob": [
            "AutoMLJobName"
        ],
        "StopCompilationJob": [
            "CompilationJobName"
        ],
        "StopEdgeDeploymentStage": [
            "EdgeDeploymentPlanName",
            "StageName"
        ],
        "StopEdgePackagingJob": [
            "EdgePackagingJobName"
        ],
        "StopHyperParameterTuningJob": [
            "HyperParameterTuningJobName"
        ],
        "StopInferenceExperiment": [
            "Name",
            "ModelVariantActions"
        ],
        "StopInferenceRecommendationsJob": [
            "JobName"
        ],
        "StopLabelingJob": [
            "LabelingJobName"
        ],
        "StopMonitoringSchedule": [
            "MonitoringScheduleName"
        ],
        "StopNotebookInstance": [
            "NotebookInstanceName"
        ],
        "StopPipelineExecution": [
            "PipelineExecutionArn",
            "ClientRequestToken"
        ],
        "StopProcessingJob": [
            "ProcessingJobName"
        ],
        "StopTrainingJob": [
            "TrainingJobName"
        ],
        "StopTransformJob": [
            "TransformJobName"
        ],
        "UpdateAction": [
            "ActionName"
        ],
        "UpdateAppImageConfig": [
            "AppImageConfigName"
        ],
        "UpdateArtifact": [
            "ArtifactArn"
        ],
        "UpdateCluster": [
            "ClusterName",
            "InstanceGroups"
        ],
        "UpdateClusterSoftware": [
            "ClusterName"
        ],
        "UpdateCodeRepository": [
            "CodeRepositoryName"
        ],
        "UpdateContext": [
            "ContextName"
        ],
        "UpdateDeviceFleet": [
            "DeviceFleetName",
            "OutputConfig"
        ],
        "UpdateDevices": [
            "DeviceFleetName",
            "Devices"
        ],
        "UpdateDomain": [
            "DomainId"
        ],
        "UpdateEndpoint": [
            "EndpointName",
            "EndpointConfigName"
        ],
        "UpdateEndpointWeightsAndCapacities": [
            "EndpointName",
            "DesiredWeightsAndCapacities"
        ],
        "UpdateExperiment": [
            "ExperimentName"
        ],
        "UpdateFeatureGroup": [
            "FeatureGroupName"
        ],
        "UpdateFeatureMetadata": [
            "FeatureGroupName",
            "FeatureName"
        ],
        "UpdateHub": [
            "HubName"
        ],
        "UpdateImage": [
            "ImageName"
        ],
        "UpdateImageVersion": [
            "ImageName"
        ],
        "UpdateInferenceComponent": [
            "InferenceComponentName"
        ],
        "UpdateInferenceComponentRuntimeConfig": [
            "InferenceComponentName",
            "DesiredRuntimeConfig"
        ],
        "UpdateInferenceExperiment": [
            "Name"
        ],
        "UpdateModelCard": [
            "ModelCardName"
        ],
        "UpdateModelPackage": [
            "ModelPackageArn"
        ],
        "UpdateMonitoringAlert": [
            "MonitoringScheduleName",
            "MonitoringAlertName",
            "DatapointsToAlert",
            "EvaluationPeriod"
        ],
        "UpdateMonitoringSchedule": [
            "MonitoringScheduleName",
            "MonitoringScheduleConfig"
        ],
        "UpdateNotebookInstance": [
            "NotebookInstanceName"
        ],
        "UpdateNotebookInstanceLifecycleConfig": [
            "NotebookInstanceLifecycleConfigName"
        ],
        "UpdatePipeline": [
            "PipelineName"
        ],
        "UpdatePipelineExecution": [
            "PipelineExecutionArn"
        ],
        "UpdateProject": [
            "ProjectName"
        ],
        "UpdateSpace": [
            "DomainId",
            "SpaceName"
        ],
        "UpdateTrainingJob": [
            "TrainingJobName"
        ],
        "UpdateTrial": [
            "TrialName"
        ],
        "UpdateTrialComponent": [
            "TrialComponentName"
        ],
        "UpdateUserProfile": [
            "DomainId",
            "UserProfileName"
        ],
        "UpdateWorkforce": [
            "WorkforceName"
        ],
        "UpdateWorkteam": [
            "WorkteamName"
        ]
    },
    "sagemaker-a2i-runtime": {
        "DeleteHumanLoop": [
            "HumanLoopName"
        ],
        "DescribeHumanLoop": [
            "HumanLoopName"
        ],
        "ListHumanLoops": [
            "FlowDefinitionArn"
        ],
        "StartHumanLoop": [
            "HumanLoopName",
            "FlowDefinitionArn",
            "HumanLoopInput"
        ],
        "StopHumanLoop": [
            "HumanLoopName"
        ]
    },
    "sagemaker-edge": {
        "GetDeployments": [
            "DeviceName",
            "DeviceFleetName"
        ],
        "GetDeviceRegistration": [
            "DeviceName",
            "DeviceFleetName"
        ],
        "SendHeartbeat": [
            "AgentVersion",
            "DeviceName",
            "DeviceFleetName"
        ]
    },
    "sagemaker-featurestore-runtime": {
        "BatchGetRecord": [
            "Identifiers"
        ],
        "DeleteRecord": [
            "FeatureGroupName",
            "RecordIdentifierValueAsString",
            "EventTime"
        ],
        "GetRecord": [
            "FeatureGroupName",
            "RecordIdentifierValueAsString"
        ],
        "PutRecord": [
            "FeatureGroupName",
            "Record"
        ]
    },
    "sagemaker-geospatial": {
        "DeleteEarthObservationJob": [
            "Arn"
        ],
        "DeleteVectorEnrichmentJob": [
            "Arn"
        ],
        "ExportEarthObservationJob": [
            "Arn",
            "ExecutionRoleArn",
            "OutputConfig"
        ],
        "ExportVectorEnrichmentJob": [
            "Arn",
            "ExecutionRoleArn",
            "OutputConfig"
        ],
        "GetEarthObservationJob": [
            "Arn"
        ],
        "GetRasterDataCollection": [
            "Arn"
        ],
        "GetTile": [
            "Arn",
            "ImageAssets",
            "Target",
            "x",
            "y",
            "z"
        ],
        "GetVectorEnrichmentJob": [
            "Arn"
        ],
        "ListEarthObservationJobs": "",
        "ListRasterDataCollections": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListVectorEnrichmentJobs": "",
        "SearchRasterDataCollection": [
            "Arn",
            "RasterDataCollectionQuery"
        ],
        "StartEarthObservationJob": [
            "ExecutionRoleArn",
            "InputConfig",
            "JobConfig",
            "Name"
        ],
        "StartVectorEnrichmentJob": [
            "ExecutionRoleArn",
            "InputConfig",
            "JobConfig",
            "Name"
        ],
        "StopEarthObservationJob": [
            "Arn"
        ],
        "StopVectorEnrichmentJob": [
            "Arn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ]
    },
    "sagemaker-metrics": {
        "BatchPutMetrics": [
            "TrialComponentName",
            "MetricData"
        ]
    },
    "savingsplans": {
        "CreateSavingsPlan": [
            "savingsPlanOfferingId",
            "commitment"
        ],
        "DeleteQueuedSavingsPlan": [
            "savingsPlanId"
        ],
        "DescribeSavingsPlanRates": [
            "savingsPlanId"
        ],
        "DescribeSavingsPlans": "",
        "DescribeSavingsPlansOfferingRates": "",
        "DescribeSavingsPlansOfferings": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ReturnSavingsPlan": [
            "savingsPlanId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "scheduler": {
        "CreateSchedule": [
            "FlexibleTimeWindow",
            "Name",
            "ScheduleExpression",
            "Target"
        ],
        "CreateScheduleGroup": [
            "Name"
        ],
        "DeleteSchedule": [
            "Name"
        ],
        "DeleteScheduleGroup": [
            "Name"
        ],
        "GetSchedule": [
            "Name"
        ],
        "GetScheduleGroup": [
            "Name"
        ],
        "ListScheduleGroups": "",
        "ListSchedules": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateSchedule": [
            "FlexibleTimeWindow",
            "Name",
            "ScheduleExpression",
            "Target"
        ]
    },
    "schemas": {
        "CreateDiscoverer": [
            "SourceArn"
        ],
        "CreateRegistry": [
            "RegistryName"
        ],
        "CreateSchema": [
            "RegistryName",
            "SchemaName",
            "Type",
            "Content"
        ],
        "DeleteDiscoverer": [
            "DiscovererId"
        ],
        "DeleteRegistry": [
            "RegistryName"
        ],
        "DeleteResourcePolicy": "",
        "DeleteSchema": [
            "RegistryName",
            "SchemaName"
        ],
        "DeleteSchemaVersion": [
            "SchemaVersion",
            "RegistryName",
            "SchemaName"
        ],
        "DescribeCodeBinding": [
            "RegistryName",
            "SchemaName",
            "Language"
        ],
        "DescribeDiscoverer": [
            "DiscovererId"
        ],
        "DescribeRegistry": [
            "RegistryName"
        ],
        "DescribeSchema": [
            "RegistryName",
            "SchemaName"
        ],
        "ExportSchema": [
            "RegistryName",
            "SchemaName",
            "Type"
        ],
        "GetCodeBindingSource": [
            "RegistryName",
            "SchemaName",
            "Language"
        ],
        "GetDiscoveredSchema": [
            "Type",
            "Events"
        ],
        "GetResourcePolicy": "",
        "ListDiscoverers": "",
        "ListRegistries": "",
        "ListSchemaVersions": [
            "RegistryName",
            "SchemaName"
        ],
        "ListSchemas": [
            "RegistryName"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutCodeBinding": [
            "RegistryName",
            "SchemaName",
            "Language"
        ],
        "PutResourcePolicy": [
            "Policy"
        ],
        "SearchSchemas": [
            "RegistryName",
            "Keywords"
        ],
        "StartDiscoverer": [
            "DiscovererId"
        ],
        "StopDiscoverer": [
            "DiscovererId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "TagKeys",
            "ResourceArn"
        ],
        "UpdateDiscoverer": [
            "DiscovererId"
        ],
        "UpdateRegistry": [
            "RegistryName"
        ],
        "UpdateSchema": [
            "RegistryName",
            "SchemaName"
        ]
    },
    "sdb": {
        "BatchDeleteAttributes": [
            "DomainName",
            "Items"
        ],
        "BatchPutAttributes": [
            "DomainName",
            "Items"
        ],
        "CreateDomain": [
            "DomainName"
        ],
        "DeleteAttributes": [
            "DomainName",
            "ItemName"
        ],
        "DeleteDomain": [
            "DomainName"
        ],
        "DomainMetadata": [
            "DomainName"
        ],
        "GetAttributes": [
            "DomainName",
            "ItemName"
        ],
        "ListDomains": "",
        "PutAttributes": [
            "DomainName",
            "ItemName",
            "Attributes"
        ],
        "Select": [
            "SelectExpression"
        ]
    },
    "secretsmanager": {
        "BatchGetSecretValue": "",
        "CancelRotateSecret": [
            "SecretId"
        ],
        "CreateSecret": [
            "Name"
        ],
        "DeleteResourcePolicy": [
            "SecretId"
        ],
        "DeleteSecret": [
            "SecretId"
        ],
        "DescribeSecret": [
            "SecretId"
        ],
        "GetRandomPassword": "",
        "GetResourcePolicy": [
            "SecretId"
        ],
        "GetSecretValue": [
            "SecretId"
        ],
        "ListSecretVersionIds": [
            "SecretId"
        ],
        "ListSecrets": "",
        "PutResourcePolicy": [
            "SecretId",
            "ResourcePolicy"
        ],
        "PutSecretValue": [
            "SecretId"
        ],
        "RemoveRegionsFromReplication": [
            "SecretId",
            "RemoveReplicaRegions"
        ],
        "ReplicateSecretToRegions": [
            "SecretId",
            "AddReplicaRegions"
        ],
        "RestoreSecret": [
            "SecretId"
        ],
        "RotateSecret": [
            "SecretId"
        ],
        "StopReplicationToReplica": [
            "SecretId"
        ],
        "TagResource": [
            "SecretId",
            "Tags"
        ],
        "UntagResource": [
            "SecretId",
            "TagKeys"
        ],
        "UpdateSecret": [
            "SecretId"
        ],
        "UpdateSecretVersionStage": [
            "SecretId",
            "VersionStage"
        ],
        "ValidateResourcePolicy": [
            "ResourcePolicy"
        ]
    },
    "securityhub": {
        "AcceptAdministratorInvitation": [
            "AdministratorId",
            "InvitationId"
        ],
        "AcceptInvitation": [
            "MasterId",
            "InvitationId"
        ],
        "BatchDeleteAutomationRules": [
            "AutomationRulesArns"
        ],
        "BatchDisableStandards": [
            "StandardsSubscriptionArns"
        ],
        "BatchEnableStandards": [
            "StandardsSubscriptionRequests"
        ],
        "BatchGetAutomationRules": [
            "AutomationRulesArns"
        ],
        "BatchGetConfigurationPolicyAssociations": [
            "ConfigurationPolicyAssociationIdentifiers"
        ],
        "BatchGetSecurityControls": [
            "SecurityControlIds"
        ],
        "BatchGetStandardsControlAssociations": [
            "StandardsControlAssociationIds"
        ],
        "BatchImportFindings": [
            "Findings"
        ],
        "BatchUpdateAutomationRules": [
            "UpdateAutomationRulesRequestItems"
        ],
        "BatchUpdateFindings": [
            "FindingIdentifiers"
        ],
        "BatchUpdateStandardsControlAssociations": [
            "StandardsControlAssociationUpdates"
        ],
        "CreateActionTarget": [
            "Name",
            "Description",
            "Id"
        ],
        "CreateAutomationRule": [
            "RuleOrder",
            "RuleName",
            "Description",
            "Criteria",
            "Actions"
        ],
        "CreateConfigurationPolicy": [
            "Name",
            "ConfigurationPolicy"
        ],
        "CreateFindingAggregator": [
            "RegionLinkingMode"
        ],
        "CreateInsight": [
            "Name",
            "Filters",
            "GroupByAttribute"
        ],
        "CreateMembers": [
            "AccountDetails"
        ],
        "DeclineInvitations": [
            "AccountIds"
        ],
        "DeleteActionTarget": [
            "ActionTargetArn"
        ],
        "DeleteConfigurationPolicy": [
            "Identifier"
        ],
        "DeleteFindingAggregator": [
            "FindingAggregatorArn"
        ],
        "DeleteInsight": [
            "InsightArn"
        ],
        "DeleteInvitations": [
            "AccountIds"
        ],
        "DeleteMembers": [
            "AccountIds"
        ],
        "DescribeActionTargets": "",
        "DescribeHub": "",
        "DescribeOrganizationConfiguration": "",
        "DescribeProducts": "",
        "DescribeStandards": "",
        "DescribeStandardsControls": [
            "StandardsSubscriptionArn"
        ],
        "DisableImportFindingsForProduct": [
            "ProductSubscriptionArn"
        ],
        "DisableOrganizationAdminAccount": [
            "AdminAccountId"
        ],
        "DisableSecurityHub": "",
        "DisassociateFromAdministratorAccount": "",
        "DisassociateFromMasterAccount": "",
        "DisassociateMembers": [
            "AccountIds"
        ],
        "EnableImportFindingsForProduct": [
            "ProductArn"
        ],
        "EnableOrganizationAdminAccount": [
            "AdminAccountId"
        ],
        "EnableSecurityHub": "",
        "GetAdministratorAccount": "",
        "GetConfigurationPolicy": [
            "Identifier"
        ],
        "GetConfigurationPolicyAssociation": [
            "Target"
        ],
        "GetEnabledStandards": "",
        "GetFindingAggregator": [
            "FindingAggregatorArn"
        ],
        "GetFindingHistory": [
            "FindingIdentifier"
        ],
        "GetFindings": "",
        "GetInsightResults": [
            "InsightArn"
        ],
        "GetInsights": "",
        "GetInvitationsCount": "",
        "GetMasterAccount": "",
        "GetMembers": [
            "AccountIds"
        ],
        "GetSecurityControlDefinition": [
            "SecurityControlId"
        ],
        "InviteMembers": [
            "AccountIds"
        ],
        "ListAutomationRules": "",
        "ListConfigurationPolicies": "",
        "ListConfigurationPolicyAssociations": "",
        "ListEnabledProductsForImport": "",
        "ListFindingAggregators": "",
        "ListInvitations": "",
        "ListMembers": "",
        "ListOrganizationAdminAccounts": "",
        "ListSecurityControlDefinitions": "",
        "ListStandardsControlAssociations": [
            "SecurityControlId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartConfigurationPolicyAssociation": [
            "ConfigurationPolicyIdentifier",
            "Target"
        ],
        "StartConfigurationPolicyDisassociation": [
            "ConfigurationPolicyIdentifier"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateActionTarget": [
            "ActionTargetArn"
        ],
        "UpdateConfigurationPolicy": [
            "Identifier"
        ],
        "UpdateFindingAggregator": [
            "FindingAggregatorArn",
            "RegionLinkingMode"
        ],
        "UpdateFindings": [
            "Filters"
        ],
        "UpdateInsight": [
            "InsightArn"
        ],
        "UpdateOrganizationConfiguration": [
            "AutoEnable"
        ],
        "UpdateSecurityControl": [
            "SecurityControlId",
            "Parameters"
        ],
        "UpdateSecurityHubConfiguration": "",
        "UpdateStandardsControl": [
            "StandardsControlArn"
        ]
    },
    "securitylake": {
        "CreateAwsLogSource": [
            "sources"
        ],
        "CreateCustomLogSource": [
            "configuration",
            "sourceName"
        ],
        "CreateDataLake": [
            "configurations",
            "metaStoreManagerRoleArn"
        ],
        "CreateDataLakeExceptionSubscription": [
            "notificationEndpoint",
            "subscriptionProtocol"
        ],
        "CreateDataLakeOrganizationConfiguration": "",
        "CreateSubscriber": [
            "sources",
            "subscriberIdentity",
            "subscriberName"
        ],
        "CreateSubscriberNotification": [
            "configuration",
            "subscriberId"
        ],
        "DeleteAwsLogSource": [
            "sources"
        ],
        "DeleteCustomLogSource": [
            "sourceName"
        ],
        "DeleteDataLake": [
            "regions"
        ],
        "DeleteDataLakeExceptionSubscription": "",
        "DeleteDataLakeOrganizationConfiguration": "",
        "DeleteSubscriber": [
            "subscriberId"
        ],
        "DeleteSubscriberNotification": [
            "subscriberId"
        ],
        "DeregisterDataLakeDelegatedAdministrator": "",
        "GetDataLakeExceptionSubscription": "",
        "GetDataLakeOrganizationConfiguration": "",
        "GetDataLakeSources": "",
        "GetSubscriber": [
            "subscriberId"
        ],
        "ListDataLakeExceptions": "",
        "ListDataLakes": "",
        "ListLogSources": "",
        "ListSubscribers": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "RegisterDataLakeDelegatedAdministrator": [
            "accountId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDataLake": [
            "configurations"
        ],
        "UpdateDataLakeExceptionSubscription": [
            "notificationEndpoint",
            "subscriptionProtocol"
        ],
        "UpdateSubscriber": [
            "subscriberId"
        ],
        "UpdateSubscriberNotification": [
            "configuration",
            "subscriberId"
        ]
    },
    "serverlessrepo": {
        "CreateApplication": [
            "Description",
            "Name",
            "Author"
        ],
        "CreateApplicationVersion": [
            "ApplicationId",
            "SemanticVersion"
        ],
        "CreateCloudFormationChangeSet": [
            "ApplicationId",
            "StackName"
        ],
        "CreateCloudFormationTemplate": [
            "ApplicationId"
        ],
        "DeleteApplication": [
            "ApplicationId"
        ],
        "GetApplication": [
            "ApplicationId"
        ],
        "GetApplicationPolicy": [
            "ApplicationId"
        ],
        "GetCloudFormationTemplate": [
            "ApplicationId",
            "TemplateId"
        ],
        "ListApplicationDependencies": [
            "ApplicationId"
        ],
        "ListApplicationVersions": [
            "ApplicationId"
        ],
        "ListApplications": "",
        "PutApplicationPolicy": [
            "ApplicationId",
            "Statements"
        ],
        "UnshareApplication": [
            "ApplicationId",
            "OrganizationId"
        ],
        "UpdateApplication": [
            "ApplicationId"
        ]
    },
    "service-quotas": {
        "AssociateServiceQuotaTemplate": "",
        "DeleteServiceQuotaIncreaseRequestFromTemplate": [
            "ServiceCode",
            "QuotaCode",
            "AwsRegion"
        ],
        "DisassociateServiceQuotaTemplate": "",
        "GetAWSDefaultServiceQuota": [
            "ServiceCode",
            "QuotaCode"
        ],
        "GetAssociationForServiceQuotaTemplate": "",
        "GetRequestedServiceQuotaChange": [
            "RequestId"
        ],
        "GetServiceQuota": [
            "ServiceCode",
            "QuotaCode"
        ],
        "GetServiceQuotaIncreaseRequestFromTemplate": [
            "ServiceCode",
            "QuotaCode",
            "AwsRegion"
        ],
        "ListAWSDefaultServiceQuotas": [
            "ServiceCode"
        ],
        "ListRequestedServiceQuotaChangeHistory": "",
        "ListRequestedServiceQuotaChangeHistoryByQuota": [
            "ServiceCode",
            "QuotaCode"
        ],
        "ListServiceQuotaIncreaseRequestsInTemplate": "",
        "ListServiceQuotas": [
            "ServiceCode"
        ],
        "ListServices": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutServiceQuotaIncreaseRequestIntoTemplate": [
            "QuotaCode",
            "ServiceCode",
            "AwsRegion",
            "DesiredValue"
        ],
        "RequestServiceQuotaIncrease": [
            "ServiceCode",
            "QuotaCode",
            "DesiredValue"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ]
    },
    "servicecatalog": {
        "AcceptPortfolioShare": [
            "PortfolioId"
        ],
        "AssociateBudgetWithResource": [
            "BudgetName",
            "ResourceId"
        ],
        "AssociatePrincipalWithPortfolio": [
            "PortfolioId",
            "PrincipalARN",
            "PrincipalType"
        ],
        "AssociateProductWithPortfolio": [
            "ProductId",
            "PortfolioId"
        ],
        "AssociateServiceActionWithProvisioningArtifact": [
            "ProductId",
            "ProvisioningArtifactId",
            "ServiceActionId"
        ],
        "AssociateTagOptionWithResource": [
            "ResourceId",
            "TagOptionId"
        ],
        "BatchAssociateServiceActionWithProvisioningArtifact": [
            "ServiceActionAssociations"
        ],
        "BatchDisassociateServiceActionFromProvisioningArtifact": [
            "ServiceActionAssociations"
        ],
        "CopyProduct": [
            "SourceProductArn",
            "IdempotencyToken"
        ],
        "CreateConstraint": [
            "PortfolioId",
            "ProductId",
            "Parameters",
            "Type",
            "IdempotencyToken"
        ],
        "CreatePortfolio": [
            "DisplayName",
            "ProviderName",
            "IdempotencyToken"
        ],
        "CreatePortfolioShare": [
            "PortfolioId"
        ],
        "CreateProduct": [
            "Name",
            "Owner",
            "ProductType",
            "IdempotencyToken"
        ],
        "CreateProvisionedProductPlan": [
            "PlanName",
            "PlanType",
            "ProductId",
            "ProvisionedProductName",
            "ProvisioningArtifactId",
            "IdempotencyToken"
        ],
        "CreateProvisioningArtifact": [
            "ProductId",
            "Parameters",
            "IdempotencyToken"
        ],
        "CreateServiceAction": [
            "Name",
            "DefinitionType",
            "Definition",
            "IdempotencyToken"
        ],
        "CreateTagOption": [
            "Key",
            "Value"
        ],
        "DeleteConstraint": [
            "Id"
        ],
        "DeletePortfolio": [
            "Id"
        ],
        "DeletePortfolioShare": [
            "PortfolioId"
        ],
        "DeleteProduct": [
            "Id"
        ],
        "DeleteProvisionedProductPlan": [
            "PlanId"
        ],
        "DeleteProvisioningArtifact": [
            "ProductId",
            "ProvisioningArtifactId"
        ],
        "DeleteServiceAction": [
            "Id"
        ],
        "DeleteTagOption": [
            "Id"
        ],
        "DescribeConstraint": [
            "Id"
        ],
        "DescribeCopyProductStatus": [
            "CopyProductToken"
        ],
        "DescribePortfolio": [
            "Id"
        ],
        "DescribePortfolioShareStatus": [
            "PortfolioShareToken"
        ],
        "DescribePortfolioShares": [
            "PortfolioId",
            "Type"
        ],
        "DescribeProduct": "",
        "DescribeProductAsAdmin": "",
        "DescribeProductView": [
            "Id"
        ],
        "DescribeProvisionedProduct": "",
        "DescribeProvisionedProductPlan": [
            "PlanId"
        ],
        "DescribeProvisioningArtifact": "",
        "DescribeProvisioningParameters": "",
        "DescribeRecord": [
            "Id"
        ],
        "DescribeServiceAction": [
            "Id"
        ],
        "DescribeServiceActionExecutionParameters": [
            "ProvisionedProductId",
            "ServiceActionId"
        ],
        "DescribeTagOption": [
            "Id"
        ],
        "DisableAWSOrganizationsAccess": "",
        "DisassociateBudgetFromResource": [
            "BudgetName",
            "ResourceId"
        ],
        "DisassociatePrincipalFromPortfolio": [
            "PortfolioId",
            "PrincipalARN"
        ],
        "DisassociateProductFromPortfolio": [
            "ProductId",
            "PortfolioId"
        ],
        "DisassociateServiceActionFromProvisioningArtifact": [
            "ProductId",
            "ProvisioningArtifactId",
            "ServiceActionId"
        ],
        "DisassociateTagOptionFromResource": [
            "ResourceId",
            "TagOptionId"
        ],
        "EnableAWSOrganizationsAccess": "",
        "ExecuteProvisionedProductPlan": [
            "PlanId",
            "IdempotencyToken"
        ],
        "ExecuteProvisionedProductServiceAction": [
            "ProvisionedProductId",
            "ServiceActionId",
            "ExecuteToken"
        ],
        "GetAWSOrganizationsAccessStatus": "",
        "GetProvisionedProductOutputs": "",
        "ImportAsProvisionedProduct": [
            "ProductId",
            "ProvisioningArtifactId",
            "ProvisionedProductName",
            "PhysicalId",
            "IdempotencyToken"
        ],
        "ListAcceptedPortfolioShares": "",
        "ListBudgetsForResource": [
            "ResourceId"
        ],
        "ListConstraintsForPortfolio": [
            "PortfolioId"
        ],
        "ListLaunchPaths": [
            "ProductId"
        ],
        "ListOrganizationPortfolioAccess": [
            "PortfolioId",
            "OrganizationNodeType"
        ],
        "ListPortfolioAccess": [
            "PortfolioId"
        ],
        "ListPortfolios": "",
        "ListPortfoliosForProduct": [
            "ProductId"
        ],
        "ListPrincipalsForPortfolio": [
            "PortfolioId"
        ],
        "ListProvisionedProductPlans": "",
        "ListProvisioningArtifacts": [
            "ProductId"
        ],
        "ListProvisioningArtifactsForServiceAction": [
            "ServiceActionId"
        ],
        "ListRecordHistory": "",
        "ListResourcesForTagOption": [
            "TagOptionId"
        ],
        "ListServiceActions": "",
        "ListServiceActionsForProvisioningArtifact": [
            "ProductId",
            "ProvisioningArtifactId"
        ],
        "ListStackInstancesForProvisionedProduct": [
            "ProvisionedProductId"
        ],
        "ListTagOptions": "",
        "NotifyProvisionProductEngineWorkflowResult": [
            "WorkflowToken",
            "RecordId",
            "Status",
            "IdempotencyToken"
        ],
        "NotifyTerminateProvisionedProductEngineWorkflowResult": [
            "WorkflowToken",
            "RecordId",
            "Status",
            "IdempotencyToken"
        ],
        "NotifyUpdateProvisionedProductEngineWorkflowResult": [
            "WorkflowToken",
            "RecordId",
            "Status",
            "IdempotencyToken"
        ],
        "ProvisionProduct": [
            "ProvisionedProductName",
            "ProvisionToken"
        ],
        "RejectPortfolioShare": [
            "PortfolioId"
        ],
        "ScanProvisionedProducts": "",
        "SearchProducts": "",
        "SearchProductsAsAdmin": "",
        "SearchProvisionedProducts": "",
        "TerminateProvisionedProduct": [
            "TerminateToken"
        ],
        "UpdateConstraint": [
            "Id"
        ],
        "UpdatePortfolio": [
            "Id"
        ],
        "UpdatePortfolioShare": [
            "PortfolioId"
        ],
        "UpdateProduct": [
            "Id"
        ],
        "UpdateProvisionedProduct": [
            "UpdateToken"
        ],
        "UpdateProvisionedProductProperties": [
            "ProvisionedProductId",
            "ProvisionedProductProperties",
            "IdempotencyToken"
        ],
        "UpdateProvisioningArtifact": [
            "ProductId",
            "ProvisioningArtifactId"
        ],
        "UpdateServiceAction": [
            "Id"
        ],
        "UpdateTagOption": [
            "Id"
        ]
    },
    "AWS242AppRegistry": {
        "AssociateAttributeGroup": [
            "application",
            "attributeGroup"
        ],
        "AssociateResource": [
            "application",
            "resourceType",
            "resource"
        ],
        "CreateApplication": [
            "name",
            "clientToken"
        ],
        "CreateAttributeGroup": [
            "name",
            "attributes",
            "clientToken"
        ],
        "DeleteApplication": [
            "application"
        ],
        "DeleteAttributeGroup": [
            "attributeGroup"
        ],
        "DisassociateAttributeGroup": [
            "application",
            "attributeGroup"
        ],
        "DisassociateResource": [
            "application",
            "resourceType",
            "resource"
        ],
        "GetApplication": [
            "application"
        ],
        "GetAssociatedResource": [
            "application",
            "resourceType",
            "resource"
        ],
        "GetAttributeGroup": [
            "attributeGroup"
        ],
        "GetConfiguration": "",
        "ListApplications": "",
        "ListAssociatedAttributeGroups": [
            "application"
        ],
        "ListAssociatedResources": [
            "application"
        ],
        "ListAttributeGroups": "",
        "ListAttributeGroupsForApplication": [
            "application"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutConfiguration": [
            "configuration"
        ],
        "SyncResource": [
            "resourceType",
            "resource"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplication": [
            "application"
        ],
        "UpdateAttributeGroup": [
            "attributeGroup"
        ]
    },
    "servicediscovery": {
        "CreateHttpNamespace": [
            "Name"
        ],
        "CreatePrivateDnsNamespace": [
            "Name",
            "Vpc"
        ],
        "CreatePublicDnsNamespace": [
            "Name"
        ],
        "CreateService": [
            "Name"
        ],
        "DeleteNamespace": [
            "Id"
        ],
        "DeleteService": [
            "Id"
        ],
        "DeregisterInstance": [
            "ServiceId",
            "InstanceId"
        ],
        "DiscoverInstances": [
            "NamespaceName",
            "ServiceName"
        ],
        "DiscoverInstancesRevision": [
            "NamespaceName",
            "ServiceName"
        ],
        "GetInstance": [
            "ServiceId",
            "InstanceId"
        ],
        "GetInstancesHealthStatus": [
            "ServiceId"
        ],
        "GetNamespace": [
            "Id"
        ],
        "GetOperation": [
            "OperationId"
        ],
        "GetService": [
            "Id"
        ],
        "ListInstances": [
            "ServiceId"
        ],
        "ListNamespaces": "",
        "ListOperations": "",
        "ListServices": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "RegisterInstance": [
            "ServiceId",
            "InstanceId",
            "Attributes"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateHttpNamespace": [
            "Id",
            "Namespace"
        ],
        "UpdateInstanceCustomHealthStatus": [
            "ServiceId",
            "InstanceId",
            "Status"
        ],
        "UpdatePrivateDnsNamespace": [
            "Id",
            "Namespace"
        ],
        "UpdatePublicDnsNamespace": [
            "Id",
            "Namespace"
        ],
        "UpdateService": [
            "Id",
            "Service"
        ]
    },
    "sesv2": {
        "BatchGetMetricData": [
            "Queries"
        ],
        "CancelExportJob": [
            "JobId"
        ],
        "CreateConfigurationSet": [
            "ConfigurationSetName"
        ],
        "CreateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName",
            "EventDestination"
        ],
        "CreateContact": [
            "ContactListName",
            "EmailAddress"
        ],
        "CreateContactList": [
            "ContactListName"
        ],
        "CreateCustomVerificationEmailTemplate": [
            "TemplateName",
            "FromEmailAddress",
            "TemplateSubject",
            "TemplateContent",
            "SuccessRedirectionURL",
            "FailureRedirectionURL"
        ],
        "CreateDedicatedIpPool": [
            "PoolName"
        ],
        "CreateDeliverabilityTestReport": [
            "FromEmailAddress",
            "Content"
        ],
        "CreateEmailIdentity": [
            "EmailIdentity"
        ],
        "CreateEmailIdentityPolicy": [
            "EmailIdentity",
            "PolicyName",
            "Policy"
        ],
        "CreateEmailTemplate": [
            "TemplateName",
            "TemplateContent"
        ],
        "CreateExportJob": [
            "ExportDataSource",
            "ExportDestination"
        ],
        "CreateImportJob": [
            "ImportDestination",
            "ImportDataSource"
        ],
        "DeleteConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DeleteConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName"
        ],
        "DeleteContact": [
            "ContactListName",
            "EmailAddress"
        ],
        "DeleteContactList": [
            "ContactListName"
        ],
        "DeleteCustomVerificationEmailTemplate": [
            "TemplateName"
        ],
        "DeleteDedicatedIpPool": [
            "PoolName"
        ],
        "DeleteEmailIdentity": [
            "EmailIdentity"
        ],
        "DeleteEmailIdentityPolicy": [
            "EmailIdentity",
            "PolicyName"
        ],
        "DeleteEmailTemplate": [
            "TemplateName"
        ],
        "DeleteSuppressedDestination": [
            "EmailAddress"
        ],
        "GetAccount": "",
        "GetBlacklistReports": [
            "BlacklistItemNames"
        ],
        "GetConfigurationSet": [
            "ConfigurationSetName"
        ],
        "GetConfigurationSetEventDestinations": [
            "ConfigurationSetName"
        ],
        "GetContact": [
            "ContactListName",
            "EmailAddress"
        ],
        "GetContactList": [
            "ContactListName"
        ],
        "GetCustomVerificationEmailTemplate": [
            "TemplateName"
        ],
        "GetDedicatedIp": [
            "Ip"
        ],
        "GetDedicatedIpPool": [
            "PoolName"
        ],
        "GetDedicatedIps": "",
        "GetDeliverabilityDashboardOptions": "",
        "GetDeliverabilityTestReport": [
            "ReportId"
        ],
        "GetDomainDeliverabilityCampaign": [
            "CampaignId"
        ],
        "GetDomainStatisticsReport": [
            "Domain",
            "StartDate",
            "EndDate"
        ],
        "GetEmailIdentity": [
            "EmailIdentity"
        ],
        "GetEmailIdentityPolicies": [
            "EmailIdentity"
        ],
        "GetEmailTemplate": [
            "TemplateName"
        ],
        "GetExportJob": [
            "JobId"
        ],
        "GetImportJob": [
            "JobId"
        ],
        "GetMessageInsights": [
            "MessageId"
        ],
        "GetSuppressedDestination": [
            "EmailAddress"
        ],
        "ListConfigurationSets": "",
        "ListContactLists": "",
        "ListContacts": [
            "ContactListName"
        ],
        "ListCustomVerificationEmailTemplates": "",
        "ListDedicatedIpPools": "",
        "ListDeliverabilityTestReports": "",
        "ListDomainDeliverabilityCampaigns": [
            "StartDate",
            "EndDate",
            "SubscribedDomain"
        ],
        "ListEmailIdentities": "",
        "ListEmailTemplates": "",
        "ListExportJobs": "",
        "ListImportJobs": "",
        "ListRecommendations": "",
        "ListSuppressedDestinations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "PutAccountDedicatedIpWarmupAttributes": "",
        "PutAccountDetails": [
            "MailType",
            "WebsiteURL",
            "UseCaseDescription"
        ],
        "PutAccountSendingAttributes": "",
        "PutAccountSuppressionAttributes": "",
        "PutAccountVdmAttributes": [
            "VdmAttributes"
        ],
        "PutConfigurationSetDeliveryOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetReputationOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetSendingOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetSuppressionOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetTrackingOptions": [
            "ConfigurationSetName"
        ],
        "PutConfigurationSetVdmOptions": [
            "ConfigurationSetName"
        ],
        "PutDedicatedIpInPool": [
            "Ip",
            "DestinationPoolName"
        ],
        "PutDedicatedIpPoolScalingAttributes": [
            "PoolName",
            "ScalingMode"
        ],
        "PutDedicatedIpWarmupAttributes": [
            "Ip",
            "WarmupPercentage"
        ],
        "PutDeliverabilityDashboardOption": [
            "DashboardEnabled"
        ],
        "PutEmailIdentityConfigurationSetAttributes": [
            "EmailIdentity"
        ],
        "PutEmailIdentityDkimAttributes": [
            "EmailIdentity"
        ],
        "PutEmailIdentityDkimSigningAttributes": [
            "EmailIdentity",
            "SigningAttributesOrigin"
        ],
        "PutEmailIdentityFeedbackAttributes": [
            "EmailIdentity"
        ],
        "PutEmailIdentityMailFromAttributes": [
            "EmailIdentity"
        ],
        "PutSuppressedDestination": [
            "EmailAddress",
            "Reason"
        ],
        "SendBulkEmail": [
            "DefaultContent",
            "BulkEmailEntries"
        ],
        "SendCustomVerificationEmail": [
            "EmailAddress",
            "TemplateName"
        ],
        "SendEmail": [
            "Content"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "TestRenderEmailTemplate": [
            "TemplateName",
            "TemplateData"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateConfigurationSetEventDestination": [
            "ConfigurationSetName",
            "EventDestinationName",
            "EventDestination"
        ],
        "UpdateContact": [
            "ContactListName",
            "EmailAddress"
        ],
        "UpdateContactList": [
            "ContactListName"
        ],
        "UpdateCustomVerificationEmailTemplate": [
            "TemplateName",
            "FromEmailAddress",
            "TemplateSubject",
            "TemplateContent",
            "SuccessRedirectionURL",
            "FailureRedirectionURL"
        ],
        "UpdateEmailIdentityPolicy": [
            "EmailIdentity",
            "PolicyName",
            "Policy"
        ],
        "UpdateEmailTemplate": [
            "TemplateName",
            "TemplateContent"
        ]
    },
    "shield": {
        "AssociateDRTLogBucket": [
            "LogBucket"
        ],
        "AssociateDRTRole": [
            "RoleArn"
        ],
        "AssociateHealthCheck": [
            "ProtectionId",
            "HealthCheckArn"
        ],
        "AssociateProactiveEngagementDetails": [
            "EmergencyContactList"
        ],
        "CreateProtection": [
            "Name",
            "ResourceArn"
        ],
        "CreateProtectionGroup": [
            "ProtectionGroupId",
            "Aggregation",
            "Pattern"
        ],
        "CreateSubscription": "",
        "DeleteProtection": [
            "ProtectionId"
        ],
        "DeleteProtectionGroup": [
            "ProtectionGroupId"
        ],
        "DeleteSubscription": "",
        "DescribeAttack": [
            "AttackId"
        ],
        "DescribeAttackStatistics": "",
        "DescribeDRTAccess": "",
        "DescribeEmergencyContactSettings": "",
        "DescribeProtection": "",
        "DescribeProtectionGroup": [
            "ProtectionGroupId"
        ],
        "DescribeSubscription": "",
        "DisableApplicationLayerAutomaticResponse": [
            "ResourceArn"
        ],
        "DisableProactiveEngagement": "",
        "DisassociateDRTLogBucket": [
            "LogBucket"
        ],
        "DisassociateDRTRole": "",
        "DisassociateHealthCheck": [
            "ProtectionId",
            "HealthCheckArn"
        ],
        "EnableApplicationLayerAutomaticResponse": [
            "ResourceArn",
            "Action"
        ],
        "EnableProactiveEngagement": "",
        "GetSubscriptionState": "",
        "ListAttacks": "",
        "ListProtectionGroups": "",
        "ListProtections": "",
        "ListResourcesInProtectionGroup": [
            "ProtectionGroupId"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateApplicationLayerAutomaticResponse": [
            "ResourceArn",
            "Action"
        ],
        "UpdateEmergencyContactSettings": "",
        "UpdateProtectionGroup": [
            "ProtectionGroupId",
            "Aggregation",
            "Pattern"
        ],
        "UpdateSubscription": ""
    },
    "signer": {
        "AddProfilePermission": [
            "action",
            "principal",
            "statementId",
            "profileName"
        ],
        "CancelSigningProfile": [
            "profileName"
        ],
        "DescribeSigningJob": [
            "jobId"
        ],
        "GetRevocationStatus": [
            "signatureTimestamp",
            "platformId",
            "profileVersionArn",
            "jobArn",
            "certificateHashes"
        ],
        "GetSigningPlatform": [
            "platformId"
        ],
        "GetSigningProfile": [
            "profileName"
        ],
        "ListProfilePermissions": [
            "profileName"
        ],
        "ListSigningJobs": "",
        "ListSigningPlatforms": "",
        "ListSigningProfiles": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutSigningProfile": [
            "profileName",
            "platformId"
        ],
        "RemoveProfilePermission": [
            "revisionId",
            "profileName",
            "statementId"
        ],
        "RevokeSignature": [
            "reason",
            "jobId"
        ],
        "RevokeSigningProfile": [
            "profileVersion",
            "reason",
            "effectiveTime",
            "profileName"
        ],
        "SignPayload": [
            "profileName",
            "payload",
            "payloadFormat"
        ],
        "StartSigningJob": [
            "source",
            "destination",
            "profileName",
            "clientRequestToken"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "simspaceweaver": {
        "CreateSnapshot": [
            "Destination",
            "Simulation"
        ],
        "DeleteApp": [
            "App",
            "Domain",
            "Simulation"
        ],
        "DeleteSimulation": [
            "Simulation"
        ],
        "DescribeApp": [
            "App",
            "Domain",
            "Simulation"
        ],
        "DescribeSimulation": [
            "Simulation"
        ],
        "ListApps": [
            "Simulation"
        ],
        "ListSimulations": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartApp": [
            "Domain",
            "Name",
            "Simulation"
        ],
        "StartClock": [
            "Simulation"
        ],
        "StartSimulation": [
            "Name",
            "RoleArn"
        ],
        "StopApp": [
            "App",
            "Domain",
            "Simulation"
        ],
        "StopClock": [
            "Simulation"
        ],
        "StopSimulation": [
            "Simulation"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ]
    },
    "sms": {
        "CreateApp": "",
        "CreateReplicationJob": [
            "serverId",
            "seedReplicationTime"
        ],
        "DeleteApp": "",
        "DeleteAppLaunchConfiguration": "",
        "DeleteAppReplicationConfiguration": "",
        "DeleteAppValidationConfiguration": [
            "appId"
        ],
        "DeleteReplicationJob": [
            "replicationJobId"
        ],
        "DeleteServerCatalog": "",
        "DisassociateConnector": [
            "connectorId"
        ],
        "GenerateChangeSet": "",
        "GenerateTemplate": "",
        "GetApp": "",
        "GetAppLaunchConfiguration": "",
        "GetAppReplicationConfiguration": "",
        "GetAppValidationConfiguration": [
            "appId"
        ],
        "GetAppValidationOutput": [
            "appId"
        ],
        "GetConnectors": "",
        "GetReplicationJobs": "",
        "GetReplicationRuns": [
            "replicationJobId"
        ],
        "GetServers": "",
        "ImportAppCatalog": "",
        "ImportServerCatalog": "",
        "LaunchApp": "",
        "ListApps": "",
        "NotifyAppValidationOutput": [
            "appId"
        ],
        "PutAppLaunchConfiguration": "",
        "PutAppReplicationConfiguration": "",
        "PutAppValidationConfiguration": [
            "appId"
        ],
        "StartAppReplication": "",
        "StartOnDemandAppReplication": [
            "appId"
        ],
        "StartOnDemandReplicationRun": [
            "replicationJobId"
        ],
        "StopAppReplication": "",
        "TerminateApp": "",
        "UpdateApp": "",
        "UpdateReplicationJob": [
            "replicationJobId"
        ]
    },
    "pinpoint-sms-voice": {
        "CreateConfigurationSet": "",
        "CreateConfigurationSetEventDestination": [
            "ConfigurationSetName"
        ],
        "DeleteConfigurationSet": [
            "ConfigurationSetName"
        ],
        "DeleteConfigurationSetEventDestination": [
            "EventDestinationName",
            "ConfigurationSetName"
        ],
        "GetConfigurationSetEventDestinations": [
            "ConfigurationSetName"
        ],
        "ListConfigurationSets": "",
        "SendVoiceMessage": "",
        "UpdateConfigurationSetEventDestination": [
            "EventDestinationName",
            "ConfigurationSetName"
        ]
    },
    "snow-device-management": {
        "CancelTask": [
            "taskId"
        ],
        "CreateTask": [
            "command",
            "targets"
        ],
        "DescribeDevice": [
            "managedDeviceId"
        ],
        "DescribeDeviceEc2Instances": [
            "instanceIds",
            "managedDeviceId"
        ],
        "DescribeExecution": [
            "managedDeviceId",
            "taskId"
        ],
        "DescribeTask": [
            "taskId"
        ],
        "ListDeviceResources": [
            "managedDeviceId"
        ],
        "ListDevices": "",
        "ListExecutions": [
            "taskId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTasks": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "snowball": {
        "CancelCluster": [
            "ClusterId"
        ],
        "CancelJob": [
            "JobId"
        ],
        "CreateAddress": [
            "Address"
        ],
        "CreateCluster": [
            "JobType",
            "AddressId",
            "SnowballType",
            "ShippingOption"
        ],
        "CreateJob": "",
        "CreateLongTermPricing": [
            "LongTermPricingType",
            "SnowballType"
        ],
        "CreateReturnShippingLabel": [
            "JobId"
        ],
        "DescribeAddress": [
            "AddressId"
        ],
        "DescribeAddresses": "",
        "DescribeCluster": [
            "ClusterId"
        ],
        "DescribeJob": [
            "JobId"
        ],
        "DescribeReturnShippingLabel": [
            "JobId"
        ],
        "GetJobManifest": [
            "JobId"
        ],
        "GetJobUnlockCode": [
            "JobId"
        ],
        "GetSnowballUsage": "",
        "GetSoftwareUpdates": [
            "JobId"
        ],
        "ListClusterJobs": [
            "ClusterId"
        ],
        "ListClusters": "",
        "ListCompatibleImages": "",
        "ListJobs": "",
        "ListLongTermPricing": "",
        "ListPickupLocations": "",
        "ListServiceVersions": [
            "ServiceName"
        ],
        "UpdateCluster": [
            "ClusterId"
        ],
        "UpdateJob": [
            "JobId"
        ],
        "UpdateJobShipmentState": [
            "JobId",
            "ShipmentState"
        ],
        "UpdateLongTermPricing": [
            "LongTermPricingId"
        ]
    },
    "sns": {
        "AddPermission": [
            "TopicArn",
            "Label",
            "AWSAccountId",
            "ActionName"
        ],
        "CheckIfPhoneNumberIsOptedOut": [
            "phoneNumber"
        ],
        "ConfirmSubscription": [
            "TopicArn",
            "Token"
        ],
        "CreatePlatformApplication": [
            "Name",
            "Platform",
            "Attributes"
        ],
        "CreatePlatformEndpoint": [
            "PlatformApplicationArn",
            "Token"
        ],
        "CreateSMSSandboxPhoneNumber": [
            "PhoneNumber"
        ],
        "CreateTopic": [
            "Name"
        ],
        "DeleteEndpoint": [
            "EndpointArn"
        ],
        "DeletePlatformApplication": [
            "PlatformApplicationArn"
        ],
        "DeleteSMSSandboxPhoneNumber": [
            "PhoneNumber"
        ],
        "DeleteTopic": [
            "TopicArn"
        ],
        "GetDataProtectionPolicy": [
            "ResourceArn"
        ],
        "GetEndpointAttributes": [
            "EndpointArn"
        ],
        "GetPlatformApplicationAttributes": [
            "PlatformApplicationArn"
        ],
        "GetSMSAttributes": "",
        "GetSMSSandboxAccountStatus": "",
        "GetSubscriptionAttributes": [
            "SubscriptionArn"
        ],
        "GetTopicAttributes": [
            "TopicArn"
        ],
        "ListEndpointsByPlatformApplication": [
            "PlatformApplicationArn"
        ],
        "ListOriginationNumbers": "",
        "ListPhoneNumbersOptedOut": "",
        "ListPlatformApplications": "",
        "ListSMSSandboxPhoneNumbers": "",
        "ListSubscriptions": "",
        "ListSubscriptionsByTopic": [
            "TopicArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTopics": "",
        "OptInPhoneNumber": [
            "phoneNumber"
        ],
        "Publish": [
            "Message"
        ],
        "PublishBatch": [
            "TopicArn",
            "PublishBatchRequestEntries"
        ],
        "PutDataProtectionPolicy": [
            "ResourceArn",
            "DataProtectionPolicy"
        ],
        "RemovePermission": [
            "TopicArn",
            "Label"
        ],
        "SetEndpointAttributes": [
            "EndpointArn",
            "Attributes"
        ],
        "SetPlatformApplicationAttributes": [
            "PlatformApplicationArn",
            "Attributes"
        ],
        "SetSMSAttributes": [
            "attributes"
        ],
        "SetSubscriptionAttributes": [
            "SubscriptionArn",
            "AttributeName"
        ],
        "SetTopicAttributes": [
            "TopicArn",
            "AttributeName"
        ],
        "Subscribe": [
            "TopicArn",
            "Protocol"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "Unsubscribe": [
            "SubscriptionArn"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "VerifySMSSandboxPhoneNumber": [
            "PhoneNumber",
            "OneTimePassword"
        ]
    },
    "sqs": {
        "AddPermission": [
            "QueueUrl",
            "Label",
            "AWSAccountIds",
            "Actions"
        ],
        "CancelMessageMoveTask": [
            "TaskHandle"
        ],
        "ChangeMessageVisibility": [
            "QueueUrl",
            "ReceiptHandle",
            "VisibilityTimeout"
        ],
        "ChangeMessageVisibilityBatch": [
            "QueueUrl",
            "Entries"
        ],
        "CreateQueue": [
            "QueueName"
        ],
        "DeleteMessage": [
            "QueueUrl",
            "ReceiptHandle"
        ],
        "DeleteMessageBatch": [
            "QueueUrl",
            "Entries"
        ],
        "DeleteQueue": [
            "QueueUrl"
        ],
        "GetQueueAttributes": [
            "QueueUrl"
        ],
        "GetQueueUrl": [
            "QueueName"
        ],
        "ListDeadLetterSourceQueues": [
            "QueueUrl"
        ],
        "ListMessageMoveTasks": [
            "SourceArn"
        ],
        "ListQueueTags": [
            "QueueUrl"
        ],
        "ListQueues": "",
        "PurgeQueue": [
            "QueueUrl"
        ],
        "ReceiveMessage": [
            "QueueUrl"
        ],
        "RemovePermission": [
            "QueueUrl",
            "Label"
        ],
        "SendMessage": [
            "QueueUrl",
            "MessageBody"
        ],
        "SendMessageBatch": [
            "QueueUrl",
            "Entries"
        ],
        "SetQueueAttributes": [
            "QueueUrl",
            "Attributes"
        ],
        "StartMessageMoveTask": [
            "SourceArn"
        ],
        "TagQueue": [
            "QueueUrl",
            "Tags"
        ],
        "UntagQueue": [
            "QueueUrl",
            "TagKeys"
        ]
    },
    "ssm": {
        "AddTagsToResource": [
            "ResourceType",
            "ResourceId",
            "Tags"
        ],
        "AssociateOpsItemRelatedItem": [
            "OpsItemId",
            "AssociationType",
            "ResourceType",
            "ResourceUri"
        ],
        "CancelCommand": [
            "CommandId"
        ],
        "CancelMaintenanceWindowExecution": [
            "WindowExecutionId"
        ],
        "CreateActivation": [
            "IamRole"
        ],
        "CreateAssociation": [
            "Name"
        ],
        "CreateAssociationBatch": [
            "Entries"
        ],
        "CreateDocument": [
            "Content",
            "Name"
        ],
        "CreateMaintenanceWindow": [
            "Name",
            "Schedule",
            "Duration",
            "Cutoff",
            "AllowUnassociatedTargets"
        ],
        "CreateOpsItem": [
            "Description",
            "Source",
            "Title"
        ],
        "CreateOpsMetadata": [
            "ResourceId"
        ],
        "CreatePatchBaseline": [
            "Name"
        ],
        "CreateResourceDataSync": [
            "SyncName"
        ],
        "DeleteActivation": [
            "ActivationId"
        ],
        "DeleteAssociation": "",
        "DeleteDocument": [
            "Name"
        ],
        "DeleteInventory": [
            "TypeName"
        ],
        "DeleteMaintenanceWindow": [
            "WindowId"
        ],
        "DeleteOpsItem": [
            "OpsItemId"
        ],
        "DeleteOpsMetadata": [
            "OpsMetadataArn"
        ],
        "DeleteParameter": [
            "Name"
        ],
        "DeleteParameters": [
            "Names"
        ],
        "DeletePatchBaseline": [
            "BaselineId"
        ],
        "DeleteResourceDataSync": [
            "SyncName"
        ],
        "DeleteResourcePolicy": [
            "ResourceArn",
            "PolicyId",
            "PolicyHash"
        ],
        "DeregisterManagedInstance": [
            "InstanceId"
        ],
        "DeregisterPatchBaselineForPatchGroup": [
            "BaselineId",
            "PatchGroup"
        ],
        "DeregisterTargetFromMaintenanceWindow": [
            "WindowId",
            "WindowTargetId"
        ],
        "DeregisterTaskFromMaintenanceWindow": [
            "WindowId",
            "WindowTaskId"
        ],
        "DescribeActivations": "",
        "DescribeAssociation": "",
        "DescribeAssociationExecutionTargets": [
            "AssociationId",
            "ExecutionId"
        ],
        "DescribeAssociationExecutions": [
            "AssociationId"
        ],
        "DescribeAutomationExecutions": "",
        "DescribeAutomationStepExecutions": [
            "AutomationExecutionId"
        ],
        "DescribeAvailablePatches": "",
        "DescribeDocument": [
            "Name"
        ],
        "DescribeDocumentPermission": [
            "Name",
            "PermissionType"
        ],
        "DescribeEffectiveInstanceAssociations": [
            "InstanceId"
        ],
        "DescribeEffectivePatchesForPatchBaseline": [
            "BaselineId"
        ],
        "DescribeInstanceAssociationsStatus": [
            "InstanceId"
        ],
        "DescribeInstanceInformation": "",
        "DescribeInstancePatchStates": [
            "InstanceIds"
        ],
        "DescribeInstancePatchStatesForPatchGroup": [
            "PatchGroup"
        ],
        "DescribeInstancePatches": [
            "InstanceId"
        ],
        "DescribeInventoryDeletions": "",
        "DescribeMaintenanceWindowExecutionTaskInvocations": [
            "WindowExecutionId",
            "TaskId"
        ],
        "DescribeMaintenanceWindowExecutionTasks": [
            "WindowExecutionId"
        ],
        "DescribeMaintenanceWindowExecutions": [
            "WindowId"
        ],
        "DescribeMaintenanceWindowSchedule": "",
        "DescribeMaintenanceWindowTargets": [
            "WindowId"
        ],
        "DescribeMaintenanceWindowTasks": [
            "WindowId"
        ],
        "DescribeMaintenanceWindows": "",
        "DescribeMaintenanceWindowsForTarget": [
            "Targets",
            "ResourceType"
        ],
        "DescribeOpsItems": "",
        "DescribeParameters": "",
        "DescribePatchBaselines": "",
        "DescribePatchGroupState": [
            "PatchGroup"
        ],
        "DescribePatchGroups": "",
        "DescribePatchProperties": [
            "OperatingSystem",
            "Property"
        ],
        "DescribeSessions": [
            "State"
        ],
        "DisassociateOpsItemRelatedItem": [
            "OpsItemId",
            "AssociationId"
        ],
        "GetAutomationExecution": [
            "AutomationExecutionId"
        ],
        "GetCalendarState": [
            "CalendarNames"
        ],
        "GetCommandInvocation": [
            "CommandId",
            "InstanceId"
        ],
        "GetConnectionStatus": [
            "Target"
        ],
        "GetDefaultPatchBaseline": "",
        "GetDeployablePatchSnapshotForInstance": [
            "InstanceId",
            "SnapshotId"
        ],
        "GetDocument": [
            "Name"
        ],
        "GetInventory": "",
        "GetInventorySchema": "",
        "GetMaintenanceWindow": [
            "WindowId"
        ],
        "GetMaintenanceWindowExecution": [
            "WindowExecutionId"
        ],
        "GetMaintenanceWindowExecutionTask": [
            "WindowExecutionId",
            "TaskId"
        ],
        "GetMaintenanceWindowExecutionTaskInvocation": [
            "WindowExecutionId",
            "TaskId",
            "InvocationId"
        ],
        "GetMaintenanceWindowTask": [
            "WindowId",
            "WindowTaskId"
        ],
        "GetOpsItem": [
            "OpsItemId"
        ],
        "GetOpsMetadata": [
            "OpsMetadataArn"
        ],
        "GetOpsSummary": "",
        "GetParameter": [
            "Name"
        ],
        "GetParameterHistory": [
            "Name"
        ],
        "GetParameters": [
            "Names"
        ],
        "GetParametersByPath": [
            "Path"
        ],
        "GetPatchBaseline": [
            "BaselineId"
        ],
        "GetPatchBaselineForPatchGroup": [
            "PatchGroup"
        ],
        "GetResourcePolicies": [
            "ResourceArn"
        ],
        "GetServiceSetting": [
            "SettingId"
        ],
        "LabelParameterVersion": [
            "Name",
            "Labels"
        ],
        "ListAssociationVersions": [
            "AssociationId"
        ],
        "ListAssociations": "",
        "ListCommandInvocations": "",
        "ListCommands": "",
        "ListComplianceItems": "",
        "ListComplianceSummaries": "",
        "ListDocumentMetadataHistory": [
            "Name",
            "Metadata"
        ],
        "ListDocumentVersions": [
            "Name"
        ],
        "ListDocuments": "",
        "ListInventoryEntries": [
            "InstanceId",
            "TypeName"
        ],
        "ListOpsItemEvents": "",
        "ListOpsItemRelatedItems": "",
        "ListOpsMetadata": "",
        "ListResourceComplianceSummaries": "",
        "ListResourceDataSync": "",
        "ListTagsForResource": [
            "ResourceType",
            "ResourceId"
        ],
        "ModifyDocumentPermission": [
            "Name",
            "PermissionType"
        ],
        "PutComplianceItems": [
            "ResourceId",
            "ResourceType",
            "ComplianceType",
            "ExecutionSummary",
            "Items"
        ],
        "PutInventory": [
            "InstanceId",
            "Items"
        ],
        "PutParameter": [
            "Name",
            "Value"
        ],
        "PutResourcePolicy": [
            "ResourceArn",
            "Policy"
        ],
        "RegisterDefaultPatchBaseline": [
            "BaselineId"
        ],
        "RegisterPatchBaselineForPatchGroup": [
            "BaselineId",
            "PatchGroup"
        ],
        "RegisterTargetWithMaintenanceWindow": [
            "WindowId",
            "ResourceType",
            "Targets"
        ],
        "RegisterTaskWithMaintenanceWindow": [
            "WindowId",
            "TaskArn",
            "TaskType"
        ],
        "RemoveTagsFromResource": [
            "ResourceType",
            "ResourceId",
            "TagKeys"
        ],
        "ResetServiceSetting": [
            "SettingId"
        ],
        "ResumeSession": [
            "SessionId"
        ],
        "SendAutomationSignal": [
            "AutomationExecutionId",
            "SignalType"
        ],
        "SendCommand": [
            "DocumentName"
        ],
        "StartAssociationsOnce": [
            "AssociationIds"
        ],
        "StartAutomationExecution": [
            "DocumentName"
        ],
        "StartChangeRequestExecution": [
            "DocumentName",
            "Runbooks"
        ],
        "StartSession": [
            "Target"
        ],
        "StopAutomationExecution": [
            "AutomationExecutionId"
        ],
        "TerminateSession": [
            "SessionId"
        ],
        "UnlabelParameterVersion": [
            "Name",
            "ParameterVersion",
            "Labels"
        ],
        "UpdateAssociation": [
            "AssociationId"
        ],
        "UpdateAssociationStatus": [
            "Name",
            "InstanceId",
            "AssociationStatus"
        ],
        "UpdateDocument": [
            "Content",
            "Name"
        ],
        "UpdateDocumentDefaultVersion": [
            "Name",
            "DocumentVersion"
        ],
        "UpdateDocumentMetadata": [
            "Name",
            "DocumentReviews"
        ],
        "UpdateMaintenanceWindow": [
            "WindowId"
        ],
        "UpdateMaintenanceWindowTarget": [
            "WindowId",
            "WindowTargetId"
        ],
        "UpdateMaintenanceWindowTask": [
            "WindowId",
            "WindowTaskId"
        ],
        "UpdateManagedInstanceRole": [
            "InstanceId",
            "IamRole"
        ],
        "UpdateOpsItem": [
            "OpsItemId"
        ],
        "UpdateOpsMetadata": [
            "OpsMetadataArn"
        ],
        "UpdatePatchBaseline": [
            "BaselineId"
        ],
        "UpdateResourceDataSync": [
            "SyncName",
            "SyncType",
            "SyncSource"
        ],
        "UpdateServiceSetting": [
            "SettingId",
            "SettingValue"
        ]
    },
    "ssm-contacts": {
        "AcceptPage": [
            "PageId",
            "AcceptType",
            "AcceptCode"
        ],
        "ActivateContactChannel": [
            "ContactChannelId",
            "ActivationCode"
        ],
        "CreateContact": [
            "Alias",
            "Type",
            "Plan"
        ],
        "CreateContactChannel": [
            "ContactId",
            "Name",
            "Type",
            "DeliveryAddress"
        ],
        "CreateRotation": [
            "Name",
            "ContactIds",
            "TimeZoneId",
            "Recurrence"
        ],
        "CreateRotationOverride": [
            "RotationId",
            "NewContactIds",
            "StartTime",
            "EndTime"
        ],
        "DeactivateContactChannel": [
            "ContactChannelId"
        ],
        "DeleteContact": [
            "ContactId"
        ],
        "DeleteContactChannel": [
            "ContactChannelId"
        ],
        "DeleteRotation": [
            "RotationId"
        ],
        "DeleteRotationOverride": [
            "RotationId",
            "RotationOverrideId"
        ],
        "DescribeEngagement": [
            "EngagementId"
        ],
        "DescribePage": [
            "PageId"
        ],
        "GetContact": [
            "ContactId"
        ],
        "GetContactChannel": [
            "ContactChannelId"
        ],
        "GetContactPolicy": [
            "ContactArn"
        ],
        "GetRotation": [
            "RotationId"
        ],
        "GetRotationOverride": [
            "RotationId",
            "RotationOverrideId"
        ],
        "ListContactChannels": [
            "ContactId"
        ],
        "ListContacts": "",
        "ListEngagements": "",
        "ListPageReceipts": [
            "PageId"
        ],
        "ListPageResolutions": [
            "PageId"
        ],
        "ListPagesByContact": [
            "ContactId"
        ],
        "ListPagesByEngagement": [
            "EngagementId"
        ],
        "ListPreviewRotationShifts": [
            "EndTime",
            "Members",
            "TimeZoneId",
            "Recurrence"
        ],
        "ListRotationOverrides": [
            "RotationId",
            "StartTime",
            "EndTime"
        ],
        "ListRotationShifts": [
            "RotationId",
            "EndTime"
        ],
        "ListRotations": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutContactPolicy": [
            "ContactArn",
            "Policy"
        ],
        "SendActivationCode": [
            "ContactChannelId"
        ],
        "StartEngagement": [
            "ContactId",
            "Sender",
            "Subject",
            "Content"
        ],
        "StopEngagement": [
            "EngagementId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateContact": [
            "ContactId"
        ],
        "UpdateContactChannel": [
            "ContactChannelId"
        ],
        "UpdateRotation": [
            "RotationId",
            "Recurrence"
        ]
    },
    "ssm-incidents": {
        "BatchGetIncidentFindings": [
            "findingIds",
            "incidentRecordArn"
        ],
        "CreateReplicationSet": [
            "regions"
        ],
        "CreateResponsePlan": [
            "incidentTemplate",
            "name"
        ],
        "CreateTimelineEvent": [
            "eventData",
            "eventTime",
            "eventType",
            "incidentRecordArn"
        ],
        "DeleteIncidentRecord": [
            "arn"
        ],
        "DeleteReplicationSet": [
            "arn"
        ],
        "DeleteResourcePolicy": [
            "policyId",
            "resourceArn"
        ],
        "DeleteResponsePlan": [
            "arn"
        ],
        "DeleteTimelineEvent": [
            "eventId",
            "incidentRecordArn"
        ],
        "GetIncidentRecord": [
            "arn"
        ],
        "GetReplicationSet": [
            "arn"
        ],
        "GetResourcePolicies": [
            "resourceArn"
        ],
        "GetResponsePlan": [
            "arn"
        ],
        "GetTimelineEvent": [
            "eventId",
            "incidentRecordArn"
        ],
        "ListIncidentFindings": [
            "incidentRecordArn"
        ],
        "ListIncidentRecords": "",
        "ListRelatedItems": [
            "incidentRecordArn"
        ],
        "ListReplicationSets": "",
        "ListResponsePlans": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTimelineEvents": [
            "incidentRecordArn"
        ],
        "PutResourcePolicy": [
            "policy",
            "resourceArn"
        ],
        "StartIncident": [
            "responsePlanArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDeletionProtection": [
            "arn",
            "deletionProtected"
        ],
        "UpdateIncidentRecord": [
            "arn"
        ],
        "UpdateRelatedItems": [
            "incidentRecordArn",
            "relatedItemsUpdate"
        ],
        "UpdateReplicationSet": [
            "actions",
            "arn"
        ],
        "UpdateResponsePlan": [
            "arn"
        ],
        "UpdateTimelineEvent": [
            "eventId",
            "incidentRecordArn"
        ]
    },
    "ssm-sap": {
        "DeleteResourcePermission": [
            "ResourceArn"
        ],
        "DeregisterApplication": [
            "ApplicationId"
        ],
        "GetApplication": "",
        "GetComponent": [
            "ApplicationId",
            "ComponentId"
        ],
        "GetDatabase": "",
        "GetOperation": [
            "OperationId"
        ],
        "GetResourcePermission": [
            "ResourceArn"
        ],
        "ListApplications": "",
        "ListComponents": "",
        "ListDatabases": "",
        "ListOperations": [
            "ApplicationId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutResourcePermission": [
            "ActionType",
            "SourceResourceArn",
            "ResourceArn"
        ],
        "RegisterApplication": [
            "ApplicationId",
            "ApplicationType",
            "Instances"
        ],
        "StartApplicationRefresh": [
            "ApplicationId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateApplicationSettings": [
            "ApplicationId"
        ]
    },
    "sso": {
        "GetRoleCredentials": [
            "roleName",
            "accountId",
            "accessToken"
        ],
        "ListAccountRoles": [
            "accessToken",
            "accountId"
        ],
        "ListAccounts": [
            "accessToken"
        ],
        "Logout": [
            "accessToken"
        ]
    },
    "sso-admin": {
        "AttachCustomerManagedPolicyReferenceToPermissionSet": [
            "CustomerManagedPolicyReference",
            "InstanceArn",
            "PermissionSetArn"
        ],
        "AttachManagedPolicyToPermissionSet": [
            "InstanceArn",
            "ManagedPolicyArn",
            "PermissionSetArn"
        ],
        "CreateAccountAssignment": [
            "InstanceArn",
            "PermissionSetArn",
            "PrincipalId",
            "PrincipalType",
            "TargetId",
            "TargetType"
        ],
        "CreateApplication": [
            "ApplicationProviderArn",
            "InstanceArn",
            "Name"
        ],
        "CreateApplicationAssignment": [
            "ApplicationArn",
            "PrincipalId",
            "PrincipalType"
        ],
        "CreateInstance": "",
        "CreateInstanceAccessControlAttributeConfiguration": [
            "InstanceAccessControlAttributeConfiguration",
            "InstanceArn"
        ],
        "CreatePermissionSet": [
            "InstanceArn",
            "Name"
        ],
        "CreateTrustedTokenIssuer": [
            "InstanceArn",
            "Name",
            "TrustedTokenIssuerConfiguration",
            "TrustedTokenIssuerType"
        ],
        "DeleteAccountAssignment": [
            "InstanceArn",
            "PermissionSetArn",
            "PrincipalId",
            "PrincipalType",
            "TargetId",
            "TargetType"
        ],
        "DeleteApplication": [
            "ApplicationArn"
        ],
        "DeleteApplicationAccessScope": [
            "ApplicationArn",
            "Scope"
        ],
        "DeleteApplicationAssignment": [
            "ApplicationArn",
            "PrincipalId",
            "PrincipalType"
        ],
        "DeleteApplicationAuthenticationMethod": [
            "ApplicationArn",
            "AuthenticationMethodType"
        ],
        "DeleteApplicationGrant": [
            "ApplicationArn",
            "GrantType"
        ],
        "DeleteInlinePolicyFromPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "DeleteInstance": [
            "InstanceArn"
        ],
        "DeleteInstanceAccessControlAttributeConfiguration": [
            "InstanceArn"
        ],
        "DeletePermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "DeletePermissionsBoundaryFromPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "DeleteTrustedTokenIssuer": [
            "TrustedTokenIssuerArn"
        ],
        "DescribeAccountAssignmentCreationStatus": [
            "AccountAssignmentCreationRequestId",
            "InstanceArn"
        ],
        "DescribeAccountAssignmentDeletionStatus": [
            "AccountAssignmentDeletionRequestId",
            "InstanceArn"
        ],
        "DescribeApplication": [
            "ApplicationArn"
        ],
        "DescribeApplicationAssignment": [
            "ApplicationArn",
            "PrincipalId",
            "PrincipalType"
        ],
        "DescribeApplicationProvider": [
            "ApplicationProviderArn"
        ],
        "DescribeInstance": [
            "InstanceArn"
        ],
        "DescribeInstanceAccessControlAttributeConfiguration": [
            "InstanceArn"
        ],
        "DescribePermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "DescribePermissionSetProvisioningStatus": [
            "InstanceArn",
            "ProvisionPermissionSetRequestId"
        ],
        "DescribeTrustedTokenIssuer": [
            "TrustedTokenIssuerArn"
        ],
        "DetachCustomerManagedPolicyReferenceFromPermissionSet": [
            "CustomerManagedPolicyReference",
            "InstanceArn",
            "PermissionSetArn"
        ],
        "DetachManagedPolicyFromPermissionSet": [
            "InstanceArn",
            "ManagedPolicyArn",
            "PermissionSetArn"
        ],
        "GetApplicationAccessScope": [
            "ApplicationArn",
            "Scope"
        ],
        "GetApplicationAssignmentConfiguration": [
            "ApplicationArn"
        ],
        "GetApplicationAuthenticationMethod": [
            "ApplicationArn",
            "AuthenticationMethodType"
        ],
        "GetApplicationGrant": [
            "ApplicationArn",
            "GrantType"
        ],
        "GetInlinePolicyForPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "GetPermissionsBoundaryForPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "ListAccountAssignmentCreationStatus": [
            "InstanceArn"
        ],
        "ListAccountAssignmentDeletionStatus": [
            "InstanceArn"
        ],
        "ListAccountAssignments": [
            "AccountId",
            "InstanceArn",
            "PermissionSetArn"
        ],
        "ListAccountAssignmentsForPrincipal": [
            "InstanceArn",
            "PrincipalId",
            "PrincipalType"
        ],
        "ListAccountsForProvisionedPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "ListApplicationAccessScopes": [
            "ApplicationArn"
        ],
        "ListApplicationAssignments": [
            "ApplicationArn"
        ],
        "ListApplicationAssignmentsForPrincipal": [
            "InstanceArn",
            "PrincipalId",
            "PrincipalType"
        ],
        "ListApplicationAuthenticationMethods": [
            "ApplicationArn"
        ],
        "ListApplicationGrants": [
            "ApplicationArn"
        ],
        "ListApplicationProviders": "",
        "ListApplications": [
            "InstanceArn"
        ],
        "ListCustomerManagedPolicyReferencesInPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "ListInstances": "",
        "ListManagedPoliciesInPermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "ListPermissionSetProvisioningStatus": [
            "InstanceArn"
        ],
        "ListPermissionSets": [
            "InstanceArn"
        ],
        "ListPermissionSetsProvisionedToAccount": [
            "AccountId",
            "InstanceArn"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTrustedTokenIssuers": [
            "InstanceArn"
        ],
        "ProvisionPermissionSet": [
            "InstanceArn",
            "PermissionSetArn",
            "TargetType"
        ],
        "PutApplicationAccessScope": [
            "ApplicationArn",
            "Scope"
        ],
        "PutApplicationAssignmentConfiguration": [
            "ApplicationArn",
            "AssignmentRequired"
        ],
        "PutApplicationAuthenticationMethod": [
            "ApplicationArn",
            "AuthenticationMethod",
            "AuthenticationMethodType"
        ],
        "PutApplicationGrant": [
            "ApplicationArn",
            "Grant",
            "GrantType"
        ],
        "PutInlinePolicyToPermissionSet": [
            "InlinePolicy",
            "InstanceArn",
            "PermissionSetArn"
        ],
        "PutPermissionsBoundaryToPermissionSet": [
            "InstanceArn",
            "PermissionSetArn",
            "PermissionsBoundary"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateApplication": [
            "ApplicationArn"
        ],
        "UpdateInstance": [
            "InstanceArn",
            "Name"
        ],
        "UpdateInstanceAccessControlAttributeConfiguration": [
            "InstanceAccessControlAttributeConfiguration",
            "InstanceArn"
        ],
        "UpdatePermissionSet": [
            "InstanceArn",
            "PermissionSetArn"
        ],
        "UpdateTrustedTokenIssuer": [
            "TrustedTokenIssuerArn"
        ]
    },
    "sso-oidc": {
        "CreateToken": [
            "clientId",
            "clientSecret",
            "grantType"
        ],
        "CreateTokenWithIAM": [
            "clientId",
            "grantType"
        ],
        "RegisterClient": [
            "clientName",
            "clientType"
        ],
        "StartDeviceAuthorization": [
            "clientId",
            "clientSecret",
            "startUrl"
        ]
    },
    "states": {
        "CreateActivity": [
            "name"
        ],
        "CreateStateMachine": [
            "name",
            "definition",
            "roleArn"
        ],
        "CreateStateMachineAlias": [
            "name",
            "routingConfiguration"
        ],
        "DeleteActivity": [
            "activityArn"
        ],
        "DeleteStateMachine": [
            "stateMachineArn"
        ],
        "DeleteStateMachineAlias": [
            "stateMachineAliasArn"
        ],
        "DeleteStateMachineVersion": [
            "stateMachineVersionArn"
        ],
        "DescribeActivity": [
            "activityArn"
        ],
        "DescribeExecution": [
            "executionArn"
        ],
        "DescribeMapRun": [
            "mapRunArn"
        ],
        "DescribeStateMachine": [
            "stateMachineArn"
        ],
        "DescribeStateMachineAlias": [
            "stateMachineAliasArn"
        ],
        "DescribeStateMachineForExecution": [
            "executionArn"
        ],
        "GetActivityTask": [
            "activityArn"
        ],
        "GetExecutionHistory": [
            "executionArn"
        ],
        "ListActivities": "",
        "ListExecutions": "",
        "ListMapRuns": [
            "executionArn"
        ],
        "ListStateMachineAliases": [
            "stateMachineArn"
        ],
        "ListStateMachineVersions": [
            "stateMachineArn"
        ],
        "ListStateMachines": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PublishStateMachineVersion": [
            "stateMachineArn"
        ],
        "RedriveExecution": [
            "executionArn"
        ],
        "SendTaskFailure": [
            "taskToken"
        ],
        "SendTaskHeartbeat": [
            "taskToken"
        ],
        "SendTaskSuccess": [
            "taskToken",
            "output"
        ],
        "StartExecution": [
            "stateMachineArn"
        ],
        "StartSyncExecution": [
            "stateMachineArn"
        ],
        "StopExecution": [
            "executionArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TestState": [
            "definition",
            "roleArn"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateMapRun": [
            "mapRunArn"
        ],
        "UpdateStateMachine": [
            "stateMachineArn"
        ],
        "UpdateStateMachineAlias": [
            "stateMachineAliasArn"
        ]
    },
    "storagegateway": {
        "ActivateGateway": [
            "ActivationKey",
            "GatewayName",
            "GatewayTimezone",
            "GatewayRegion"
        ],
        "AddCache": [
            "GatewayARN",
            "DiskIds"
        ],
        "AddTagsToResource": [
            "ResourceARN",
            "Tags"
        ],
        "AddUploadBuffer": [
            "GatewayARN",
            "DiskIds"
        ],
        "AddWorkingStorage": [
            "GatewayARN",
            "DiskIds"
        ],
        "AssignTapePool": [
            "TapeARN",
            "PoolId"
        ],
        "AssociateFileSystem": [
            "UserName",
            "Password",
            "ClientToken",
            "GatewayARN",
            "LocationARN"
        ],
        "AttachVolume": [
            "GatewayARN",
            "VolumeARN",
            "NetworkInterfaceId"
        ],
        "CancelArchival": [
            "GatewayARN",
            "TapeARN"
        ],
        "CancelRetrieval": [
            "GatewayARN",
            "TapeARN"
        ],
        "CreateCachediSCSIVolume": [
            "GatewayARN",
            "VolumeSizeInBytes",
            "TargetName",
            "NetworkInterfaceId",
            "ClientToken"
        ],
        "CreateNFSFileShare": [
            "ClientToken",
            "GatewayARN",
            "Role",
            "LocationARN"
        ],
        "CreateSMBFileShare": [
            "ClientToken",
            "GatewayARN",
            "Role",
            "LocationARN"
        ],
        "CreateSnapshot": [
            "VolumeARN",
            "SnapshotDescription"
        ],
        "CreateSnapshotFromVolumeRecoveryPoint": [
            "VolumeARN",
            "SnapshotDescription"
        ],
        "CreateStorediSCSIVolume": [
            "GatewayARN",
            "DiskId",
            "PreserveExistingData",
            "TargetName",
            "NetworkInterfaceId"
        ],
        "CreateTapePool": [
            "PoolName",
            "StorageClass"
        ],
        "CreateTapeWithBarcode": [
            "GatewayARN",
            "TapeSizeInBytes",
            "TapeBarcode"
        ],
        "CreateTapes": [
            "GatewayARN",
            "TapeSizeInBytes",
            "ClientToken",
            "NumTapesToCreate",
            "TapeBarcodePrefix"
        ],
        "DeleteAutomaticTapeCreationPolicy": [
            "GatewayARN"
        ],
        "DeleteBandwidthRateLimit": [
            "GatewayARN",
            "BandwidthType"
        ],
        "DeleteChapCredentials": [
            "TargetARN",
            "InitiatorName"
        ],
        "DeleteFileShare": [
            "FileShareARN"
        ],
        "DeleteGateway": [
            "GatewayARN"
        ],
        "DeleteSnapshotSchedule": [
            "VolumeARN"
        ],
        "DeleteTape": [
            "GatewayARN",
            "TapeARN"
        ],
        "DeleteTapeArchive": [
            "TapeARN"
        ],
        "DeleteTapePool": [
            "PoolARN"
        ],
        "DeleteVolume": [
            "VolumeARN"
        ],
        "DescribeAvailabilityMonitorTest": [
            "GatewayARN"
        ],
        "DescribeBandwidthRateLimit": [
            "GatewayARN"
        ],
        "DescribeBandwidthRateLimitSchedule": [
            "GatewayARN"
        ],
        "DescribeCache": [
            "GatewayARN"
        ],
        "DescribeCachediSCSIVolumes": [
            "VolumeARNs"
        ],
        "DescribeChapCredentials": [
            "TargetARN"
        ],
        "DescribeFileSystemAssociations": [
            "FileSystemAssociationARNList"
        ],
        "DescribeGatewayInformation": [
            "GatewayARN"
        ],
        "DescribeMaintenanceStartTime": [
            "GatewayARN"
        ],
        "DescribeNFSFileShares": [
            "FileShareARNList"
        ],
        "DescribeSMBFileShares": [
            "FileShareARNList"
        ],
        "DescribeSMBSettings": [
            "GatewayARN"
        ],
        "DescribeSnapshotSchedule": [
            "VolumeARN"
        ],
        "DescribeStorediSCSIVolumes": [
            "VolumeARNs"
        ],
        "DescribeTapeArchives": "",
        "DescribeTapeRecoveryPoints": [
            "GatewayARN"
        ],
        "DescribeTapes": [
            "GatewayARN"
        ],
        "DescribeUploadBuffer": [
            "GatewayARN"
        ],
        "DescribeVTLDevices": [
            "GatewayARN"
        ],
        "DescribeWorkingStorage": [
            "GatewayARN"
        ],
        "DetachVolume": [
            "VolumeARN"
        ],
        "DisableGateway": [
            "GatewayARN"
        ],
        "DisassociateFileSystem": [
            "FileSystemAssociationARN"
        ],
        "JoinDomain": [
            "GatewayARN",
            "DomainName",
            "UserName",
            "Password"
        ],
        "ListAutomaticTapeCreationPolicies": "",
        "ListFileShares": "",
        "ListFileSystemAssociations": "",
        "ListGateways": "",
        "ListLocalDisks": [
            "GatewayARN"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListTapePools": "",
        "ListTapes": "",
        "ListVolumeInitiators": [
            "VolumeARN"
        ],
        "ListVolumeRecoveryPoints": [
            "GatewayARN"
        ],
        "ListVolumes": "",
        "NotifyWhenUploaded": [
            "FileShareARN"
        ],
        "RefreshCache": [
            "FileShareARN"
        ],
        "RemoveTagsFromResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "ResetCache": [
            "GatewayARN"
        ],
        "RetrieveTapeArchive": [
            "TapeARN",
            "GatewayARN"
        ],
        "RetrieveTapeRecoveryPoint": [
            "TapeARN",
            "GatewayARN"
        ],
        "SetLocalConsolePassword": [
            "GatewayARN",
            "LocalConsolePassword"
        ],
        "SetSMBGuestPassword": [
            "GatewayARN",
            "Password"
        ],
        "ShutdownGateway": [
            "GatewayARN"
        ],
        "StartAvailabilityMonitorTest": [
            "GatewayARN"
        ],
        "StartGateway": [
            "GatewayARN"
        ],
        "UpdateAutomaticTapeCreationPolicy": [
            "AutomaticTapeCreationRules",
            "GatewayARN"
        ],
        "UpdateBandwidthRateLimit": [
            "GatewayARN"
        ],
        "UpdateBandwidthRateLimitSchedule": [
            "GatewayARN",
            "BandwidthRateLimitIntervals"
        ],
        "UpdateChapCredentials": [
            "TargetARN",
            "SecretToAuthenticateInitiator",
            "InitiatorName"
        ],
        "UpdateFileSystemAssociation": [
            "FileSystemAssociationARN"
        ],
        "UpdateGatewayInformation": [
            "GatewayARN"
        ],
        "UpdateGatewaySoftwareNow": [
            "GatewayARN"
        ],
        "UpdateMaintenanceStartTime": [
            "GatewayARN",
            "HourOfDay",
            "MinuteOfHour"
        ],
        "UpdateNFSFileShare": [
            "FileShareARN"
        ],
        "UpdateSMBFileShare": [
            "FileShareARN"
        ],
        "UpdateSMBFileShareVisibility": [
            "GatewayARN",
            "FileSharesVisible"
        ],
        "UpdateSMBLocalGroups": [
            "GatewayARN",
            "SMBLocalGroups"
        ],
        "UpdateSMBSecurityStrategy": [
            "GatewayARN",
            "SMBSecurityStrategy"
        ],
        "UpdateSnapshotSchedule": [
            "VolumeARN",
            "StartAt",
            "RecurrenceInHours"
        ],
        "UpdateVTLDeviceType": [
            "VTLDeviceARN",
            "DeviceType"
        ]
    },
    "streams-dynamodb": {
        "DescribeStream": [
            "StreamArn"
        ],
        "GetRecords": [
            "ShardIterator"
        ],
        "GetShardIterator": [
            "StreamArn",
            "ShardId",
            "ShardIteratorType"
        ],
        "ListStreams": ""
    },
    "sts": {
        "AssumeRole": [
            "RoleArn",
            "RoleSessionName"
        ],
        "AssumeRoleWithSAML": [
            "RoleArn",
            "PrincipalArn",
            "SAMLAssertion"
        ],
        "AssumeRoleWithWebIdentity": [
            "RoleArn",
            "RoleSessionName",
            "WebIdentityToken"
        ],
        "DecodeAuthorizationMessage": [
            "EncodedMessage"
        ],
        "GetAccessKeyInfo": [
            "AccessKeyId"
        ],
        "GetCallerIdentity": "",
        "GetFederationToken": [
            "Name"
        ],
        "GetSessionToken": ""
    },
    "supplychain": {
        "CreateBillOfMaterialsImportJob": [
            "instanceId",
            "s3uri"
        ],
        "GetBillOfMaterialsImportJob": [
            "instanceId",
            "jobId"
        ]
    },
    "support": {
        "AddAttachmentsToSet": [
            "attachments"
        ],
        "AddCommunicationToCase": [
            "communicationBody"
        ],
        "CreateCase": [
            "subject",
            "communicationBody"
        ],
        "DescribeAttachment": [
            "attachmentId"
        ],
        "DescribeCases": "",
        "DescribeCommunications": [
            "caseId"
        ],
        "DescribeCreateCaseOptions": [
            "issueType",
            "serviceCode",
            "language",
            "categoryCode"
        ],
        "DescribeServices": "",
        "DescribeSeverityLevels": "",
        "DescribeSupportedLanguages": [
            "issueType",
            "serviceCode",
            "categoryCode"
        ],
        "DescribeTrustedAdvisorCheckRefreshStatuses": [
            "checkIds"
        ],
        "DescribeTrustedAdvisorCheckResult": [
            "checkId"
        ],
        "DescribeTrustedAdvisorCheckSummaries": [
            "checkIds"
        ],
        "DescribeTrustedAdvisorChecks": [
            "language"
        ],
        "RefreshTrustedAdvisorCheck": [
            "checkId"
        ],
        "ResolveCase": ""
    },
    "support-app": {
        "CreateSlackChannelConfiguration": [
            "channelId",
            "channelRoleArn",
            "notifyOnCaseSeverity",
            "teamId"
        ],
        "DeleteAccountAlias": "",
        "DeleteSlackChannelConfiguration": [
            "channelId",
            "teamId"
        ],
        "DeleteSlackWorkspaceConfiguration": [
            "teamId"
        ],
        "GetAccountAlias": "",
        "ListSlackChannelConfigurations": "",
        "ListSlackWorkspaceConfigurations": "",
        "PutAccountAlias": [
            "accountAlias"
        ],
        "RegisterSlackWorkspaceForOrganization": [
            "teamId"
        ],
        "UpdateSlackChannelConfiguration": [
            "channelId",
            "teamId"
        ]
    },
    "swf": {
        "CountClosedWorkflowExecutions": [
            "domain"
        ],
        "CountOpenWorkflowExecutions": [
            "domain",
            "startTimeFilter"
        ],
        "CountPendingActivityTasks": [
            "domain",
            "taskList"
        ],
        "CountPendingDecisionTasks": [
            "domain",
            "taskList"
        ],
        "DeprecateActivityType": [
            "domain",
            "activityType"
        ],
        "DeprecateDomain": [
            "name"
        ],
        "DeprecateWorkflowType": [
            "domain",
            "workflowType"
        ],
        "DescribeActivityType": [
            "domain",
            "activityType"
        ],
        "DescribeDomain": [
            "name"
        ],
        "DescribeWorkflowExecution": [
            "domain",
            "execution"
        ],
        "DescribeWorkflowType": [
            "domain",
            "workflowType"
        ],
        "GetWorkflowExecutionHistory": [
            "domain",
            "execution"
        ],
        "ListActivityTypes": [
            "domain",
            "registrationStatus"
        ],
        "ListClosedWorkflowExecutions": [
            "domain"
        ],
        "ListDomains": [
            "registrationStatus"
        ],
        "ListOpenWorkflowExecutions": [
            "domain",
            "startTimeFilter"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListWorkflowTypes": [
            "domain",
            "registrationStatus"
        ],
        "PollForActivityTask": [
            "domain",
            "taskList"
        ],
        "PollForDecisionTask": [
            "domain",
            "taskList"
        ],
        "RecordActivityTaskHeartbeat": [
            "taskToken"
        ],
        "RegisterActivityType": [
            "domain",
            "name",
            "version"
        ],
        "RegisterDomain": [
            "name",
            "workflowExecutionRetentionPeriodInDays"
        ],
        "RegisterWorkflowType": [
            "domain",
            "name",
            "version"
        ],
        "RequestCancelWorkflowExecution": [
            "domain",
            "workflowId"
        ],
        "RespondActivityTaskCanceled": [
            "taskToken"
        ],
        "RespondActivityTaskCompleted": [
            "taskToken"
        ],
        "RespondActivityTaskFailed": [
            "taskToken"
        ],
        "RespondDecisionTaskCompleted": [
            "taskToken"
        ],
        "SignalWorkflowExecution": [
            "domain",
            "workflowId",
            "signalName"
        ],
        "StartWorkflowExecution": [
            "domain",
            "workflowId",
            "workflowType"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TerminateWorkflowExecution": [
            "domain",
            "workflowId"
        ],
        "UndeprecateActivityType": [
            "domain",
            "activityType"
        ],
        "UndeprecateDomain": [
            "name"
        ],
        "UndeprecateWorkflowType": [
            "domain",
            "workflowType"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ]
    },
    "synthetics": {
        "AssociateResource": [
            "GroupIdentifier",
            "ResourceArn"
        ],
        "CreateCanary": [
            "Name",
            "Code",
            "ArtifactS3Location",
            "ExecutionRoleArn",
            "Schedule",
            "RuntimeVersion"
        ],
        "CreateGroup": [
            "Name"
        ],
        "DeleteCanary": [
            "Name"
        ],
        "DeleteGroup": [
            "GroupIdentifier"
        ],
        "DescribeCanaries": "",
        "DescribeCanariesLastRun": "",
        "DescribeRuntimeVersions": "",
        "DisassociateResource": [
            "GroupIdentifier",
            "ResourceArn"
        ],
        "GetCanary": [
            "Name"
        ],
        "GetCanaryRuns": [
            "Name"
        ],
        "GetGroup": [
            "GroupIdentifier"
        ],
        "ListAssociatedGroups": [
            "ResourceArn"
        ],
        "ListGroupResources": [
            "GroupIdentifier"
        ],
        "ListGroups": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "StartCanary": [
            "Name"
        ],
        "StopCanary": [
            "Name"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateCanary": [
            "Name"
        ]
    },
    "textract": {
        "AnalyzeDocument": [
            "Document",
            "FeatureTypes"
        ],
        "AnalyzeExpense": [
            "Document"
        ],
        "AnalyzeID": [
            "DocumentPages"
        ],
        "CreateAdapter": [
            "AdapterName",
            "FeatureTypes"
        ],
        "CreateAdapterVersion": [
            "AdapterId",
            "DatasetConfig",
            "OutputConfig"
        ],
        "DeleteAdapter": [
            "AdapterId"
        ],
        "DeleteAdapterVersion": [
            "AdapterId",
            "AdapterVersion"
        ],
        "DetectDocumentText": [
            "Document"
        ],
        "GetAdapter": [
            "AdapterId"
        ],
        "GetAdapterVersion": [
            "AdapterId",
            "AdapterVersion"
        ],
        "GetDocumentAnalysis": [
            "JobId"
        ],
        "GetDocumentTextDetection": [
            "JobId"
        ],
        "GetExpenseAnalysis": [
            "JobId"
        ],
        "GetLendingAnalysis": [
            "JobId"
        ],
        "GetLendingAnalysisSummary": [
            "JobId"
        ],
        "ListAdapterVersions": "",
        "ListAdapters": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "StartDocumentAnalysis": [
            "DocumentLocation",
            "FeatureTypes"
        ],
        "StartDocumentTextDetection": [
            "DocumentLocation"
        ],
        "StartExpenseAnalysis": [
            "DocumentLocation"
        ],
        "StartLendingAnalysis": [
            "DocumentLocation"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAdapter": [
            "AdapterId"
        ]
    },
    "timestream-influxdb": {
        "CreateDbInstance": [
            "name",
            "password",
            "dbInstanceType",
            "vpcSubnetIds",
            "vpcSecurityGroupIds",
            "allocatedStorage"
        ],
        "CreateDbParameterGroup": [
            "name"
        ],
        "DeleteDbInstance": [
            "identifier"
        ],
        "GetDbInstance": [
            "identifier"
        ],
        "GetDbParameterGroup": [
            "identifier"
        ],
        "ListDbInstances": "",
        "ListDbParameterGroups": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDbInstance": [
            "identifier"
        ]
    },
    "timestream-query": {
        "CancelQuery": [
            "QueryId"
        ],
        "CreateScheduledQuery": [
            "Name",
            "QueryString",
            "ScheduleConfiguration",
            "NotificationConfiguration",
            "ScheduledQueryExecutionRoleArn",
            "ErrorReportConfiguration"
        ],
        "DeleteScheduledQuery": [
            "ScheduledQueryArn"
        ],
        "DescribeEndpoints": "",
        "DescribeScheduledQuery": [
            "ScheduledQueryArn"
        ],
        "ExecuteScheduledQuery": [
            "ScheduledQueryArn",
            "InvocationTime"
        ],
        "ListScheduledQueries": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PrepareQuery": [
            "QueryString"
        ],
        "Query": [
            "QueryString"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateScheduledQuery": [
            "ScheduledQueryArn",
            "State"
        ]
    },
    "timestream-write": {
        "CreateBatchLoadTask": [
            "DataSourceConfiguration",
            "ReportConfiguration",
            "TargetDatabaseName",
            "TargetTableName"
        ],
        "CreateDatabase": [
            "DatabaseName"
        ],
        "CreateTable": [
            "DatabaseName",
            "TableName"
        ],
        "DeleteDatabase": [
            "DatabaseName"
        ],
        "DeleteTable": [
            "DatabaseName",
            "TableName"
        ],
        "DescribeBatchLoadTask": [
            "TaskId"
        ],
        "DescribeDatabase": [
            "DatabaseName"
        ],
        "DescribeEndpoints": "",
        "DescribeTable": [
            "DatabaseName",
            "TableName"
        ],
        "ListBatchLoadTasks": "",
        "ListDatabases": "",
        "ListTables": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ResumeBatchLoadTask": [
            "TaskId"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateDatabase": [
            "DatabaseName",
            "KmsKeyId"
        ],
        "UpdateTable": [
            "DatabaseName",
            "TableName"
        ],
        "WriteRecords": [
            "DatabaseName",
            "TableName",
            "Records"
        ]
    },
    "tnb": {
        "CancelSolNetworkOperation": [
            "nsLcmOpOccId"
        ],
        "CreateSolFunctionPackage": "",
        "CreateSolNetworkInstance": [
            "nsName",
            "nsdInfoId"
        ],
        "CreateSolNetworkPackage": "",
        "DeleteSolFunctionPackage": [
            "vnfPkgId"
        ],
        "DeleteSolNetworkInstance": [
            "nsInstanceId"
        ],
        "DeleteSolNetworkPackage": [
            "nsdInfoId"
        ],
        "GetSolFunctionInstance": [
            "vnfInstanceId"
        ],
        "GetSolFunctionPackage": [
            "vnfPkgId"
        ],
        "GetSolFunctionPackageContent": [
            "accept",
            "vnfPkgId"
        ],
        "GetSolFunctionPackageDescriptor": [
            "accept",
            "vnfPkgId"
        ],
        "GetSolNetworkInstance": [
            "nsInstanceId"
        ],
        "GetSolNetworkOperation": [
            "nsLcmOpOccId"
        ],
        "GetSolNetworkPackage": [
            "nsdInfoId"
        ],
        "GetSolNetworkPackageContent": [
            "accept",
            "nsdInfoId"
        ],
        "GetSolNetworkPackageDescriptor": [
            "nsdInfoId"
        ],
        "InstantiateSolNetworkInstance": [
            "nsInstanceId"
        ],
        "ListSolFunctionInstances": "",
        "ListSolFunctionPackages": "",
        "ListSolNetworkInstances": "",
        "ListSolNetworkOperations": "",
        "ListSolNetworkPackages": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "PutSolFunctionPackageContent": [
            "file",
            "vnfPkgId"
        ],
        "PutSolNetworkPackageContent": [
            "file",
            "nsdInfoId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "TerminateSolNetworkInstance": [
            "nsInstanceId"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateSolFunctionPackage": [
            "operationalState",
            "vnfPkgId"
        ],
        "UpdateSolNetworkInstance": [
            "nsInstanceId",
            "updateType"
        ],
        "UpdateSolNetworkPackage": [
            "nsdInfoId",
            "nsdOperationalState"
        ],
        "ValidateSolFunctionPackageContent": [
            "file",
            "vnfPkgId"
        ],
        "ValidateSolNetworkPackageContent": [
            "file",
            "nsdInfoId"
        ]
    },
    "transcribe": {
        "CreateCallAnalyticsCategory": [
            "CategoryName",
            "Rules"
        ],
        "CreateLanguageModel": [
            "LanguageCode",
            "BaseModelName",
            "ModelName",
            "InputDataConfig"
        ],
        "CreateMedicalVocabulary": [
            "VocabularyName",
            "LanguageCode",
            "VocabularyFileUri"
        ],
        "CreateVocabulary": [
            "VocabularyName",
            "LanguageCode"
        ],
        "CreateVocabularyFilter": [
            "VocabularyFilterName",
            "LanguageCode"
        ],
        "DeleteCallAnalyticsCategory": [
            "CategoryName"
        ],
        "DeleteCallAnalyticsJob": [
            "CallAnalyticsJobName"
        ],
        "DeleteLanguageModel": [
            "ModelName"
        ],
        "DeleteMedicalScribeJob": [
            "MedicalScribeJobName"
        ],
        "DeleteMedicalTranscriptionJob": [
            "MedicalTranscriptionJobName"
        ],
        "DeleteMedicalVocabulary": [
            "VocabularyName"
        ],
        "DeleteTranscriptionJob": [
            "TranscriptionJobName"
        ],
        "DeleteVocabulary": [
            "VocabularyName"
        ],
        "DeleteVocabularyFilter": [
            "VocabularyFilterName"
        ],
        "DescribeLanguageModel": [
            "ModelName"
        ],
        "GetCallAnalyticsCategory": [
            "CategoryName"
        ],
        "GetCallAnalyticsJob": [
            "CallAnalyticsJobName"
        ],
        "GetMedicalScribeJob": [
            "MedicalScribeJobName"
        ],
        "GetMedicalTranscriptionJob": [
            "MedicalTranscriptionJobName"
        ],
        "GetMedicalVocabulary": [
            "VocabularyName"
        ],
        "GetTranscriptionJob": [
            "TranscriptionJobName"
        ],
        "GetVocabulary": [
            "VocabularyName"
        ],
        "GetVocabularyFilter": [
            "VocabularyFilterName"
        ],
        "ListCallAnalyticsCategories": "",
        "ListCallAnalyticsJobs": "",
        "ListLanguageModels": "",
        "ListMedicalScribeJobs": "",
        "ListMedicalTranscriptionJobs": "",
        "ListMedicalVocabularies": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTranscriptionJobs": "",
        "ListVocabularies": "",
        "ListVocabularyFilters": "",
        "StartCallAnalyticsJob": [
            "CallAnalyticsJobName",
            "Media"
        ],
        "StartMedicalScribeJob": [
            "MedicalScribeJobName",
            "Media",
            "OutputBucketName",
            "DataAccessRoleArn",
            "Settings"
        ],
        "StartMedicalTranscriptionJob": [
            "MedicalTranscriptionJobName",
            "LanguageCode",
            "Media",
            "OutputBucketName",
            "Specialty",
            "Type"
        ],
        "StartTranscriptionJob": [
            "TranscriptionJobName",
            "Media"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateCallAnalyticsCategory": [
            "CategoryName",
            "Rules"
        ],
        "UpdateMedicalVocabulary": [
            "VocabularyName",
            "LanguageCode",
            "VocabularyFileUri"
        ],
        "UpdateVocabulary": [
            "VocabularyName",
            "LanguageCode"
        ],
        "UpdateVocabularyFilter": [
            "VocabularyFilterName"
        ]
    },
    "transfer": {
        "CreateAccess": [
            "Role",
            "ServerId",
            "ExternalId"
        ],
        "CreateAgreement": [
            "ServerId",
            "LocalProfileId",
            "PartnerProfileId",
            "BaseDirectory",
            "AccessRole"
        ],
        "CreateConnector": [
            "Url",
            "AccessRole"
        ],
        "CreateProfile": [
            "As2Id",
            "ProfileType"
        ],
        "CreateServer": "",
        "CreateUser": [
            "Role",
            "ServerId",
            "UserName"
        ],
        "CreateWorkflow": [
            "Steps"
        ],
        "DeleteAccess": [
            "ServerId",
            "ExternalId"
        ],
        "DeleteAgreement": [
            "AgreementId",
            "ServerId"
        ],
        "DeleteCertificate": [
            "CertificateId"
        ],
        "DeleteConnector": [
            "ConnectorId"
        ],
        "DeleteHostKey": [
            "ServerId",
            "HostKeyId"
        ],
        "DeleteProfile": [
            "ProfileId"
        ],
        "DeleteServer": [
            "ServerId"
        ],
        "DeleteSshPublicKey": [
            "ServerId",
            "SshPublicKeyId",
            "UserName"
        ],
        "DeleteUser": [
            "ServerId",
            "UserName"
        ],
        "DeleteWorkflow": [
            "WorkflowId"
        ],
        "DescribeAccess": [
            "ServerId",
            "ExternalId"
        ],
        "DescribeAgreement": [
            "AgreementId",
            "ServerId"
        ],
        "DescribeCertificate": [
            "CertificateId"
        ],
        "DescribeConnector": [
            "ConnectorId"
        ],
        "DescribeExecution": [
            "ExecutionId",
            "WorkflowId"
        ],
        "DescribeHostKey": [
            "ServerId",
            "HostKeyId"
        ],
        "DescribeProfile": [
            "ProfileId"
        ],
        "DescribeSecurityPolicy": [
            "SecurityPolicyName"
        ],
        "DescribeServer": [
            "ServerId"
        ],
        "DescribeUser": [
            "ServerId",
            "UserName"
        ],
        "DescribeWorkflow": [
            "WorkflowId"
        ],
        "ImportCertificate": [
            "Usage",
            "Certificate"
        ],
        "ImportHostKey": [
            "ServerId",
            "HostKeyBody"
        ],
        "ImportSshPublicKey": [
            "ServerId",
            "SshPublicKeyBody",
            "UserName"
        ],
        "ListAccesses": [
            "ServerId"
        ],
        "ListAgreements": [
            "ServerId"
        ],
        "ListCertificates": "",
        "ListConnectors": "",
        "ListExecutions": [
            "WorkflowId"
        ],
        "ListHostKeys": [
            "ServerId"
        ],
        "ListProfiles": "",
        "ListSecurityPolicies": "",
        "ListServers": "",
        "ListTagsForResource": [
            "Arn"
        ],
        "ListUsers": [
            "ServerId"
        ],
        "ListWorkflows": "",
        "SendWorkflowStepState": [
            "WorkflowId",
            "ExecutionId",
            "Token",
            "Status"
        ],
        "StartFileTransfer": [
            "ConnectorId"
        ],
        "StartServer": [
            "ServerId"
        ],
        "StopServer": [
            "ServerId"
        ],
        "TagResource": [
            "Arn",
            "Tags"
        ],
        "TestConnection": [
            "ConnectorId"
        ],
        "TestIdentityProvider": [
            "ServerId",
            "UserName"
        ],
        "UntagResource": [
            "Arn",
            "TagKeys"
        ],
        "UpdateAccess": [
            "ServerId",
            "ExternalId"
        ],
        "UpdateAgreement": [
            "AgreementId",
            "ServerId"
        ],
        "UpdateCertificate": [
            "CertificateId"
        ],
        "UpdateConnector": [
            "ConnectorId"
        ],
        "UpdateHostKey": [
            "ServerId",
            "HostKeyId",
            "Description"
        ],
        "UpdateProfile": [
            "ProfileId"
        ],
        "UpdateServer": [
            "ServerId"
        ],
        "UpdateUser": [
            "ServerId",
            "UserName"
        ]
    },
    "translate": {
        "CreateParallelData": [
            "Name",
            "ParallelDataConfig",
            "ClientToken"
        ],
        "DeleteParallelData": [
            "Name"
        ],
        "DeleteTerminology": [
            "Name"
        ],
        "DescribeTextTranslationJob": [
            "JobId"
        ],
        "GetParallelData": [
            "Name"
        ],
        "GetTerminology": [
            "Name"
        ],
        "ImportTerminology": [
            "Name",
            "MergeStrategy",
            "TerminologyData"
        ],
        "ListLanguages": "",
        "ListParallelData": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListTerminologies": "",
        "ListTextTranslationJobs": "",
        "StartTextTranslationJob": [
            "InputDataConfig",
            "OutputDataConfig",
            "DataAccessRoleArn",
            "SourceLanguageCode",
            "TargetLanguageCodes",
            "ClientToken"
        ],
        "StopTextTranslationJob": [
            "JobId"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "TranslateDocument": [
            "Document",
            "SourceLanguageCode",
            "TargetLanguageCode"
        ],
        "TranslateText": [
            "Text",
            "SourceLanguageCode",
            "TargetLanguageCode"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateParallelData": [
            "Name",
            "ParallelDataConfig",
            "ClientToken"
        ]
    },
    "trustedadvisor": {
        "GetOrganizationRecommendation": [
            "organizationRecommendationIdentifier"
        ],
        "GetRecommendation": [
            "recommendationIdentifier"
        ],
        "ListChecks": "",
        "ListOrganizationRecommendationAccounts": [
            "organizationRecommendationIdentifier"
        ],
        "ListOrganizationRecommendationResources": [
            "organizationRecommendationIdentifier"
        ],
        "ListOrganizationRecommendations": "",
        "ListRecommendationResources": [
            "recommendationIdentifier"
        ],
        "ListRecommendations": "",
        "UpdateOrganizationRecommendationLifecycle": [
            "lifecycleStage",
            "organizationRecommendationIdentifier"
        ],
        "UpdateRecommendationLifecycle": [
            "lifecycleStage",
            "recommendationIdentifier"
        ]
    },
    "verifiedpermissions": {
        "BatchIsAuthorized": [
            "policyStoreId",
            "requests"
        ],
        "CreateIdentitySource": [
            "policyStoreId",
            "configuration"
        ],
        "CreatePolicy": [
            "policyStoreId",
            "definition"
        ],
        "CreatePolicyStore": [
            "validationSettings"
        ],
        "CreatePolicyTemplate": [
            "policyStoreId",
            "statement"
        ],
        "DeleteIdentitySource": [
            "policyStoreId",
            "identitySourceId"
        ],
        "DeletePolicy": [
            "policyStoreId",
            "policyId"
        ],
        "DeletePolicyStore": [
            "policyStoreId"
        ],
        "DeletePolicyTemplate": [
            "policyStoreId",
            "policyTemplateId"
        ],
        "GetIdentitySource": [
            "policyStoreId",
            "identitySourceId"
        ],
        "GetPolicy": [
            "policyStoreId",
            "policyId"
        ],
        "GetPolicyStore": [
            "policyStoreId"
        ],
        "GetPolicyTemplate": [
            "policyStoreId",
            "policyTemplateId"
        ],
        "GetSchema": [
            "policyStoreId"
        ],
        "IsAuthorized": [
            "policyStoreId"
        ],
        "IsAuthorizedWithToken": [
            "policyStoreId"
        ],
        "ListIdentitySources": [
            "policyStoreId"
        ],
        "ListPolicies": [
            "policyStoreId"
        ],
        "ListPolicyStores": "",
        "ListPolicyTemplates": [
            "policyStoreId"
        ],
        "PutSchema": [
            "policyStoreId",
            "definition"
        ],
        "UpdateIdentitySource": [
            "policyStoreId",
            "identitySourceId",
            "updateConfiguration"
        ],
        "UpdatePolicy": [
            "policyStoreId",
            "policyId",
            "definition"
        ],
        "UpdatePolicyStore": [
            "policyStoreId",
            "validationSettings"
        ],
        "UpdatePolicyTemplate": [
            "policyStoreId",
            "policyTemplateId",
            "statement"
        ]
    },
    "voice-id": {
        "AssociateFraudster": [
            "DomainId",
            "FraudsterId",
            "WatchlistId"
        ],
        "CreateDomain": [
            "Name",
            "ServerSideEncryptionConfiguration"
        ],
        "CreateWatchlist": [
            "DomainId",
            "Name"
        ],
        "DeleteDomain": [
            "DomainId"
        ],
        "DeleteFraudster": [
            "DomainId",
            "FraudsterId"
        ],
        "DeleteSpeaker": [
            "DomainId",
            "SpeakerId"
        ],
        "DeleteWatchlist": [
            "DomainId",
            "WatchlistId"
        ],
        "DescribeDomain": [
            "DomainId"
        ],
        "DescribeFraudster": [
            "DomainId",
            "FraudsterId"
        ],
        "DescribeFraudsterRegistrationJob": [
            "DomainId",
            "JobId"
        ],
        "DescribeSpeaker": [
            "DomainId",
            "SpeakerId"
        ],
        "DescribeSpeakerEnrollmentJob": [
            "DomainId",
            "JobId"
        ],
        "DescribeWatchlist": [
            "DomainId",
            "WatchlistId"
        ],
        "DisassociateFraudster": [
            "DomainId",
            "FraudsterId",
            "WatchlistId"
        ],
        "EvaluateSession": [
            "DomainId",
            "SessionNameOrId"
        ],
        "ListDomains": "",
        "ListFraudsterRegistrationJobs": [
            "DomainId"
        ],
        "ListFraudsters": [
            "DomainId"
        ],
        "ListSpeakerEnrollmentJobs": [
            "DomainId"
        ],
        "ListSpeakers": [
            "DomainId"
        ],
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListWatchlists": [
            "DomainId"
        ],
        "OptOutSpeaker": [
            "DomainId",
            "SpeakerId"
        ],
        "StartFraudsterRegistrationJob": [
            "DataAccessRoleArn",
            "DomainId",
            "InputDataConfig",
            "OutputDataConfig"
        ],
        "StartSpeakerEnrollmentJob": [
            "DataAccessRoleArn",
            "DomainId",
            "InputDataConfig",
            "OutputDataConfig"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateDomain": [
            "DomainId",
            "Name",
            "ServerSideEncryptionConfiguration"
        ],
        "UpdateWatchlist": [
            "DomainId",
            "WatchlistId"
        ]
    },
    "vpc-lattice": {
        "BatchUpdateRule": [
            "listenerIdentifier",
            "rules",
            "serviceIdentifier"
        ],
        "CreateAccessLogSubscription": [
            "destinationArn",
            "resourceIdentifier"
        ],
        "CreateListener": [
            "defaultAction",
            "name",
            "protocol",
            "serviceIdentifier"
        ],
        "CreateRule": [
            "action",
            "listenerIdentifier",
            "match",
            "name",
            "priority",
            "serviceIdentifier"
        ],
        "CreateService": [
            "name"
        ],
        "CreateServiceNetwork": [
            "name"
        ],
        "CreateServiceNetworkServiceAssociation": [
            "serviceIdentifier",
            "serviceNetworkIdentifier"
        ],
        "CreateServiceNetworkVpcAssociation": [
            "serviceNetworkIdentifier",
            "vpcIdentifier"
        ],
        "CreateTargetGroup": [
            "name",
            "type"
        ],
        "DeleteAccessLogSubscription": [
            "accessLogSubscriptionIdentifier"
        ],
        "DeleteAuthPolicy": [
            "resourceIdentifier"
        ],
        "DeleteListener": [
            "listenerIdentifier",
            "serviceIdentifier"
        ],
        "DeleteResourcePolicy": [
            "resourceArn"
        ],
        "DeleteRule": [
            "listenerIdentifier",
            "ruleIdentifier",
            "serviceIdentifier"
        ],
        "DeleteService": [
            "serviceIdentifier"
        ],
        "DeleteServiceNetwork": [
            "serviceNetworkIdentifier"
        ],
        "DeleteServiceNetworkServiceAssociation": [
            "serviceNetworkServiceAssociationIdentifier"
        ],
        "DeleteServiceNetworkVpcAssociation": [
            "serviceNetworkVpcAssociationIdentifier"
        ],
        "DeleteTargetGroup": [
            "targetGroupIdentifier"
        ],
        "DeregisterTargets": [
            "targetGroupIdentifier",
            "targets"
        ],
        "GetAccessLogSubscription": [
            "accessLogSubscriptionIdentifier"
        ],
        "GetAuthPolicy": [
            "resourceIdentifier"
        ],
        "GetListener": [
            "listenerIdentifier",
            "serviceIdentifier"
        ],
        "GetResourcePolicy": [
            "resourceArn"
        ],
        "GetRule": [
            "listenerIdentifier",
            "ruleIdentifier",
            "serviceIdentifier"
        ],
        "GetService": [
            "serviceIdentifier"
        ],
        "GetServiceNetwork": [
            "serviceNetworkIdentifier"
        ],
        "GetServiceNetworkServiceAssociation": [
            "serviceNetworkServiceAssociationIdentifier"
        ],
        "GetServiceNetworkVpcAssociation": [
            "serviceNetworkVpcAssociationIdentifier"
        ],
        "GetTargetGroup": [
            "targetGroupIdentifier"
        ],
        "ListAccessLogSubscriptions": [
            "resourceIdentifier"
        ],
        "ListListeners": [
            "serviceIdentifier"
        ],
        "ListRules": [
            "listenerIdentifier",
            "serviceIdentifier"
        ],
        "ListServiceNetworkServiceAssociations": "",
        "ListServiceNetworkVpcAssociations": "",
        "ListServiceNetworks": "",
        "ListServices": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTargetGroups": "",
        "ListTargets": [
            "targetGroupIdentifier"
        ],
        "PutAuthPolicy": [
            "policy",
            "resourceIdentifier"
        ],
        "PutResourcePolicy": [
            "policy",
            "resourceArn"
        ],
        "RegisterTargets": [
            "targetGroupIdentifier",
            "targets"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateAccessLogSubscription": [
            "accessLogSubscriptionIdentifier",
            "destinationArn"
        ],
        "UpdateListener": [
            "defaultAction",
            "listenerIdentifier",
            "serviceIdentifier"
        ],
        "UpdateRule": [
            "listenerIdentifier",
            "ruleIdentifier",
            "serviceIdentifier"
        ],
        "UpdateService": [
            "serviceIdentifier"
        ],
        "UpdateServiceNetwork": [
            "authType",
            "serviceNetworkIdentifier"
        ],
        "UpdateServiceNetworkVpcAssociation": [
            "securityGroupIds",
            "serviceNetworkVpcAssociationIdentifier"
        ],
        "UpdateTargetGroup": [
            "healthCheck",
            "targetGroupIdentifier"
        ]
    },
    "waf": {
        "CreateByteMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateGeoMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateIPSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRateBasedRule": [
            "Name",
            "MetricName",
            "RateKey",
            "RateLimit",
            "ChangeToken"
        ],
        "CreateRegexMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRegexPatternSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRule": [
            "Name",
            "MetricName",
            "ChangeToken"
        ],
        "CreateRuleGroup": [
            "Name",
            "MetricName",
            "ChangeToken"
        ],
        "CreateSizeConstraintSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateSqlInjectionMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateWebACL": [
            "Name",
            "MetricName",
            "DefaultAction",
            "ChangeToken"
        ],
        "CreateWebACLMigrationStack": [
            "WebACLId",
            "S3BucketName",
            "IgnoreUnsupportedType"
        ],
        "CreateXssMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "DeleteByteMatchSet": [
            "ByteMatchSetId",
            "ChangeToken"
        ],
        "DeleteGeoMatchSet": [
            "GeoMatchSetId",
            "ChangeToken"
        ],
        "DeleteIPSet": [
            "IPSetId",
            "ChangeToken"
        ],
        "DeleteLoggingConfiguration": [
            "ResourceArn"
        ],
        "DeletePermissionPolicy": [
            "ResourceArn"
        ],
        "DeleteRateBasedRule": [
            "RuleId",
            "ChangeToken"
        ],
        "DeleteRegexMatchSet": [
            "RegexMatchSetId",
            "ChangeToken"
        ],
        "DeleteRegexPatternSet": [
            "RegexPatternSetId",
            "ChangeToken"
        ],
        "DeleteRule": [
            "RuleId",
            "ChangeToken"
        ],
        "DeleteRuleGroup": [
            "RuleGroupId",
            "ChangeToken"
        ],
        "DeleteSizeConstraintSet": [
            "SizeConstraintSetId",
            "ChangeToken"
        ],
        "DeleteSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId",
            "ChangeToken"
        ],
        "DeleteWebACL": [
            "WebACLId",
            "ChangeToken"
        ],
        "DeleteXssMatchSet": [
            "XssMatchSetId",
            "ChangeToken"
        ],
        "GetByteMatchSet": [
            "ByteMatchSetId"
        ],
        "GetChangeToken": "",
        "GetChangeTokenStatus": [
            "ChangeToken"
        ],
        "GetGeoMatchSet": [
            "GeoMatchSetId"
        ],
        "GetIPSet": [
            "IPSetId"
        ],
        "GetLoggingConfiguration": [
            "ResourceArn"
        ],
        "GetPermissionPolicy": [
            "ResourceArn"
        ],
        "GetRateBasedRule": [
            "RuleId"
        ],
        "GetRateBasedRuleManagedKeys": [
            "RuleId"
        ],
        "GetRegexMatchSet": [
            "RegexMatchSetId"
        ],
        "GetRegexPatternSet": [
            "RegexPatternSetId"
        ],
        "GetRule": [
            "RuleId"
        ],
        "GetRuleGroup": [
            "RuleGroupId"
        ],
        "GetSampledRequests": [
            "WebAclId",
            "RuleId",
            "TimeWindow",
            "MaxItems"
        ],
        "GetSizeConstraintSet": [
            "SizeConstraintSetId"
        ],
        "GetSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId"
        ],
        "GetWebACL": [
            "WebACLId"
        ],
        "GetXssMatchSet": [
            "XssMatchSetId"
        ],
        "ListActivatedRulesInRuleGroup": "",
        "ListByteMatchSets": "",
        "ListGeoMatchSets": "",
        "ListIPSets": "",
        "ListLoggingConfigurations": "",
        "ListRateBasedRules": "",
        "ListRegexMatchSets": "",
        "ListRegexPatternSets": "",
        "ListRuleGroups": "",
        "ListRules": "",
        "ListSizeConstraintSets": "",
        "ListSqlInjectionMatchSets": "",
        "ListSubscribedRuleGroups": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListWebACLs": "",
        "ListXssMatchSets": "",
        "PutLoggingConfiguration": [
            "LoggingConfiguration"
        ],
        "PutPermissionPolicy": [
            "ResourceArn",
            "Policy"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateByteMatchSet": [
            "ByteMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateGeoMatchSet": [
            "GeoMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateIPSet": [
            "IPSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateRateBasedRule": [
            "RuleId",
            "ChangeToken",
            "Updates",
            "RateLimit"
        ],
        "UpdateRegexMatchSet": [
            "RegexMatchSetId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateRegexPatternSet": [
            "RegexPatternSetId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateRule": [
            "RuleId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateRuleGroup": [
            "RuleGroupId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateSizeConstraintSet": [
            "SizeConstraintSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateWebACL": [
            "WebACLId",
            "ChangeToken"
        ],
        "UpdateXssMatchSet": [
            "XssMatchSetId",
            "ChangeToken",
            "Updates"
        ]
    },
    "waf-regional": {
        "AssociateWebACL": [
            "WebACLId",
            "ResourceArn"
        ],
        "CreateByteMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateGeoMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateIPSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRateBasedRule": [
            "Name",
            "MetricName",
            "RateKey",
            "RateLimit",
            "ChangeToken"
        ],
        "CreateRegexMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRegexPatternSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateRule": [
            "Name",
            "MetricName",
            "ChangeToken"
        ],
        "CreateRuleGroup": [
            "Name",
            "MetricName",
            "ChangeToken"
        ],
        "CreateSizeConstraintSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateSqlInjectionMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "CreateWebACL": [
            "Name",
            "MetricName",
            "DefaultAction",
            "ChangeToken"
        ],
        "CreateWebACLMigrationStack": [
            "WebACLId",
            "S3BucketName",
            "IgnoreUnsupportedType"
        ],
        "CreateXssMatchSet": [
            "Name",
            "ChangeToken"
        ],
        "DeleteByteMatchSet": [
            "ByteMatchSetId",
            "ChangeToken"
        ],
        "DeleteGeoMatchSet": [
            "GeoMatchSetId",
            "ChangeToken"
        ],
        "DeleteIPSet": [
            "IPSetId",
            "ChangeToken"
        ],
        "DeleteLoggingConfiguration": [
            "ResourceArn"
        ],
        "DeletePermissionPolicy": [
            "ResourceArn"
        ],
        "DeleteRateBasedRule": [
            "RuleId",
            "ChangeToken"
        ],
        "DeleteRegexMatchSet": [
            "RegexMatchSetId",
            "ChangeToken"
        ],
        "DeleteRegexPatternSet": [
            "RegexPatternSetId",
            "ChangeToken"
        ],
        "DeleteRule": [
            "RuleId",
            "ChangeToken"
        ],
        "DeleteRuleGroup": [
            "RuleGroupId",
            "ChangeToken"
        ],
        "DeleteSizeConstraintSet": [
            "SizeConstraintSetId",
            "ChangeToken"
        ],
        "DeleteSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId",
            "ChangeToken"
        ],
        "DeleteWebACL": [
            "WebACLId",
            "ChangeToken"
        ],
        "DeleteXssMatchSet": [
            "XssMatchSetId",
            "ChangeToken"
        ],
        "DisassociateWebACL": [
            "ResourceArn"
        ],
        "GetByteMatchSet": [
            "ByteMatchSetId"
        ],
        "GetChangeToken": "",
        "GetChangeTokenStatus": [
            "ChangeToken"
        ],
        "GetGeoMatchSet": [
            "GeoMatchSetId"
        ],
        "GetIPSet": [
            "IPSetId"
        ],
        "GetLoggingConfiguration": [
            "ResourceArn"
        ],
        "GetPermissionPolicy": [
            "ResourceArn"
        ],
        "GetRateBasedRule": [
            "RuleId"
        ],
        "GetRateBasedRuleManagedKeys": [
            "RuleId"
        ],
        "GetRegexMatchSet": [
            "RegexMatchSetId"
        ],
        "GetRegexPatternSet": [
            "RegexPatternSetId"
        ],
        "GetRule": [
            "RuleId"
        ],
        "GetRuleGroup": [
            "RuleGroupId"
        ],
        "GetSampledRequests": [
            "WebAclId",
            "RuleId",
            "TimeWindow",
            "MaxItems"
        ],
        "GetSizeConstraintSet": [
            "SizeConstraintSetId"
        ],
        "GetSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId"
        ],
        "GetWebACL": [
            "WebACLId"
        ],
        "GetWebACLForResource": [
            "ResourceArn"
        ],
        "GetXssMatchSet": [
            "XssMatchSetId"
        ],
        "ListActivatedRulesInRuleGroup": "",
        "ListByteMatchSets": "",
        "ListGeoMatchSets": "",
        "ListIPSets": "",
        "ListLoggingConfigurations": "",
        "ListRateBasedRules": "",
        "ListRegexMatchSets": "",
        "ListRegexPatternSets": "",
        "ListResourcesForWebACL": [
            "WebACLId"
        ],
        "ListRuleGroups": "",
        "ListRules": "",
        "ListSizeConstraintSets": "",
        "ListSqlInjectionMatchSets": "",
        "ListSubscribedRuleGroups": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListWebACLs": "",
        "ListXssMatchSets": "",
        "PutLoggingConfiguration": [
            "LoggingConfiguration"
        ],
        "PutPermissionPolicy": [
            "ResourceArn",
            "Policy"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateByteMatchSet": [
            "ByteMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateGeoMatchSet": [
            "GeoMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateIPSet": [
            "IPSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateRateBasedRule": [
            "RuleId",
            "ChangeToken",
            "Updates",
            "RateLimit"
        ],
        "UpdateRegexMatchSet": [
            "RegexMatchSetId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateRegexPatternSet": [
            "RegexPatternSetId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateRule": [
            "RuleId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateRuleGroup": [
            "RuleGroupId",
            "Updates",
            "ChangeToken"
        ],
        "UpdateSizeConstraintSet": [
            "SizeConstraintSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateSqlInjectionMatchSet": [
            "SqlInjectionMatchSetId",
            "ChangeToken",
            "Updates"
        ],
        "UpdateWebACL": [
            "WebACLId",
            "ChangeToken"
        ],
        "UpdateXssMatchSet": [
            "XssMatchSetId",
            "ChangeToken",
            "Updates"
        ]
    },
    "wafv2": {
        "AssociateWebACL": [
            "WebACLArn",
            "ResourceArn"
        ],
        "CheckCapacity": [
            "Scope",
            "Rules"
        ],
        "CreateAPIKey": [
            "Scope",
            "TokenDomains"
        ],
        "CreateIPSet": [
            "Name",
            "Scope",
            "IPAddressVersion",
            "Addresses"
        ],
        "CreateRegexPatternSet": [
            "Name",
            "Scope",
            "RegularExpressionList"
        ],
        "CreateRuleGroup": [
            "Name",
            "Scope",
            "Capacity",
            "VisibilityConfig"
        ],
        "CreateWebACL": [
            "Name",
            "Scope",
            "DefaultAction",
            "VisibilityConfig"
        ],
        "DeleteAPIKey": [
            "Scope",
            "APIKey"
        ],
        "DeleteFirewallManagerRuleGroups": [
            "WebACLArn",
            "WebACLLockToken"
        ],
        "DeleteIPSet": [
            "Name",
            "Scope",
            "Id",
            "LockToken"
        ],
        "DeleteLoggingConfiguration": [
            "ResourceArn"
        ],
        "DeletePermissionPolicy": [
            "ResourceArn"
        ],
        "DeleteRegexPatternSet": [
            "Name",
            "Scope",
            "Id",
            "LockToken"
        ],
        "DeleteRuleGroup": [
            "Name",
            "Scope",
            "Id",
            "LockToken"
        ],
        "DeleteWebACL": [
            "Name",
            "Scope",
            "Id",
            "LockToken"
        ],
        "DescribeAllManagedProducts": [
            "Scope"
        ],
        "DescribeManagedProductsByVendor": [
            "VendorName",
            "Scope"
        ],
        "DescribeManagedRuleGroup": [
            "VendorName",
            "Name",
            "Scope"
        ],
        "DisassociateWebACL": [
            "ResourceArn"
        ],
        "GenerateMobileSdkReleaseUrl": [
            "Platform",
            "ReleaseVersion"
        ],
        "GetDecryptedAPIKey": [
            "Scope",
            "APIKey"
        ],
        "GetIPSet": [
            "Name",
            "Scope",
            "Id"
        ],
        "GetLoggingConfiguration": [
            "ResourceArn"
        ],
        "GetManagedRuleSet": [
            "Name",
            "Scope",
            "Id"
        ],
        "GetMobileSdkRelease": [
            "Platform",
            "ReleaseVersion"
        ],
        "GetPermissionPolicy": [
            "ResourceArn"
        ],
        "GetRateBasedStatementManagedKeys": [
            "Scope",
            "WebACLName",
            "WebACLId",
            "RuleName"
        ],
        "GetRegexPatternSet": [
            "Name",
            "Scope",
            "Id"
        ],
        "GetRuleGroup": "",
        "GetSampledRequests": [
            "WebAclArn",
            "RuleMetricName",
            "Scope",
            "TimeWindow",
            "MaxItems"
        ],
        "GetWebACL": [
            "Name",
            "Scope",
            "Id"
        ],
        "GetWebACLForResource": [
            "ResourceArn"
        ],
        "ListAPIKeys": [
            "Scope"
        ],
        "ListAvailableManagedRuleGroupVersions": [
            "VendorName",
            "Name",
            "Scope"
        ],
        "ListAvailableManagedRuleGroups": [
            "Scope"
        ],
        "ListIPSets": [
            "Scope"
        ],
        "ListLoggingConfigurations": [
            "Scope"
        ],
        "ListManagedRuleSets": [
            "Scope"
        ],
        "ListMobileSdkReleases": [
            "Platform"
        ],
        "ListRegexPatternSets": [
            "Scope"
        ],
        "ListResourcesForWebACL": [
            "WebACLArn"
        ],
        "ListRuleGroups": [
            "Scope"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListWebACLs": [
            "Scope"
        ],
        "PutLoggingConfiguration": [
            "LoggingConfiguration"
        ],
        "PutManagedRuleSetVersions": [
            "Name",
            "Scope",
            "Id",
            "LockToken"
        ],
        "PutPermissionPolicy": [
            "ResourceArn",
            "Policy"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateIPSet": [
            "Name",
            "Scope",
            "Id",
            "Addresses",
            "LockToken"
        ],
        "UpdateManagedRuleSetVersionExpiryDate": [
            "Name",
            "Scope",
            "Id",
            "LockToken",
            "VersionToExpire",
            "ExpiryTimestamp"
        ],
        "UpdateRegexPatternSet": [
            "Name",
            "Scope",
            "Id",
            "RegularExpressionList",
            "LockToken"
        ],
        "UpdateRuleGroup": [
            "Name",
            "Scope",
            "Id",
            "VisibilityConfig",
            "LockToken"
        ],
        "UpdateWebACL": [
            "Name",
            "Scope",
            "Id",
            "DefaultAction",
            "VisibilityConfig",
            "LockToken"
        ]
    },
    "wellarchitected": {
        "AssociateLenses": [
            "WorkloadId",
            "LensAliases"
        ],
        "AssociateProfiles": [
            "WorkloadId",
            "ProfileArns"
        ],
        "CreateLensShare": [
            "LensAlias",
            "SharedWith",
            "ClientRequestToken"
        ],
        "CreateLensVersion": [
            "LensAlias",
            "LensVersion",
            "ClientRequestToken"
        ],
        "CreateMilestone": [
            "WorkloadId",
            "MilestoneName",
            "ClientRequestToken"
        ],
        "CreateProfile": [
            "ProfileName",
            "ProfileDescription",
            "ProfileQuestions",
            "ClientRequestToken"
        ],
        "CreateProfileShare": [
            "ProfileArn",
            "SharedWith",
            "ClientRequestToken"
        ],
        "CreateReviewTemplate": [
            "TemplateName",
            "Description",
            "Lenses",
            "ClientRequestToken"
        ],
        "CreateTemplateShare": [
            "TemplateArn",
            "SharedWith",
            "ClientRequestToken"
        ],
        "CreateWorkload": [
            "WorkloadName",
            "Description",
            "Environment",
            "Lenses",
            "ClientRequestToken"
        ],
        "CreateWorkloadShare": [
            "WorkloadId",
            "SharedWith",
            "PermissionType",
            "ClientRequestToken"
        ],
        "DeleteLens": [
            "LensAlias",
            "ClientRequestToken",
            "LensStatus"
        ],
        "DeleteLensShare": [
            "ShareId",
            "LensAlias",
            "ClientRequestToken"
        ],
        "DeleteProfile": [
            "ProfileArn",
            "ClientRequestToken"
        ],
        "DeleteProfileShare": [
            "ShareId",
            "ProfileArn",
            "ClientRequestToken"
        ],
        "DeleteReviewTemplate": [
            "TemplateArn",
            "ClientRequestToken"
        ],
        "DeleteTemplateShare": [
            "ShareId",
            "TemplateArn",
            "ClientRequestToken"
        ],
        "DeleteWorkload": [
            "WorkloadId",
            "ClientRequestToken"
        ],
        "DeleteWorkloadShare": [
            "ShareId",
            "WorkloadId",
            "ClientRequestToken"
        ],
        "DisassociateLenses": [
            "WorkloadId",
            "LensAliases"
        ],
        "DisassociateProfiles": [
            "WorkloadId",
            "ProfileArns"
        ],
        "ExportLens": [
            "LensAlias"
        ],
        "GetAnswer": [
            "WorkloadId",
            "LensAlias",
            "QuestionId"
        ],
        "GetConsolidatedReport": [
            "Format"
        ],
        "GetLens": [
            "LensAlias"
        ],
        "GetLensReview": [
            "WorkloadId",
            "LensAlias"
        ],
        "GetLensReviewReport": [
            "WorkloadId",
            "LensAlias"
        ],
        "GetLensVersionDifference": [
            "LensAlias"
        ],
        "GetMilestone": [
            "WorkloadId",
            "MilestoneNumber"
        ],
        "GetProfile": [
            "ProfileArn"
        ],
        "GetProfileTemplate": "",
        "GetReviewTemplate": [
            "TemplateArn"
        ],
        "GetReviewTemplateAnswer": [
            "TemplateArn",
            "LensAlias",
            "QuestionId"
        ],
        "GetReviewTemplateLensReview": [
            "TemplateArn",
            "LensAlias"
        ],
        "GetWorkload": [
            "WorkloadId"
        ],
        "ImportLens": [
            "JSONString",
            "ClientRequestToken"
        ],
        "ListAnswers": [
            "WorkloadId",
            "LensAlias"
        ],
        "ListCheckDetails": [
            "WorkloadId",
            "LensArn",
            "PillarId",
            "QuestionId",
            "ChoiceId"
        ],
        "ListCheckSummaries": [
            "WorkloadId",
            "LensArn",
            "PillarId",
            "QuestionId",
            "ChoiceId"
        ],
        "ListLensReviewImprovements": [
            "WorkloadId",
            "LensAlias"
        ],
        "ListLensReviews": [
            "WorkloadId"
        ],
        "ListLensShares": [
            "LensAlias"
        ],
        "ListLenses": "",
        "ListMilestones": [
            "WorkloadId"
        ],
        "ListNotifications": "",
        "ListProfileNotifications": "",
        "ListProfileShares": [
            "ProfileArn"
        ],
        "ListProfiles": "",
        "ListReviewTemplateAnswers": [
            "TemplateArn",
            "LensAlias"
        ],
        "ListReviewTemplates": "",
        "ListShareInvitations": "",
        "ListTagsForResource": [
            "WorkloadArn"
        ],
        "ListTemplateShares": [
            "TemplateArn"
        ],
        "ListWorkloadShares": [
            "WorkloadId"
        ],
        "ListWorkloads": "",
        "TagResource": [
            "WorkloadArn",
            "Tags"
        ],
        "UntagResource": [
            "WorkloadArn",
            "TagKeys"
        ],
        "UpdateAnswer": [
            "WorkloadId",
            "LensAlias",
            "QuestionId"
        ],
        "UpdateGlobalSettings": "",
        "UpdateLensReview": [
            "WorkloadId",
            "LensAlias"
        ],
        "UpdateProfile": [
            "ProfileArn"
        ],
        "UpdateReviewTemplate": [
            "TemplateArn"
        ],
        "UpdateReviewTemplateAnswer": [
            "TemplateArn",
            "LensAlias",
            "QuestionId"
        ],
        "UpdateReviewTemplateLensReview": [
            "TemplateArn",
            "LensAlias"
        ],
        "UpdateShareInvitation": [
            "ShareInvitationId",
            "ShareInvitationAction"
        ],
        "UpdateWorkload": [
            "WorkloadId"
        ],
        "UpdateWorkloadShare": [
            "ShareId",
            "WorkloadId",
            "PermissionType"
        ],
        "UpgradeLensReview": [
            "WorkloadId",
            "LensAlias",
            "MilestoneName"
        ],
        "UpgradeProfileVersion": [
            "WorkloadId",
            "ProfileArn"
        ],
        "UpgradeReviewTemplateLensReview": [
            "TemplateArn",
            "LensAlias"
        ]
    },
    "wisdom": {
        "CreateAssistant": [
            "name",
            "type"
        ],
        "CreateAssistantAssociation": [
            "assistantId",
            "association",
            "associationType"
        ],
        "CreateContent": [
            "knowledgeBaseId",
            "name",
            "uploadId"
        ],
        "CreateKnowledgeBase": [
            "knowledgeBaseType",
            "name"
        ],
        "CreateQuickResponse": [
            "content",
            "knowledgeBaseId",
            "name"
        ],
        "CreateSession": [
            "assistantId",
            "name"
        ],
        "DeleteAssistant": [
            "assistantId"
        ],
        "DeleteAssistantAssociation": [
            "assistantAssociationId",
            "assistantId"
        ],
        "DeleteContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "DeleteImportJob": [
            "importJobId",
            "knowledgeBaseId"
        ],
        "DeleteKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "DeleteQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ],
        "GetAssistant": [
            "assistantId"
        ],
        "GetAssistantAssociation": [
            "assistantAssociationId",
            "assistantId"
        ],
        "GetContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "GetContentSummary": [
            "contentId",
            "knowledgeBaseId"
        ],
        "GetImportJob": [
            "importJobId",
            "knowledgeBaseId"
        ],
        "GetKnowledgeBase": [
            "knowledgeBaseId"
        ],
        "GetQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ],
        "GetRecommendations": [
            "assistantId",
            "sessionId"
        ],
        "GetSession": [
            "assistantId",
            "sessionId"
        ],
        "ListAssistantAssociations": [
            "assistantId"
        ],
        "ListAssistants": "",
        "ListContents": [
            "knowledgeBaseId"
        ],
        "ListImportJobs": [
            "knowledgeBaseId"
        ],
        "ListKnowledgeBases": "",
        "ListQuickResponses": [
            "knowledgeBaseId"
        ],
        "ListTagsForResource": [
            "resourceArn"
        ],
        "NotifyRecommendationsReceived": [
            "assistantId",
            "recommendationIds",
            "sessionId"
        ],
        "QueryAssistant": [
            "assistantId",
            "queryText"
        ],
        "RemoveKnowledgeBaseTemplateUri": [
            "knowledgeBaseId"
        ],
        "SearchContent": [
            "knowledgeBaseId",
            "searchExpression"
        ],
        "SearchQuickResponses": [
            "knowledgeBaseId",
            "searchExpression"
        ],
        "SearchSessions": [
            "assistantId",
            "searchExpression"
        ],
        "StartContentUpload": [
            "contentType",
            "knowledgeBaseId"
        ],
        "StartImportJob": [
            "importJobType",
            "knowledgeBaseId",
            "uploadId"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateContent": [
            "contentId",
            "knowledgeBaseId"
        ],
        "UpdateKnowledgeBaseTemplateUri": [
            "knowledgeBaseId",
            "templateUri"
        ],
        "UpdateQuickResponse": [
            "knowledgeBaseId",
            "quickResponseId"
        ]
    },
    "workdocs": {
        "AbortDocumentVersionUpload": [
            "DocumentId",
            "VersionId"
        ],
        "ActivateUser": [
            "UserId"
        ],
        "AddResourcePermissions": [
            "ResourceId",
            "Principals"
        ],
        "CreateComment": [
            "DocumentId",
            "VersionId",
            "Text"
        ],
        "CreateCustomMetadata": [
            "ResourceId",
            "CustomMetadata"
        ],
        "CreateFolder": [
            "ParentFolderId"
        ],
        "CreateLabels": [
            "ResourceId",
            "Labels"
        ],
        "CreateNotificationSubscription": [
            "OrganizationId",
            "Endpoint",
            "Protocol",
            "SubscriptionType"
        ],
        "CreateUser": [
            "Username",
            "GivenName",
            "Surname",
            "Password"
        ],
        "DeactivateUser": [
            "UserId"
        ],
        "DeleteComment": [
            "DocumentId",
            "VersionId",
            "CommentId"
        ],
        "DeleteCustomMetadata": [
            "ResourceId"
        ],
        "DeleteDocument": [
            "DocumentId"
        ],
        "DeleteDocumentVersion": [
            "DocumentId",
            "VersionId",
            "DeletePriorVersions"
        ],
        "DeleteFolder": [
            "FolderId"
        ],
        "DeleteFolderContents": [
            "FolderId"
        ],
        "DeleteLabels": [
            "ResourceId"
        ],
        "DeleteNotificationSubscription": [
            "SubscriptionId",
            "OrganizationId"
        ],
        "DeleteUser": [
            "UserId"
        ],
        "DescribeActivities": "",
        "DescribeComments": [
            "DocumentId",
            "VersionId"
        ],
        "DescribeDocumentVersions": [
            "DocumentId"
        ],
        "DescribeFolderContents": [
            "FolderId"
        ],
        "DescribeGroups": [
            "SearchQuery"
        ],
        "DescribeNotificationSubscriptions": [
            "OrganizationId"
        ],
        "DescribeResourcePermissions": [
            "ResourceId"
        ],
        "DescribeRootFolders": [
            "AuthenticationToken"
        ],
        "DescribeUsers": "",
        "GetCurrentUser": [
            "AuthenticationToken"
        ],
        "GetDocument": [
            "DocumentId"
        ],
        "GetDocumentPath": [
            "DocumentId"
        ],
        "GetDocumentVersion": [
            "DocumentId",
            "VersionId"
        ],
        "GetFolder": [
            "FolderId"
        ],
        "GetFolderPath": [
            "FolderId"
        ],
        "GetResources": "",
        "InitiateDocumentVersionUpload": "",
        "RemoveAllResourcePermissions": [
            "ResourceId"
        ],
        "RemoveResourcePermission": [
            "ResourceId",
            "PrincipalId"
        ],
        "RestoreDocumentVersions": [
            "DocumentId"
        ],
        "SearchResources": "",
        "UpdateDocument": [
            "DocumentId"
        ],
        "UpdateDocumentVersion": [
            "DocumentId",
            "VersionId"
        ],
        "UpdateFolder": [
            "FolderId"
        ],
        "UpdateUser": [
            "UserId"
        ]
    },
    "worklink": {
        "AssociateDomain": [
            "FleetArn",
            "DomainName",
            "AcmCertificateArn"
        ],
        "AssociateWebsiteAuthorizationProvider": [
            "FleetArn",
            "AuthorizationProviderType"
        ],
        "AssociateWebsiteCertificateAuthority": [
            "FleetArn",
            "Certificate"
        ],
        "CreateFleet": [
            "FleetName"
        ],
        "DeleteFleet": [
            "FleetArn"
        ],
        "DescribeAuditStreamConfiguration": [
            "FleetArn"
        ],
        "DescribeCompanyNetworkConfiguration": [
            "FleetArn"
        ],
        "DescribeDevice": [
            "FleetArn",
            "DeviceId"
        ],
        "DescribeDevicePolicyConfiguration": [
            "FleetArn"
        ],
        "DescribeDomain": [
            "FleetArn",
            "DomainName"
        ],
        "DescribeFleetMetadata": [
            "FleetArn"
        ],
        "DescribeIdentityProviderConfiguration": [
            "FleetArn"
        ],
        "DescribeWebsiteCertificateAuthority": [
            "FleetArn",
            "WebsiteCaId"
        ],
        "DisassociateDomain": [
            "FleetArn",
            "DomainName"
        ],
        "DisassociateWebsiteAuthorizationProvider": [
            "FleetArn",
            "AuthorizationProviderId"
        ],
        "DisassociateWebsiteCertificateAuthority": [
            "FleetArn",
            "WebsiteCaId"
        ],
        "ListDevices": [
            "FleetArn"
        ],
        "ListDomains": [
            "FleetArn"
        ],
        "ListFleets": "",
        "ListTagsForResource": [
            "ResourceArn"
        ],
        "ListWebsiteAuthorizationProviders": [
            "FleetArn"
        ],
        "ListWebsiteCertificateAuthorities": [
            "FleetArn"
        ],
        "RestoreDomainAccess": [
            "FleetArn",
            "DomainName"
        ],
        "RevokeDomainAccess": [
            "FleetArn",
            "DomainName"
        ],
        "SignOutUser": [
            "FleetArn",
            "Username"
        ],
        "TagResource": [
            "ResourceArn",
            "Tags"
        ],
        "UntagResource": [
            "ResourceArn",
            "TagKeys"
        ],
        "UpdateAuditStreamConfiguration": [
            "FleetArn"
        ],
        "UpdateCompanyNetworkConfiguration": [
            "FleetArn",
            "VpcId",
            "SubnetIds",
            "SecurityGroupIds"
        ],
        "UpdateDevicePolicyConfiguration": [
            "FleetArn"
        ],
        "UpdateDomainMetadata": [
            "FleetArn",
            "DomainName"
        ],
        "UpdateFleetMetadata": [
            "FleetArn"
        ],
        "UpdateIdentityProviderConfiguration": [
            "FleetArn",
            "IdentityProviderType"
        ]
    },
    "workmail": {
        "AssociateDelegateToResource": [
            "OrganizationId",
            "ResourceId",
            "EntityId"
        ],
        "AssociateMemberToGroup": [
            "OrganizationId",
            "GroupId",
            "MemberId"
        ],
        "AssumeImpersonationRole": [
            "OrganizationId",
            "ImpersonationRoleId"
        ],
        "CancelMailboxExportJob": [
            "ClientToken",
            "JobId",
            "OrganizationId"
        ],
        "CreateAlias": [
            "OrganizationId",
            "EntityId",
            "Alias"
        ],
        "CreateAvailabilityConfiguration": [
            "OrganizationId",
            "DomainName"
        ],
        "CreateGroup": [
            "OrganizationId",
            "Name"
        ],
        "CreateImpersonationRole": [
            "OrganizationId",
            "Name",
            "Type",
            "Rules"
        ],
        "CreateMobileDeviceAccessRule": [
            "OrganizationId",
            "Name",
            "Effect"
        ],
        "CreateOrganization": [
            "Alias"
        ],
        "CreateResource": [
            "OrganizationId",
            "Name",
            "Type"
        ],
        "CreateUser": [
            "OrganizationId",
            "Name",
            "DisplayName"
        ],
        "DeleteAccessControlRule": [
            "OrganizationId",
            "Name"
        ],
        "DeleteAlias": [
            "OrganizationId",
            "EntityId",
            "Alias"
        ],
        "DeleteAvailabilityConfiguration": [
            "OrganizationId",
            "DomainName"
        ],
        "DeleteEmailMonitoringConfiguration": [
            "OrganizationId"
        ],
        "DeleteGroup": [
            "OrganizationId",
            "GroupId"
        ],
        "DeleteImpersonationRole": [
            "OrganizationId",
            "ImpersonationRoleId"
        ],
        "DeleteMailboxPermissions": [
            "OrganizationId",
            "EntityId",
            "GranteeId"
        ],
        "DeleteMobileDeviceAccessOverride": [
            "OrganizationId",
            "UserId",
            "DeviceId"
        ],
        "DeleteMobileDeviceAccessRule": [
            "OrganizationId",
            "MobileDeviceAccessRuleId"
        ],
        "DeleteOrganization": [
            "OrganizationId",
            "DeleteDirectory"
        ],
        "DeleteResource": [
            "OrganizationId",
            "ResourceId"
        ],
        "DeleteRetentionPolicy": [
            "OrganizationId",
            "Id"
        ],
        "DeleteUser": [
            "OrganizationId",
            "UserId"
        ],
        "DeregisterFromWorkMail": [
            "OrganizationId",
            "EntityId"
        ],
        "DeregisterMailDomain": [
            "OrganizationId",
            "DomainName"
        ],
        "DescribeEmailMonitoringConfiguration": [
            "OrganizationId"
        ],
        "DescribeEntity": [
            "OrganizationId",
            "Email"
        ],
        "DescribeGroup": [
            "OrganizationId",
            "GroupId"
        ],
        "DescribeInboundDmarcSettings": [
            "OrganizationId"
        ],
        "DescribeMailboxExportJob": [
            "JobId",
            "OrganizationId"
        ],
        "DescribeOrganization": [
            "OrganizationId"
        ],
        "DescribeResource": [
            "OrganizationId",
            "ResourceId"
        ],
        "DescribeUser": [
            "OrganizationId",
            "UserId"
        ],
        "DisassociateDelegateFromResource": [
            "OrganizationId",
            "ResourceId",
            "EntityId"
        ],
        "DisassociateMemberFromGroup": [
            "OrganizationId",
            "GroupId",
            "MemberId"
        ],
        "GetAccessControlEffect": [
            "OrganizationId",
            "IpAddress",
            "Action"
        ],
        "GetDefaultRetentionPolicy": [
            "OrganizationId"
        ],
        "GetImpersonationRole": [
            "OrganizationId",
            "ImpersonationRoleId"
        ],
        "GetImpersonationRoleEffect": [
            "OrganizationId",
            "ImpersonationRoleId",
            "TargetUser"
        ],
        "GetMailDomain": [
            "OrganizationId",
            "DomainName"
        ],
        "GetMailboxDetails": [
            "OrganizationId",
            "UserId"
        ],
        "GetMobileDeviceAccessEffect": [
            "OrganizationId"
        ],
        "GetMobileDeviceAccessOverride": [
            "OrganizationId",
            "UserId",
            "DeviceId"
        ],
        "ListAccessControlRules": [
            "OrganizationId"
        ],
        "ListAliases": [
            "OrganizationId",
            "EntityId"
        ],
        "ListAvailabilityConfigurations": [
            "OrganizationId"
        ],
        "ListGroupMembers": [
            "OrganizationId",
            "GroupId"
        ],
        "ListGroups": [
            "OrganizationId"
        ],
        "ListGroupsForEntity": [
            "OrganizationId",
            "EntityId"
        ],
        "ListImpersonationRoles": [
            "OrganizationId"
        ],
        "ListMailDomains": [
            "OrganizationId"
        ],
        "ListMailboxExportJobs": [
            "OrganizationId"
        ],
        "ListMailboxPermissions": [
            "OrganizationId",
            "EntityId"
        ],
        "ListMobileDeviceAccessOverrides": [
            "OrganizationId"
        ],
        "ListMobileDeviceAccessRules": [
            "OrganizationId"
        ],
        "ListOrganizations": "",
        "ListResourceDelegates": [
            "OrganizationId",
            "ResourceId"
        ],
        "ListResources": [
            "OrganizationId"
        ],
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "ListUsers": [
            "OrganizationId"
        ],
        "PutAccessControlRule": [
            "Name",
            "Effect",
            "Description",
            "OrganizationId"
        ],
        "PutEmailMonitoringConfiguration": [
            "OrganizationId",
            "RoleArn",
            "LogGroupArn"
        ],
        "PutInboundDmarcSettings": [
            "OrganizationId",
            "Enforced"
        ],
        "PutMailboxPermissions": [
            "OrganizationId",
            "EntityId",
            "GranteeId",
            "PermissionValues"
        ],
        "PutMobileDeviceAccessOverride": [
            "OrganizationId",
            "UserId",
            "DeviceId",
            "Effect"
        ],
        "PutRetentionPolicy": [
            "OrganizationId",
            "Name",
            "FolderConfigurations"
        ],
        "RegisterMailDomain": [
            "OrganizationId",
            "DomainName"
        ],
        "RegisterToWorkMail": [
            "OrganizationId",
            "EntityId",
            "Email"
        ],
        "ResetPassword": [
            "OrganizationId",
            "UserId",
            "Password"
        ],
        "StartMailboxExportJob": [
            "ClientToken",
            "OrganizationId",
            "EntityId",
            "RoleArn",
            "KmsKeyArn",
            "S3BucketName",
            "S3Prefix"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "TestAvailabilityConfiguration": [
            "OrganizationId"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateAvailabilityConfiguration": [
            "OrganizationId",
            "DomainName"
        ],
        "UpdateDefaultMailDomain": [
            "OrganizationId",
            "DomainName"
        ],
        "UpdateGroup": [
            "OrganizationId",
            "GroupId"
        ],
        "UpdateImpersonationRole": [
            "OrganizationId",
            "ImpersonationRoleId",
            "Name",
            "Type",
            "Rules"
        ],
        "UpdateMailboxQuota": [
            "OrganizationId",
            "UserId",
            "MailboxQuota"
        ],
        "UpdateMobileDeviceAccessRule": [
            "OrganizationId",
            "MobileDeviceAccessRuleId",
            "Name",
            "Effect"
        ],
        "UpdatePrimaryEmailAddress": [
            "OrganizationId",
            "EntityId",
            "Email"
        ],
        "UpdateResource": [
            "OrganizationId",
            "ResourceId"
        ],
        "UpdateUser": [
            "OrganizationId",
            "UserId"
        ]
    },
    "workmailmessageflow": {
        "GetRawMessageContent": [
            "messageId"
        ],
        "PutRawMessageContent": [
            "messageId",
            "content"
        ]
    },
    "workspaces": {
        "AssociateConnectionAlias": [
            "AliasId",
            "ResourceId"
        ],
        "AssociateIpGroups": [
            "DirectoryId",
            "GroupIds"
        ],
        "AssociateWorkspaceApplication": [
            "WorkspaceId",
            "ApplicationId"
        ],
        "AuthorizeIpRules": [
            "GroupId",
            "UserRules"
        ],
        "CopyWorkspaceImage": [
            "Name",
            "SourceImageId",
            "SourceRegion"
        ],
        "CreateConnectClientAddIn": [
            "ResourceId",
            "Name",
            "URL"
        ],
        "CreateConnectionAlias": [
            "ConnectionString"
        ],
        "CreateIpGroup": [
            "GroupName"
        ],
        "CreateStandbyWorkspaces": [
            "PrimaryRegion",
            "StandbyWorkspaces"
        ],
        "CreateTags": [
            "ResourceId",
            "Tags"
        ],
        "CreateUpdatedWorkspaceImage": [
            "Name",
            "Description",
            "SourceImageId"
        ],
        "CreateWorkspaceBundle": [
            "BundleName",
            "BundleDescription",
            "ImageId",
            "ComputeType",
            "UserStorage"
        ],
        "CreateWorkspaceImage": [
            "Name",
            "Description",
            "WorkspaceId"
        ],
        "CreateWorkspaces": [
            "Workspaces"
        ],
        "DeleteClientBranding": [
            "ResourceId",
            "Platforms"
        ],
        "DeleteConnectClientAddIn": [
            "AddInId",
            "ResourceId"
        ],
        "DeleteConnectionAlias": [
            "AliasId"
        ],
        "DeleteIpGroup": [
            "GroupId"
        ],
        "DeleteTags": [
            "ResourceId",
            "TagKeys"
        ],
        "DeleteWorkspaceBundle": "",
        "DeleteWorkspaceImage": [
            "ImageId"
        ],
        "DeployWorkspaceApplications": [
            "WorkspaceId"
        ],
        "DeregisterWorkspaceDirectory": [
            "DirectoryId"
        ],
        "DescribeAccount": "",
        "DescribeAccountModifications": "",
        "DescribeApplicationAssociations": [
            "ApplicationId",
            "AssociatedResourceTypes"
        ],
        "DescribeApplications": "",
        "DescribeBundleAssociations": [
            "BundleId",
            "AssociatedResourceTypes"
        ],
        "DescribeClientBranding": [
            "ResourceId"
        ],
        "DescribeClientProperties": [
            "ResourceIds"
        ],
        "DescribeConnectClientAddIns": [
            "ResourceId"
        ],
        "DescribeConnectionAliasPermissions": [
            "AliasId"
        ],
        "DescribeConnectionAliases": "",
        "DescribeImageAssociations": [
            "ImageId",
            "AssociatedResourceTypes"
        ],
        "DescribeIpGroups": "",
        "DescribeTags": [
            "ResourceId"
        ],
        "DescribeWorkspaceAssociations": [
            "WorkspaceId",
            "AssociatedResourceTypes"
        ],
        "DescribeWorkspaceBundles": "",
        "DescribeWorkspaceDirectories": "",
        "DescribeWorkspaceImagePermissions": [
            "ImageId"
        ],
        "DescribeWorkspaceImages": "",
        "DescribeWorkspaceSnapshots": [
            "WorkspaceId"
        ],
        "DescribeWorkspaces": "",
        "DescribeWorkspacesConnectionStatus": "",
        "DisassociateConnectionAlias": [
            "AliasId"
        ],
        "DisassociateIpGroups": [
            "DirectoryId",
            "GroupIds"
        ],
        "DisassociateWorkspaceApplication": [
            "WorkspaceId",
            "ApplicationId"
        ],
        "ImportClientBranding": [
            "ResourceId"
        ],
        "ImportWorkspaceImage": [
            "Ec2ImageId",
            "IngestionProcess",
            "ImageName",
            "ImageDescription"
        ],
        "ListAvailableManagementCidrRanges": [
            "ManagementCidrRangeConstraint"
        ],
        "MigrateWorkspace": [
            "SourceWorkspaceId",
            "BundleId"
        ],
        "ModifyAccount": "",
        "ModifyCertificateBasedAuthProperties": [
            "ResourceId"
        ],
        "ModifyClientProperties": [
            "ResourceId",
            "ClientProperties"
        ],
        "ModifySamlProperties": [
            "ResourceId"
        ],
        "ModifySelfservicePermissions": [
            "ResourceId",
            "SelfservicePermissions"
        ],
        "ModifyWorkspaceAccessProperties": [
            "ResourceId",
            "WorkspaceAccessProperties"
        ],
        "ModifyWorkspaceCreationProperties": [
            "ResourceId",
            "WorkspaceCreationProperties"
        ],
        "ModifyWorkspaceProperties": [
            "WorkspaceId"
        ],
        "ModifyWorkspaceState": [
            "WorkspaceId",
            "WorkspaceState"
        ],
        "RebootWorkspaces": [
            "RebootWorkspaceRequests"
        ],
        "RebuildWorkspaces": [
            "RebuildWorkspaceRequests"
        ],
        "RegisterWorkspaceDirectory": [
            "DirectoryId",
            "EnableWorkDocs"
        ],
        "RestoreWorkspace": [
            "WorkspaceId"
        ],
        "RevokeIpRules": [
            "GroupId",
            "UserRules"
        ],
        "StartWorkspaces": [
            "StartWorkspaceRequests"
        ],
        "StopWorkspaces": [
            "StopWorkspaceRequests"
        ],
        "TerminateWorkspaces": [
            "TerminateWorkspaceRequests"
        ],
        "UpdateConnectClientAddIn": [
            "AddInId",
            "ResourceId"
        ],
        "UpdateConnectionAliasPermission": [
            "AliasId",
            "ConnectionAliasPermission"
        ],
        "UpdateRulesOfIpGroup": [
            "GroupId",
            "UserRules"
        ],
        "UpdateWorkspaceBundle": "",
        "UpdateWorkspaceImagePermission": [
            "ImageId",
            "AllowCopyImage",
            "SharedAccountId"
        ]
    },
    "workspaces-thin-client": {
        "CreateEnvironment": [
            "desktopArn"
        ],
        "DeleteDevice": [
            "id"
        ],
        "DeleteEnvironment": [
            "id"
        ],
        "DeregisterDevice": [
            "id"
        ],
        "GetDevice": [
            "id"
        ],
        "GetEnvironment": [
            "id"
        ],
        "GetSoftwareSet": [
            "id"
        ],
        "ListDevices": "",
        "ListEnvironments": "",
        "ListSoftwareSets": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateDevice": [
            "id"
        ],
        "UpdateEnvironment": [
            "id"
        ],
        "UpdateSoftwareSet": [
            "id",
            "validationStatus"
        ]
    },
    "workspaces-web": {
        "AssociateBrowserSettings": [
            "browserSettingsArn",
            "portalArn"
        ],
        "AssociateIpAccessSettings": [
            "ipAccessSettingsArn",
            "portalArn"
        ],
        "AssociateNetworkSettings": [
            "networkSettingsArn",
            "portalArn"
        ],
        "AssociateTrustStore": [
            "portalArn",
            "trustStoreArn"
        ],
        "AssociateUserAccessLoggingSettings": [
            "portalArn",
            "userAccessLoggingSettingsArn"
        ],
        "AssociateUserSettings": [
            "portalArn",
            "userSettingsArn"
        ],
        "CreateBrowserSettings": [
            "browserPolicy"
        ],
        "CreateIdentityProvider": [
            "identityProviderDetails",
            "identityProviderName",
            "identityProviderType",
            "portalArn"
        ],
        "CreateIpAccessSettings": [
            "ipRules"
        ],
        "CreateNetworkSettings": [
            "securityGroupIds",
            "subnetIds",
            "vpcId"
        ],
        "CreatePortal": "",
        "CreateTrustStore": [
            "certificateList"
        ],
        "CreateUserAccessLoggingSettings": [
            "kinesisStreamArn"
        ],
        "CreateUserSettings": [
            "copyAllowed",
            "downloadAllowed",
            "pasteAllowed",
            "printAllowed",
            "uploadAllowed"
        ],
        "DeleteBrowserSettings": [
            "browserSettingsArn"
        ],
        "DeleteIdentityProvider": [
            "identityProviderArn"
        ],
        "DeleteIpAccessSettings": [
            "ipAccessSettingsArn"
        ],
        "DeleteNetworkSettings": [
            "networkSettingsArn"
        ],
        "DeletePortal": [
            "portalArn"
        ],
        "DeleteTrustStore": [
            "trustStoreArn"
        ],
        "DeleteUserAccessLoggingSettings": [
            "userAccessLoggingSettingsArn"
        ],
        "DeleteUserSettings": [
            "userSettingsArn"
        ],
        "DisassociateBrowserSettings": [
            "portalArn"
        ],
        "DisassociateIpAccessSettings": [
            "portalArn"
        ],
        "DisassociateNetworkSettings": [
            "portalArn"
        ],
        "DisassociateTrustStore": [
            "portalArn"
        ],
        "DisassociateUserAccessLoggingSettings": [
            "portalArn"
        ],
        "DisassociateUserSettings": [
            "portalArn"
        ],
        "GetBrowserSettings": [
            "browserSettingsArn"
        ],
        "GetIdentityProvider": [
            "identityProviderArn"
        ],
        "GetIpAccessSettings": [
            "ipAccessSettingsArn"
        ],
        "GetNetworkSettings": [
            "networkSettingsArn"
        ],
        "GetPortal": [
            "portalArn"
        ],
        "GetPortalServiceProviderMetadata": [
            "portalArn"
        ],
        "GetTrustStore": [
            "trustStoreArn"
        ],
        "GetTrustStoreCertificate": [
            "thumbprint",
            "trustStoreArn"
        ],
        "GetUserAccessLoggingSettings": [
            "userAccessLoggingSettingsArn"
        ],
        "GetUserSettings": [
            "userSettingsArn"
        ],
        "ListBrowserSettings": "",
        "ListIdentityProviders": [
            "portalArn"
        ],
        "ListIpAccessSettings": "",
        "ListNetworkSettings": "",
        "ListPortals": "",
        "ListTagsForResource": [
            "resourceArn"
        ],
        "ListTrustStoreCertificates": [
            "trustStoreArn"
        ],
        "ListTrustStores": "",
        "ListUserAccessLoggingSettings": "",
        "ListUserSettings": "",
        "TagResource": [
            "resourceArn",
            "tags"
        ],
        "UntagResource": [
            "resourceArn",
            "tagKeys"
        ],
        "UpdateBrowserSettings": [
            "browserSettingsArn"
        ],
        "UpdateIdentityProvider": [
            "identityProviderArn"
        ],
        "UpdateIpAccessSettings": [
            "ipAccessSettingsArn"
        ],
        "UpdateNetworkSettings": [
            "networkSettingsArn"
        ],
        "UpdatePortal": [
            "portalArn"
        ],
        "UpdateTrustStore": [
            "trustStoreArn"
        ],
        "UpdateUserAccessLoggingSettings": [
            "userAccessLoggingSettingsArn"
        ],
        "UpdateUserSettings": [
            "userSettingsArn"
        ]
    },
    "xray": {
        "BatchGetTraces": [
            "TraceIds"
        ],
        "CreateGroup": [
            "GroupName"
        ],
        "CreateSamplingRule": [
            "SamplingRule"
        ],
        "DeleteGroup": "",
        "DeleteResourcePolicy": [
            "PolicyName"
        ],
        "DeleteSamplingRule": "",
        "GetEncryptionConfig": "",
        "GetGroup": "",
        "GetGroups": "",
        "GetInsight": [
            "InsightId"
        ],
        "GetInsightEvents": [
            "InsightId"
        ],
        "GetInsightImpactGraph": [
            "InsightId",
            "StartTime",
            "EndTime"
        ],
        "GetInsightSummaries": [
            "StartTime",
            "EndTime"
        ],
        "GetSamplingRules": "",
        "GetSamplingStatisticSummaries": "",
        "GetSamplingTargets": [
            "SamplingStatisticsDocuments"
        ],
        "GetServiceGraph": [
            "StartTime",
            "EndTime"
        ],
        "GetTimeSeriesServiceStatistics": [
            "StartTime",
            "EndTime"
        ],
        "GetTraceGraph": [
            "TraceIds"
        ],
        "GetTraceSummaries": [
            "StartTime",
            "EndTime"
        ],
        "ListResourcePolicies": "",
        "ListTagsForResource": [
            "ResourceARN"
        ],
        "PutEncryptionConfig": [
            "Type"
        ],
        "PutResourcePolicy": [
            "PolicyName",
            "PolicyDocument"
        ],
        "PutTelemetryRecords": [
            "TelemetryRecords"
        ],
        "PutTraceSegments": [
            "TraceSegmentDocuments"
        ],
        "TagResource": [
            "ResourceARN",
            "Tags"
        ],
        "UntagResource": [
            "ResourceARN",
            "TagKeys"
        ],
        "UpdateGroup": "",
        "UpdateSamplingRule": [
            "SamplingRuleUpdate"
        ]
    }
}